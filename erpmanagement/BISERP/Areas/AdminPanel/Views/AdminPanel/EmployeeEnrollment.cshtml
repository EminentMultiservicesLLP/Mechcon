@model BISERP.Areas.AdminPanel.Models.EmployeeEnrollmentModel
@using (Html.BeginForm())
{
    <h5 class="page-header orangeDottedBottomBorder">User Enrollment Form</h5>
    @* new addition 2024 *@
    <div id="SearchGridModal" class="modal fade" role="dialog" data-backdrop="false">
        <div class="modal-dialog find-search-grid-modal">
            <div class="modal-content gridmodal-content">
                <div class="modal-header gridmodal-header">
                    <button type="button" class="close" onclick="closeModal()">&times;</button>
                    <h4 class="modal-title">User Details</h4>
                </div>
                <div class="modal-body">
                    <div class="fill">
                        <div id="Usergrid"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <fieldset>
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-groupingBoder">
                    <div class="panel-heading">
                        <a class="collapsediv" data-toggle="collapse" href="#collapse2" style="color: white">
                            User Creation
                        </a>
                    </div>

                    <div id="collapse2" class="panel-collapse collapse in" aria-expanded="true">
                        <div class="panel-body">
                            <div class="fill">
                                <div class="submit-row">
                                    <button type="button" class="btn btn-primary" id="btnAdd">Add New</button>
                                    <button type="button" class="btn btn-success" id="btnSave">Save</button>
                                    <button type="button" class="btn btn-warning" id="btnReset">Reset</button>
                                    <button type="button" class="btn btn-info" id="btnSearch">Find</button>
                                </div>
                                <fieldset class="fieldsetCustom">
                                    <legend class="legendCustom">User Form</legend>
                                    <div class="container-fluid">
                                        <div class="row">
                                            <div class="col-sm-12 col-md-4 col-lg-3">
                                                @Html.Label("User Code", htmlAttributes: new { @class = "" })
                                                @Html.TextBox("UserCode", "", new { @class = "form-control required" })
                                            </div>
                                            <div class="col-sm-12 col-md-4 col-lg-3">
                                                @Html.Label("Employee Name", htmlAttributes: new { @class = "required" })
                                                @Html.TextBoxFor(M => M.UserName, new { @class = "form-control required" })
                                                @Html.HiddenFor(M => M.UserID)
                                                @Html.HiddenFor(M => M.IsDeactive)
                                            </div>
                                            <div class="col-sm-12 col-md-4 col-lg-3">
                                                @Html.Label("User Name", htmlAttributes: new { @class = "required" })
                                                @Html.TextBoxFor(M => M.LoginName, new { @class = "form-control required" })
                                            </div>
                                            <div class="col-sm-12 col-md-4 col-lg-3">
                                                @Html.Label("Password", htmlAttributes: new { @class = "required" })
                                                @Html.PasswordFor(M => M.Password, new { @class = "form-control required" })
                                            </div>
                                            <div class="col-sm-12 col-md-4 col-lg-3">
                                                @Html.Label("Department", htmlAttributes: new { @class = "required" })
                                                @Html.DropDownListFor(M => M.DepartmentID, new SelectList(string.Empty, "Value", "Text"), "--Select Department--", new { @class = "form-control required" })
                                            </div>
                                            <div class="col-sm-12 col-md-4 col-lg-3">
                                                @Html.Label("Designation", htmlAttributes: new { @class = "required" })
                                                @Html.DropDownListFor(M => M.DesignationID, new SelectList(string.Empty, "Value", "Text"), "--Select Designation--", new { @class = "form-control required" })
                                            </div>
                                            <div class="col-sm-12 col-md-4 col-lg-3">
                                                @Html.Label("EmailId", htmlAttributes: new { @class = "required" })
                                                @Html.TextBoxFor(M => M.EmailId, new { @class = "form-control required" })
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>


                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
}
<script>
    $("#UserCode").prop('disabled', true);
    /****************Block Speacial Characters fn*******************/
    $("#UserName").keypress(function (e) {

        var regex = new RegExp("^[a-zA-Z \b]+$");//(/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/)
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }

        e.preventDefault();
        return false;
    });

    function loadDepartments() {
        $.ajax({
            type: "GET",
            url: "/EmployeeEnrollment/GetDepartments",
            dataType: "json",
            success: function (data) {
                const $departmentDropdown = $('#DepartmentID');
                $departmentDropdown.empty();

                if (data.error) {
                    $departmentDropdown.append('<option value="">--Error loading departments--</option>');
                    console.error("Error loading departments:", data.error);
                    return;
                }

                $departmentDropdown.append('<option value="">--Select Department--</option>');

                data.forEach(function (department) {
                    $departmentDropdown.append(`<option value="${department.DepartmentID}">${department.Department}</option>`);
                });
            },
            error: function (xhr, textStatus, errorThrown) {
                $('#DepartmentID').empty();
                $('#DepartmentID').append('<option value="">--Error loading departments--</option>');
                console.error("Error loading departments:", errorThrown);
            }
        });
    }

    function loadDesignations() {
        $.ajax({
            type: "GET",
            url: "/EmployeeEnrollment/GetDesignations",
            dataType: "json",
            success: function (data) {
                const $designationDropdown = $('#DesignationID');
                $designationDropdown.empty();

                if (data.error) {
                    $designationDropdown.append('<option value="">--Error loading designations--</option>');
                    console.error("Error loading designations:", data.error);
                    return;
                }

                $designationDropdown.append('<option value="">--Select Designation--</option>');

                data.forEach(function (designation) {
                    $designationDropdown.append(`<option value="${designation.DesignationID}">${designation.Designation}</option>`);
                });
            },
            error: function (xhr, textStatus, errorThrown) {
                $('#DesignationID').empty();
                $('#DesignationID').append('<option value="">--Error loading designations--</option>');
                console.error("Error loading designations:", errorThrown);
            }
        });
    }
    loadDepartments();
    loadDesignations();

    /****************GetUserCode Fn*******************/
    $("#btnAdd").click(function () {
        GetCode();
        Clearform();
        fieldsDisable(false);
    });

    function GetCode() {

        $('#Code').empty().html("");

        $.ajax({
            type: "GET",
            url: "/EmployeeEnrollment/GetUserCode",
            datatype: "Json",
            async: true,
            success: function (data) {
                $("#UserCode").val(data[0].UserCode);
            }
        });
    }
    /****************RowIndex Fn*******************/
    function getRowIndx() {
        var arr = $("#Usergrid").pqGrid('selection', { type: 'row', method: 'getSelection' });
        if (arr && arr.length > 0) {
            return arr[0].rowIndx;
        }
        else {
            alert("Select a row.");
            return null;
        }
    }
    /****************Get User Details and Grid Details Fn*******************/
    function GetUserDetails() {
        $.ajax({
            type: "GET",
            url: "/EmployeeEnrollment/GetUserDetails",
            datatype: "Json",
            async: true,
            success: function (data) {
                $("#Usergrid").pqGrid("option", "dataModel.data", data);
                $("#Usergrid").pqGrid("refreshDataAndView");
            }
        });
    }

    dataList = { location: 'local', sorting: 'local', paging: 'local', dataType: 'JSON' };
    var setUserCol = [
        { title: "UserID", dataIndx: "UserID", width: '7%' },
        {
            title: "User Code", dataIndx: "UserCode", width: '13%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Employee Name", dataIndx: "UserName", width: '30%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Department", dataIndx: "Department", width: '25%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Designation", dataIndx: "Designation", width: '25%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
    ];
    setUserList = {
        width: "auto", //auto width
        height: 400, //height in %age
        autoSizeInterval: 0,
        dragColumns: { enabled: false },
        hoverMode: 'cell',
        editable: false,
        filterModel: { on: true, mode: "AND", header: true },
        showTop: true,
        resizable: true,
        virtualX: true,
        colModel: setUserCol,
        selectionModel: { type: 'row', subtype: 'incr', cbHeader: true, cbAll: true },
        dataModel: dataList,
        pageModel: { type: "local", rPP: 20 },
        rowClick: function (evt, ui) {
            if (ui.rowData) {
                var rowIndx = parseInt(ui.rowIndx);
                var Details = ui.rowData;
                $("#UserCode").val(Details.UserCode);
                $("#UserName").val(Details.UserName);
                $("#UserID").val(Details.UserID);
                $("#LoginName").val(Details.LoginName);
                $("#Password").val(Details.Password);
                $("#DepartmentID").val(Details.DepartmentID);
                $("#DesignationID").val(Details.DesignationID);
                $("#EmailId").val(Details.EmailId);
                fieldsDisable(false);
                closeModal();
            }
        }
    };
    $("#Usergrid").pqGrid(setUserList);

    /****************User Deactivate Fn*******************/

    $('#btnDelete').on('click', function () {
        if ($("#UserName").val() == "") {
            ShowAlert("error", " Please Select the User to Deactivate");
            return;
        }
        var rowIndx = getRowIndx();
        if (rowIndx == null) {
            return;
        }
        $("#Usergrid").pqGrid("deleteRow", { rowIndx: rowIndx });
        var Details = JSON.stringify({
            UserCode: $("#UserCode").val(),
            UserName: $("#UserName").val(),
            UserID: $("#UserID").val(),


        });
        $.ajax(
            {
                type: "POST", //HTTP POST Method
                traditional: true,
                contentType: 'application/json; charset=utf-8',
                url: '/EmployeeEnrollment/DeleteUser', // Controller/View
                data: Details,
                success: function (msg) {

                    if (msg.success) {
                        Clearform();
                        ShowAlert("success", "Request Updated Successfully");
                    }
                    else {
                        ShowAlert("error", msg.Message);
                    }
                },
                error: function (jqXHR, exception) {
                }
            });
    });

    /***********Add Login Details Fn********************/

    function saveUser() {

        var Details = JSON.stringify({
            UserCode: $("#UserCode").val(),
            UserName: $("#UserName").val(),
            LoginName: $("#LoginName").val(),
            Password: $("#Password").val(),
            UserID: $("#UserID").val(),
            DepartmentID: $("#DepartmentID").val(),
            DesignationID: $("#DesignationID").val(),
            EmailId: $("#EmailId").val()
        });

        $.ajax(
            {
                type: "POST", //HTTP POST Method
                traditional: true,
                contentType: 'application/json; charset=utf-8',
                url: '/EmployeeEnrollment/SaveUser', // Controller/View
                data: Details,
                success: function (msg) {

                    if (msg.success) {
                        Clearform();
                        ShowAlert("success", "User Details Added Successfully");
                    }
                    else {
                        ShowAlert("warning", msg.Message);
                    }
                },
                error: function (jqXHR, exception) {
                }
            });
    }

    $("#btnSave").click(function () {

        if ($("#UserCode").val() == "") {
            ShowAlert("error", "UserCode cannot be empty");
            return;
        }
        if ($("#UserName").val() == "") {
            ShowAlert("error", "LoginName is missing! Please enter the Employee Name");
            return;
        }
        if ($("#LoginName").val() == "") {
            ShowAlert("error", "UserName is missing! Please enter the UserName");
            return;
        }
        if ($("#Password").val() == "") {
            ShowAlert("error", "Password is missing! Please enter the Password");
            return;
        }
        if ($("#DepartmentID").val() == "") {
            ShowAlert("error", "Department is missing! Please enter the Department");
            return;
        }
        if ($("#DesignationID").val() == "") {
            ShowAlert("error", "Designation is missing! Please enter the Designation");
            return;
        }
        if ($("#EmailId").val() == "") {
            ShowAlert("error", "EmailId is missing! Please enter the EmailId");
            return;
        }
        saveUser();
    });

    /****************Reset Complete Details Fn*******************/
    $("#btnReset").on("click", Clearform);

    function Clearform() {
        $("#LoginName").val("");
        $("#Password").val("");
        $("#PasswordValidate").val("");
        $("#UserName").val("");
        $("#UserCode").val("");
        $("#UserID").val("");
        $("#DepartmentID").val("");
        $("#DesignationID").val("");
        $("#EmailId").val("");
        fieldsDisable(true);
    }
    fieldsDisable(true);
    function fieldsDisable(state) {
        $("#UserName").prop("disabled", state);
        $("#LoginName").prop("disabled", state);
        $("#Password").prop("disabled", state);
        $("#DepartmentID").prop("disabled", state);
        $("#DesignationID").prop("disabled", state);
        $("#EmailId").prop("disabled", state);
    }
    $("#btnSearch").on('click', function () {
        $("#SearchGridModal").modal('show');
        GetUserDetails();
    });
    function closeModal() {
        $("#SearchGridModal").modal('hide');
    }
</script>