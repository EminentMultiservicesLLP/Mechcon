@model BISERP.Area.Branch.Models.MaterialIssueGuardModel
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>
        <div id="content">

            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-groupingBoder">
                        <div class="panel-heading">
                            <div class="panel-title">
                                <a class="collapsediv" data-toggle="collapse" href="#SearchDetails" style="color:white">
                                    Search Details
                                </a>
                            </div>
                        </div>
                        <div id="SearchDetails" class="panel-collapse collapse in" aria-expanded="true">
                            <div class="panel-body">
                                <div class="container fill">
                                    <div id="searchgrid"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-groupingBoder">
                        <div class="panel-heading">
                            <div class="panel-title">
                                Guard Issue Form
                            </div>
                        </div>
                        <div id="collapse2" class="panel-collapse collapse in" aria-expanded="true">
                            <div class="panel-body">
                                <div>
                                    <a data-toggle="collapse" class="btn btn-success" id="btnAdd">Reset</a>
                                    <button type="button" class="btn btn-success" id="btnSave">Save</button>
                                    @*<button type="button" class="btn btn-success">Report</button>*@
                                </div>
                                <br>
                                <div class="row">
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-3">
                                            @Html.LabelFor(m => m.IssueDate)
                                            @Html.TextBoxFor(m => m.IssueDate, new { @class = "form-control", @readonly = "true" })
                                            @Html.HiddenFor(m => m.IssueId)
                                            @Html.HiddenFor(m => m.EmpId)
                                            @Html.HiddenFor(m => m.BranchId)
                                        </div>
                                    </div>
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-3">
                                            @Html.LabelFor(m => m.IssueNo)
                                            @Html.TextBoxFor(m => m.IssueNo, new { @class = "form-control", @readonly = "true" })
                                        </div>
                                    </div>
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-3">
                                            @Html.LabelFor(m => m.EmpName)
                                            @Html.TextBoxFor(m => m.EmpName, new { @class = "form-control", @disabled = "true" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">                                    
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-3">
                                            @Html.LabelFor(m => m.StoreId, new { @class = "required" })
                                            @Html.TextBoxFor(m => m.StoreName, new { @class = "form-control", @readonly = "true" })
                                        </div>
                                    </div>
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-3">
                                            @Html.LabelFor(m => m.StartDate)
                                            @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", @readonly = "true" })
                                        </div>
                                    </div>
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-3">
                                            @Html.LabelFor(m => m.InstallmentPeriod)
                                            @Html.TextBoxFor(m => m.InstallmentPeriod, new { @class = "form-control", @readonly = "true" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div>
                                        <div class="col-sm-3">
                                            @Html.CheckBoxFor(m => m.IsRenewal)
                                            @Html.LabelFor(m => m.IsRenewal)
                                        </div>
                                    </div>
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-6">
                                            @Html.LabelFor(m => m.Remark)
                                            @Html.TextAreaFor(m => m.Remark, new { @class = "form-control", @readonly = "true" })
                                        </div>
                                    </div>

                                </div>
                                
                                <div class="row">
                                    <div class="container fill">
                                        <div id="grid"></div>
                                    </div>
                                </div>
                                <div class="row">
                                    @*<div class="col-sm-9"></div>*@
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-2">
                                            @Html.LabelFor(m => m.GrossAmount)
                                            @Html.TextBoxFor(m => m.GrossAmount, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-2">
                                            @Html.LabelFor(m => m.Discount)
                                            @Html.TextBoxFor(m => m.Discount, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-2">
                                            @Html.LabelFor(m => m.NetAmount)
                                            @Html.TextBoxFor(m => m.NetAmount, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-2">
                                            @Html.LabelFor(m => m.ReceivedAmount)
                                            @Html.TextBoxFor(m => m.ReceivedAmount, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group form-horizontal">
                                        <div class="col-sm-2">
                                            @Html.LabelFor(m => m.BalanceAmount)
                                            @Html.TextBoxFor(m => m.BalanceAmount, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
    <script type="text/javascript">
        var $IndentItemDetailsGrid;
        var $ItemListGrid;
        var setIID, colIID, dataIID;
        var colIL, dataIL, setIL;
        var $SearchGrid;
        function ClearForm() {
            $("#IssueId").val("");
            $("#IssueDate").val("");
            $("#StartDate").val("");            
            $("#IssueNo").val("");
            $("#ddlStore").val("");
            $("#Remark").val("");
            $("#Discount").val("");
            $("#NetAmount").val("");
            $("#NetAmount").val("");
            $("#BalanceAmount").val("");
            $("#ReceivedAmount").val("");
            $("#EmpName").val("");
            ClearParamGrid("grid");
        }
        function LoadSearchGrid() {
            $.ajax({
                url: "/MaterialIssueGuard/GetAllMaterialIssueGuard",
                cache: false,
                async: true,
                method: "GET",
                dataType: "JSON",
                success: function (response) {
                    $SearchGrid.pqGrid("option", "dataModel.data", response.mimodel);
                    $SearchGrid.pqGrid("refreshDataAndView");
                }
            });
        }
        function getRowIndx() {
            var arr = $IndentItemDetailsGrid.pqGrid('selection', { type: 'row', method: 'getSelection' });
            if (arr && arr.length > 0) {
                return arr[0].rowIndx;
            }
            else {
                alert("Select a row.");
                return null;
            }
        }
        function CalculateTotalAmount() {
            var getData = $IndentItemDetailsGrid.pqGrid("option", "dataModel.data");

            var grossAmt = 0, netAmount = 0, DiscountAmount = 0;
            $.each(getData, function (_, item) {
                if (!isNaN(item.Amount))
                    grossAmt += parseFloat(item.Amount);
                if (!isNaN(item.Discount))
                    DiscountAmount += parseFloat(item.Discount);
            });
            netAmount = parseFloat(grossAmt) - parseFloat(DiscountAmount);

            $("#GrossAmount").val(grossAmt.toFixed(2));
            $("#Discount").val(DiscountAmount.toFixed(2));
            $("#NetAmount").val(netAmount.toFixed(2));
            var receivedAmount = $("#ReceivedAmount").val();
            var balance = 0;
            if (netAmount > 0) {
                balance = netAmount - receivedAmount;
            }
            $("#BalanceAmount").val(balance);
            if (receivedAmount <= 0) {
                $("#ReceivedAmount").val(0);
            }
        }
        $(document).ready(function () {
            $("#GrossAmount").prop('disabled', true);
            $("#Discount").prop('disabled', true);
            $("#NetAmount").prop('disabled', true);
            $("#BalanceAmount").prop('disabled', true);
            $("#BalanceAmount").prop('disabled', true);
            $("#ReceivedAmount").keyup(function () {
                var netAmount = $("#NetAmount").val();
                var receivedAmount = $("#ReceivedAmount").val();
                var balance = 0;
                if (netAmount > 0) {
                    balance = netAmount - receivedAmount;
                }
                $("#BalanceAmount").val(balance);
            });
        });
        
        /********* Search Grid *********/
        $(document).ready(function () {
            var dataM = { location: "local", sorting: 'local' }
            var colM = [
                    { title: "", dataIndx: "IssueId", dataType: "integer", hidden: true },
                    { title: "", dataIndx: "StoreId", dataType: "integer", hidden: true },
                    { title: "", dataIndx: "BranchId", dataType: "integer", hidden: true },
                    { title: "", dataIndx: "BranchId", dataType: "integer", hidden: true },
                    { title: "", dataIndx: "IsRenewal", hidden: true },
                    {
                        title: "Issue No", dataIndx: "IssueNo", width: 400,
                        filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }
                    },
                    { title: "Issue Date", dataIndx: "strIssueDate", width: 200, dataType: "date" },
                    {
                        title: "Store", dataIndx: "StoreName", width: 200,
                        filter: {
                            type: "select",
                            condition: 'equal',
                            prepend: { '': '--Select--' },
                            valueIndx: "StoreName",
                            labelIndx: "StoreName",
                            listeners: ['change']
                        }
                    },
                    {
                        title: "Employee", dataIndx: "EmpName", width: 200, filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }
                    },
            ];

            var setM = {
                height: 250,
                sortable: false,
                numberCell: { show: false },
                hoverMode: 'cell',
                showTop: false,
                resizable: true,
                scrollModel: { autoFit: true },
                draggable: false,
                wrap: false,
                editable: false,
                columnBorders: true,
                filterModel: { on: true, mode: "AND", header: true },
                colModel: colM,
                dataModel: dataM,
                virtualX: true,
                virtualY:true,
                pageModel: { type: "local", rPP: 20 },
                rowClick: function (evt, ui) {
                    ClearParamGrid("grid");
                    if (ui.rowData) {
                        var rowIndx = parseInt(ui.rowIndx);
                        var record = ui.rowData;
                        $("#IssueDate").val(record.strIssueDate);
                        $("#IssueId").val(record.IssueId);
                        $("#IssueNo").val(record.IssueNo);
                        $("#InstallmentPeriod").val(record.InstallmentPeriod);
                        $("#EmpName").val(record.EmpName);
                        $("#StoreName").val(record.StoreName);
                        $("#StartDate").val(record.strStartDate);
                        $("#IsRenewal").prop('checked', record.IsRenewal);
                        $("#NetAmount").val(record.NetAmount);
                        $("#Discount").val(record.Discount);
                        $("#GrossAmount").val(record.GrossAmount);
                        $("#ReceivedAmount").val(record.ReceivedAmount);
                        $("#BalanceAmount").val(record.BalanceAmount);
                        $.ajax({
                            type: "GET",
                            url: "/MaterialIssueGuard/GetIssueGuardDetails/",
                            data: { IssueId: record.IssueId },
                            datatype: "Json",
                            success: function (data) {
                                console.log(data.dtmodel);
                                $IndentItemDetailsGrid.pqGrid("option", "dataModel.data", data.dtmodel);
                                $IndentItemDetailsGrid.pqGrid("refreshDataAndView");
                            }
                        });
                    }
                }
            };
            $SearchGrid = $("#searchgrid").pqGrid(setM)
            LoadSearchGrid();
        });

        (function ($) {
            /*************** Indent Item Details grid after row selection *************/
            var dateEditor = function (ui) {
                var $inp = ui.$cell.find("input"),
                    grid = this,
                    validate = function (that) {
                        var valid = grid.isValid({
                            dataIndx: ui.dataIndx,
                            value: $inp.val(),
                            rowIndx: ui.rowIndx
                        }).valid;
                        if (!valid) {
                            that.firstOpen = false;
                        }
                    };

                $inp.on("input", function (evt) {
                    validate(this);
                })
                .datepicker({
                    changeMonth: true,
                    changeYear: true,
                    showAnim: '',
                    onSelect: function () {
                        this.firstOpen = true;
                        validate(this);
                    },
                    beforeShow: function (input, inst) {
                        return !this.firstOpen;
                    },
                    onClose: function () {
                        this.focus();
                    }
                });
            }
            colIID = [
                    { title: "", dataIndx: "IndentDetails_Id", width: 10, dataType: "integer", editable: false, resizable: false, hidden: true },
                    { title: "", dataIndx: "ItemId", width: 10, dataType: "integer", editable: false, resizable: false, hidden: true },
                    { title: "", dataIndx: "BatchId", width: 10, dataType: "integer", editable: false, resizable: false, hidden: true },
                    { title: "Item Code", dataIndx: "ItemCode", width: 100, dataType: "string", resizable: false, hidden: true },
                    { title: "Item Name", dataIndx: "ItemName", width: 200, dataType: "string", resizable: false, editable: false },
                    { title: "Current Stock", dataIndx: "Item_Stock", width: 150, dataType: "string", resizable: false, editable: false },
                    { title: "MRP", dataIndx: "MRP", width: 100, resizable: false, dataType: "string", editable: false },
                    {
                        title: "Issue Qty", dataIndx: "IssuedQuantity", width: 200, dataType: "float", resizable: false, align: "left",
                        formula: function (ui) {
                            var rd = ui.rowData;
                            if (rd.IssuedQuantity == "" || rd.IssuedQuantity == undefined)
                                return 0
                            else
                                return rd.IssuedQuantity;
                        }
                    },
                    {
                        title: "Discount", dataIndx: "Discount", width: 150, dataType: "float", resizable: false,
                        formula: function (ui) {
                            var rd = ui.rowData;
                            if (rd.Discount == "" || rd.Discount == undefined)
                                return 0
                            else
                                return rd.Discount;
                        }
                    },
                    {
                        title: "Amount", dataIndx: "Amount", width: 150, resizable: false, dataType: "float", editable: false,
                        format: '##,###.00',
                        formula: function (ui) {
                            var rd = ui.rowData;
                            return (rd.MRP * rd.IssuedQuantity);
                        }
                    },
                    {
                        title: "Renew Date", width: "100", dataIndx: "strRenewDate", dataType: 'date',
                        format: 'dd-mm-yy',
                        editor: {
                            type: 'textbox',
                            init: dateEditor
                        },
                        validations: [
                            { type: 'regexp', value: '^[0-9]{2}/[0-9]{2}/[0-9]{4}$', msg: 'Not in dd/mm/yyyy format' }
                        ]
                    },
            ];
            dataIID = {
                location: 'local',
                sorting: 'local',
                paging: 'local',
                dataType: 'JSON'
            };

            setIID = {
                height: '300',
                maxheight: '400',
                title: "Item Details",
                sortable: false,
                numberCell: { show: false },
                selectionModel: { type: 'row' },
                hoverMode: 'cell',
                editor: { type: 'textbox' },
                showTop: true,
                resizable: true,
                editModel: {
                    saveKey: $.ui.keyCode.ENTER
                },
                cellSave: function (evt, ui) {
                    this.refreshRow(ui);
                    CalculateTotalAmount();
                },
                cellBeforeSave: function (event, ui) {
                    var dataIndx = ui.dataIndx, newVal = ui.newVal;
                    var data = ui.rowData;
                    if (dataIndx == 'IssuedQuantity') {
                        if (newVal > data.Item_Stock) {
                            return false;
                        }
                    }
                },
                draggable: false,
                colModel: colIID,
                dataModel: dataIID,
                virtualX: true,
                virtualY: true,
                pageModel: { type: "local", rPP: 20 },
            };
            $IndentItemDetailsGrid = $("#grid").pqGrid(setIID);
        })(jQuery);
    </script>
}
