@model BISERP.Areas.Marketing.Models.ResourceTargetModel
@Scripts.Render("~/bundles/jquerymodels")

<h5 class="page-header orangeDottedBottomBorder">Resource Target</h5>
<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-groupingBoder">
            <div class="panel-heading">
                <div class="panel-title">
                    <a class="collapsediv" data-toggle="collapse" href="#SearchDetails">
                        Resource Target
                    </a>
                </div>
            </div>
            <div id="SearchDetails" class="panel-collapse collapse in" aria-expanded="true">
                <div class="panel-body">
                    <div class="fill">
                        <div class="submit-row">
                            <button type="button" id="btnSave" class="btn btn-success" onclick="SaveResourceTarget()">Save</button>
                            <button type="button" class="btn btn-warning" id="btnResetT" onclick="clearFormData()">Clear</button>
                        </div>
                        <div class="row">
                            <div class="col-lg-2 col-md-4 col-sm-12 mb-3">
                                <label class="required" for="FinancialYearID">Financial Year</label>
                                <select id="FinancialYearID" name="FinancialYearID" class="form-control">
                                    <option value="">--Select Financial Year--</option>
                                </select>
                            </div>
                            <div class="col-lg-2 col-md-4 col-sm-12 mb-3">
                                <br />
                                <button type="button" id="btnGo" class="btn btn-primary" onclick="go()">Go</button>
                            </div>
                        </div>
                        <fieldset class="fieldsetCustom">
                            <legend class="legendCustom">Target Details</legend>
                            <div id="ResourceTargetGrid"></div>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        loadFinancialYear();
    });

    function loadFinancialYear() {
        $.ajax({
            type: "GET",
            url: "/ResourceTarget/GetFinancialYear",
            dataType: "json",
            success: function (data) {
                const $financialYearID = $('#FinancialYearID');
                $financialYearID.empty();

                if (data.error) {
                    $financialYearID.append('<option value="">--Error loading financial years--</option>');
                    console.error("Error loading financial years:", data.error);
                    return;
                }

                $financialYearID.append('<option value="">--Select Financial Year--</option>');
                data.forEach(function (financialYear) {
                    $financialYearID.append(`<option value="${financialYear.FinancialYearID}">${financialYear.FinancialYear}</option>`);
                });
            },
            error: function (xhr, textStatus, errorThrown) {
                $('#FinancialYearID').empty();
                $('#FinancialYearID').append('<option value="">--Error loading sources--</option>');
                console.error("Error loading sources:", errorThrown);
            }
        });
    }

    function go() {
        const financialYearID = $("#FinancialYearID").val();

        if (!financialYearID || financialYearID == 0) {
            ShowAlert("error", "Please select a Financial Year first.");
            return false;
        }

        loadResourceTargetGrid(financialYearID);
    }


    // ResourceTargetGrid configuration
    const ResourceTargetGrid_GDM = { location: "local" };

    const ResourceTargetGrid_GCM = [
        { title: "Resource", dataIndx: "Resource", width: 150, editable: false},
        { title: "Financial Year", dataIndx: "FinancialYear", width: 100, hidden: true },
        { title: "Target ID", dataIndx: "TargetID", width: 100, hidden: true },
        { title: "Financial Year ID", dataIndx: "FinancialYearID", width: 100, hidden: true },
        { title: "Resource ID", dataIndx: "ResourceID", width: 100, hidden: true },
        { title: "TargetEdited", dataIndx: "TargetEdited", width: 150, editable: false, hidden: true, dataType: 'int' },
        {
            title: "Target", dataIndx: "Target", width: 150, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 1 : ui.rowData.TargetEdited;
                if (targetEdited !== 1) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Apr", dataIndx: "Apr", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "May", dataIndx: "May", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Jun", dataIndx: "Jun", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Jul", dataIndx: "Jul", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Aug", dataIndx: "Aug", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Sep", dataIndx: "Sep", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Oct", dataIndx: "Oct", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Nov", dataIndx: "Nov", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Dec", dataIndx: "Dec", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Jan", dataIndx: "Jan", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Feb", dataIndx: "Feb", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        },
        {
            title: "Mar", dataIndx: "Mar", width: 100, format: '##,###.00', editable: true,
            render: function (ui) {
                const targetEdited = isNaN(ui.rowData.TargetEdited) ? 0 : ui.rowData.TargetEdited;
                if (targetEdited !== 0) {
                    return { style: 'pointer-events: none;' };
                }
            }
        }
    ];

    const setResourceTargetGrid = {
        height: 500,
        width: 'auto',
        maxWidth: '150%',
        minWidth: 800,
        sortable: true,
        autofill: true,
        numberCell: { show: true },
        hoverMode: 'row',
        showTop: true,
        showTitle: true,
        showBottom: true,
        resizable: true,
        scrollModel: { autoFit: true },
        filterModel: { on: false, mode: "AND", header: false },
        draggable: false,
        hwrap: false,
        wrap: false,
        editable: true,
        columnBorders: true,
        menuIcon: true,
        selectionModel: { type: 'row', mode: 'single', cbHeader: false },
        colModel: ResourceTargetGrid_GCM,
        dataModel: ResourceTargetGrid_GDM,
        pageModel: { type: "local", rPP: 20 },
        cellSave: function (evt, ui) {
            const grid = $("#ResourceTargetGrid").pqGrid();
            const gridData = grid.pqGrid("option", "dataModel.data");

            const oldValue = parseFloat(ui.oldVal) || 0;
            const newValue = parseFloat(ui.newVal) || 0;
            const months = ["Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar"];
            const MONTH_COUNT = months.length;

            if (ui.dataIndx === 'Target') {
                const perMonthValue = newValue / MONTH_COUNT;

                gridData[ui.rowIndx]['TargetEdited'] = (oldValue !== newValue) ? 1 : gridData[ui.rowIndx]['TargetEdited'];

                months.forEach(month => {
                    gridData[ui.rowIndx][month] = perMonthValue;
                });

            } else {
                gridData[ui.rowIndx]['TargetEdited'] = (oldValue !== newValue) ? 0 : gridData[ui.rowIndx]['TargetEdited'];

                const totalTarget = months.reduce((sum, month) => {
                    return sum + (parseFloat(gridData[ui.rowIndx][month]) || 0);
                }, 0);

                gridData[ui.rowIndx]['Target'] = totalTarget;
            }

            grid.pqGrid("option", "dataModel.data", gridData);
            grid.pqGrid("refreshDataAndView");
        }

    };

    // Initialize the grid
    const $ResourceTargetGrid = $("#ResourceTargetGrid").pqGrid(setResourceTargetGrid);

    function loadResourceTargetGrid(financialYearID) {
        const antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/ResourceTarget/GetResourceTargetDetail",
            data: { financialYearID: financialYearID },
            dataType: "json",
            beforeSend: function () {
                $("#ResourceTargetGrid").pqGrid("showLoading");
            },
            complete: function () {
                $("#ResourceTargetGrid").pqGrid("hideLoading");
            },
            success: function (response) {
                const grid = $("#ResourceTargetGrid").pqGrid();
                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }
                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading ResourceTargetGrid:", textStatus, errorThrown);
                $("#ResourceTargetGrid").pqGrid("hideLoading");
            }
        });
    }

    function SaveResourceTarget() {
        const financialYearID = $("#FinancialYearID").val();
        if (!financialYearID) {
            ShowAlert("error", "Please select a Financial Year first!");
            return;
        }

        const Details = {
            FinancialYearID: financialYearID,
            ResourceTargetList: $("#ResourceTargetGrid").pqGrid("option", "dataModel.data")
        };
        const antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            url: "/ResourceTarget/SaveResourceTargetDetail",
            data: JSON.stringify(Details),
            success: function (response) {
                if (response.success) {
                    ShowAlert("success", "Target details saved successfully!");
                    clearFormData();
                } else {
                    ShowAlert("error", response.message);
                }
            },
            error: function (xhr, status, error) {
                ShowAlert("error", "An unexpected error occurred: " + (xhr.responseText || error));
            }
        });
    }

    function clearFormData() {
        $("#FinancialYearID").val('');
        ClearParamGrid('ResourceTargetGrid');
    }
</script>
