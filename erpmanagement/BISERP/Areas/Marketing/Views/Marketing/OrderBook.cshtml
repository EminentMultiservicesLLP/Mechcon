@Scripts.Render("~/bundles/jquerymodels")
<script>
    $(function () {
        $(".datepicker").datepicker({
            showOn: "button",
            buttonImage: "/Content/images/calendar.gif",
            buttonImageOnly: true,
            buttonText: "Selectdate",
            'changeMonth': true,
            'changeYear': true,
            'yearRange': '2021:2030',
            "format": "dd-M-yyyy",
            todayBtn: "linked",
            pickerPosition: "bottom-left",
            "todayHighlight": true,
            autoclose: true,
        });
        $("#anim").change(function () {
            $(".datepicker").datepicker("option", "showAnim", "fadeIn");
        });
    });
</script>
<h5 class="page-header orangeDottedBottomBorder">Order Book</h5>

<div id="SearchGridModal" class="modal fade" role="dialog" data-backdrop="false">
    <div class="modal-dialog find-search-grid-modal">
        <div class="modal-content gridmodal-content">
            <div class="modal-header gridmodal-header">
                <button type="button" class="close" onclick="closeModal()">&times;</button>
                <h4 class="modal-title">Order Book Details.</h4>
            </div>
            <div class="modal-body">
                <div class="fill">
                    <div id="OrderBookGrid"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-groupingBoder">
            <div class="panel-heading">
                <div class="panel-title">
                    <a class="collapsediv" data-toggle="collapse" href="#SearchDetails">
                        Order Book
                    </a>
                </div>
            </div>
            <div id="SearchDetails" class="panel-collapse collapse in" aria-expanded="true">
                <div class="panel-body">
                    <div class="fill">
                        <div class="submit-row">
                            <button type="button" id="btnSave" class="btn btn-success" onclick="SaveOrderBook()">Save</button>
                            <button type="button" class="btn btn-warning" id="btnResetT" onclick="clearFormData()">Clear</button>
                            <button type="button" id="btnFind" class="btn btn-primary" onclick="showModal()">Find</button>
                        </div>

                        <div class="row">
                            <div class="col-lg-4 col-md-6 col-sm-12 mb-3">
                                <label for="EnquiryLabel" class="required">Enquiry</label>
                                <input id="EnquiryLabel" class="form-control" type="text" placeholder="Search by - (EnquiryNo) | (ClientName) | (EnquiryDate) | (AllocatedTo)">
                                <input type="hidden" id="EnquiryID">
                            </div>

                        </div>

                        <div class="divider"></div>
                        <fieldset class="fieldsetCustom">
                            <legend class="legendCustom">Enquiry Details</legend>

                            <div class="row">
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="EnquiryNo">Enquiry No</label>
                                    <input type="text" id="EnquiryNo" class="form-control" placeholder="Enquiry No" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="EnquiryDate">Enquiry Date</label>
                                    <input type="text" id="EnquiryDate" class="form-control" placeholder="Enquiry Date" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Source">Source</label>
                                    <input type="text" id="Source" class="form-control" placeholder="Enquiry Source" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Product">Product</label>
                                    <input type="text" id="Product" class="form-control" placeholder="Enquiry Product" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Location">Location</label>
                                    <input type="text" id="Location" class="form-control" placeholder="Enquiry Location" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Type">Type</label>
                                    <input type="text" id="Type" class="form-control" placeholder="Enquiry Type" disabled>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Sector">Sector</label>
                                    <input type="text" id="Sector" class="form-control" placeholder="Enquiry Sector" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Zone">Zone</label>
                                    <input type="text" id="Zone" class="form-control" placeholder="Enquiry Zone" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="ClientName">Client Name</label>
                                    <input type="text" id="ClientName" class="form-control" placeholder="Enquiry Client Name" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="ContactPerson">Contact Person</label>
                                    <input type="text" id="ContactPerson" class="form-control" placeholder="Enquiry Contact Person" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="ContactNo">Contact Number</label>
                                    <input type="text" id="ContactNo" class="form-control" placeholder="Enquiry Contact Number" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="EmailID">Email Address</label>
                                    <input type="email" id="EmailID" class="form-control" placeholder="Enquiry Email Address" disabled>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Place">Place</label>
                                    <input type="text" id="Place" class="form-control" placeholder="Enquiry Place" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Status">Status</label>
                                    <input type="text" id="Status" class="form-control" placeholder="Enquiry Status" disabled>
                                </div>
                                <div class="col-lg-4 col-md-8 col-sm-12 col-xs-12">
                                    <label for="CustomerMailMsg">Customer Message</label>
                                    <textarea id="CustomerMailMsg" class="form-control" placeholder="Enquiry Customer Message" rows="4" disabled></textarea>
                                </div>
                            </div>
                        </fieldset>
                        <div class="divider"></div>

                        <fieldset class="fieldsetCustom">
                            <legend class="legendCustom">Summary</legend>
                            <div class="row">
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 mb-3">
                                    <label for="PONo" class="required">PO No</label>
                                    <input type="text" id="PONo" class="form-control" placeholder="PO No">
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-12 mb-3">
                                    <label for="PODate" class="required">PO Date</label>
                                    <input type="text" id="PODate" class="form-control datepicker" placeholder="PO Date">
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 mb-3">
                                    <label for="POBaseValue" class="required">PO Value</label>
                                    <input type="text" id="POBaseValue" class="form-control" placeholder="PO Value">
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-12 mb-3">
                                    <label for="PIAdvSubmitDate" class="">PI Submission date for advance</label>
                                    <input type="text" id="PIAdvSubmitDate" class="form-control datepicker" placeholder="PI Submission date for advance">
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-12 mb-3">
                                    <label for="ABGSubmitDate" class="required">ABG Submit Date</label>
                                    <input type="text" id="ABGSubmitDate" class="form-control datepicker" placeholder="ABG Submission Date">
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-12 mb-3">
                                    <label for="PIABGAdvSubmitDate" class="">PI Submission date for ABG advance</label>
                                    <input type="text" id="PIABGAdvSubmitDate" class="form-control datepicker" placeholder="PI Submission date for ABG advance">
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-12 mb-3" hidden>
                                    <label class="required" for="IncoTermID">IncoTerm</label>
                                    <select id="IncoTermID" name="IncoTermID" class="form-control">
                                        <option value="">--Select IncoTerm--</option>
                                    </select>
                                </div>
                            </div>
                        </fieldset>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-groupingBoder">
            <div class="panel-heading">
                <div class="panel-title">
                    <a class="collapsediv" data-toggle="collapse" href="#content" style="color:white">
                        Add Terms
                    </a>
                </div>
            </div>
            <div id="content">
                <div id="content-tab">
                    <ul id="tabs" class="nav nav-tabs" data-tabs="tabs" style="padding: 1px;">
                        <li class="active tab"><a href="#tab1" data-toggle="tab" style="margin: 0;">Project T & C</a></li>
                        <li><a href="#tab2" data-toggle="tab" style="margin: 0;">Payment Terms</a></li>
                        <li><a href="#tab3" data-toggle="tab" style="margin: 0;">Delivery Terms</a></li>
                    </ul>
                    <fieldset class="fieldsetCustom">
                        <div id="my-tab-content" class="tab-content" style="border:none">
                            <div class="tab-pane active" id="tab1">
                                <br>
                                <div class="form-group" align="left">
                                    <button type="button" class="btn btn-primary" id="btnViewProjectTC">Add Term</button>
                                    <button type="button" class="btn btn-danger" id="btnRemoveProjectTC">Remove Term</button>
                                </div>
                                <div id="ProjectTCgrid"></div>
                            </div>
                            <div class="tab-pane" id="tab2">
                                <br>
                                <div class="form-group" align="left">
                                    <button type="button" class="btn btn-primary" id="btnViewPayTerms">Add Term</button>
                                    <button type="button" class="btn btn-danger" id="btnRemovePayTerms">Remove Term</button>
                                </div>
                                <div id="PaymentTermgrid"></div>
                            </div>
                            <div class="tab-pane" id="tab3">
                                <br>
                                <div class="form-group" align="left">
                                    <button type="button" class="btn btn-primary" id="btnViewDelTerms">Add Term</button>
                                    <button type="button" class="btn btn-danger" id="btnRemoveDelTerms">Remove Term</button>
                                </div>
                                <div id="DeliveryTermgrid"></div>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="ProjectTCModal" title="Select Other Terms" style="display: none;">
    <div id="SearchProjectTCgrid"></div>
    <button type="button" class="btn btn-primary" data-dismiss="modal" id="btnAddProjectTC">Add</button>
    <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="closeTermModal()">Close</button>
</div>

<div id="PaymentItemModal" title="Select Payment Terms" style="display: none;">
    <div id="SearchPaymentTermgrid"></div>
    <button type="button" class="btn btn-primary" data-dismiss="modal" id="btnAddPaymentTerm">Add</button>
    <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="closeTermModal()">Close</button>
</div>

<div id="DeliveryItemModal" title="Select Delivery Terms" style="display: none;">
    <div id="SearchDeliveryTermgrid"></div>
    <button type="button" class="btn btn-primary" data-dismiss="modal" id="btnAddDeliveryTerm">Add</button>
    <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="closeTermModal()">Close</button>
</div>

<script>
     var appSetting = '@BISERP.Common.Constants.ScandocUrl';
    var tempOrderBookID = 0;
    var tempOfferID = 0;

    function getEnquiry() {
        $("#EnquiryLabel").autocomplete({
            source: [],
            minLength: 0,
            select: handleEnquirySelection,
            change: handleEnquirySelection,
        });

        $.ajax({
            type: "GET",
            url: "/OrderBook/GetEnqForOrderBook",
            dataType: "json",
            success: function (response) {
                if (response.success && response.records.length > 0) {
                    const suggestions = response.records.map(({ EnquiryID, EnquiryNo, ClientName, strEnquiryDate, AllocatedToName }) => ({
                        label: `(${EnquiryNo}) | (${ClientName}) | (${strEnquiryDate}) | (${AllocatedToName})`,
                        value: EnquiryID
                    }));

                    $("#EnquiryLabel").autocomplete("option", "source", suggestions);
                } else {
                    $("#EnquiryLabel").autocomplete("option", "source", [{ label: "--No Enquiry Found--", value: "" }]);
                }
            },
            error: function () {
                $("#EnquiryLabel").autocomplete("option", "source", [{ label: "--Error loading enquiries--", value: "" }]);
            }
        });
    }
    function handleEnquirySelection(event, ui) {
        event.preventDefault();
        const $enquiryLabel = $(event.target);
        const $enquiryID = $("#EnquiryID");

        if (ui.item && ui.item.value) {
            if (ui.item.label === "--No Enquiry Found--" || ui.item.label === "--Error loading enquiries--") {
                $enquiryLabel.val('');
                $enquiryID.val('').trigger('change');
            } else {
                $enquiryLabel.val(ui.item.label);
                $enquiryID.val(ui.item.value).trigger('change');
            }
        } else {
            $enquiryLabel.val('');
            $enquiryID.val('').trigger('change');
        }
    }
    $("#EnquiryLabel").on("focus", function () {
        $(this).autocomplete("search", "");
    });

    $("#EnquiryID").change(() => {
        const enquiryID = $("#EnquiryID").val();
        if (enquiryID && enquiryID != 0) {
            GetEnquiryDetails(enquiryID);
            GetFinalOffer(enquiryID);
        } else {
            clearEnquiryDetails();
        }
    });


    function loadIncoTerm() {
        $.ajax({
            type: "GET",
            url: "/OrderBook/GetIncoTerm",
            dataType: "json",
            success: function (data) {
                const $incoTermDropdown = $('#IncoTermID');
                $incoTermDropdown.empty();

                if (data.error) {
                    $incoTermDropdown.append('<option value="">--Error loading incoTermes--</option>');
                    console.error("Error loading incoTermes:", data.error);
                    return;
                }

                $incoTermDropdown.append('<option value="">--Select IncoTerm--</option>');

                data.forEach(function (incoTerm) {
                    $incoTermDropdown.append(`<option value="${incoTerm.IncoTermID}">${incoTerm.IncoTermCode}</option>`);
                });
            },
            error: function (xhr, textIncoTerm, errorThrown) {
                $('#IncoTermID').empty();
                $('#IncoTermID').append('<option value="">--Error loading incoTermes--</option>');
                console.error("Error loading incoTermes:", errorThrown);
            }
        });
    }

    function GetEnquiryDetails(enquiryID) {
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/EnquiryRegister/GetEnquiryDetails",
            data: { EnquiryID: enquiryID },
            dataType: "json",
            success: function (response) {
                if (response.success) {
                    const details = response.record;

                    $("#EnquiryNo").val(details.EnquiryNo);
                    $("#EnquiryDate").val(details.strEnquiryDate);
                    $("#Source").val(details.Source);
                    $("#Product").val(details.Product);
                    $("#ProductID").val(details.ProductID);
                    $("#Location").val(details.Location);
                    $("#Type").val(details.Type);
                    $("#Sector").val(details.Sector);
                    $("#Zone").val(details.Zone);
                    $("#Status").val(details.Status);
                    $("#StatusID").val(details.StatusID);
                    $("#ClientName").val(details.ClientName);
                    $("#Place").val(details.Place);
                    $("#ContactPerson").val(details.ContactPerson);
                    $("#ContactNo").val(details.ContactNo);
                    $("#EmailID").val(details.EmailID);
                    $("#CustomerMailMsg").val(details.CustomerMailMsg);
                } else {
                    console.warn("No details found or an issue occurred: ", response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error loading enquiry details: ", status, error);
            }
        });
    }

    function GetFinalOffer(enquiryID) {
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetFinalOffer",
            data: { EnquiryID: enquiryID },
            dataType: "json",
            success: function (response) {
                if (response.success) {
                    const details = response.record;
                    $("#POBaseValue").val(details.POBaseValue);
                    tempOfferID = details.OfferID;
                } else {
                    console.warn("No details found or an issue occurred: ", response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error loading enquiry details: ", status, error);
            }
        });
    }

    //-----------------------------------OrderBookGrid (Starts here)-----------------------------------//
    var OrderBookGrid_GDM = { location: "local" };

    var OrderBookGrid_GCM = [
        {
            title: "Enquiry No", dataIndx: "EnquiryNo", width: '30%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Enquiry Date", dataIndx: "strEnquiryDate", width: '20%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Client Name", dataIndx: "ClientName", width: '30%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Project Code", dataIndx: "ProjectCode", width: '20%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        }
    ];

    var setOrderBookGrid = {
        height: 300,
        width: 'auto',
        maxWidth: '100%',
        minWidth: 800,
        sortable: true,
        autofill: true,
        numberCell: { show: true },
        hoverMode: 'row',
        showTop: true,
        showTitle: true,
        showBottom: true,
        resizable: true,
        //scrollModel: { autoFit: true },
        filterModel: { on: true, mode: "AND", header: true },
        draggable: false,
        hwrap: false,
        wrap: false,
        editable: false,
        columnBorders: true,
        menuIcon: true,
        selectionModel: { type: 'row', mode: 'single', cbHeader: false },
        colModel: OrderBookGrid_GCM,
        dataModel: OrderBookGrid_GDM,
        pageModel: { type: "local" },
        rowClick: function (evt, ui) {
            if (ui.rowData) {
                const data = ui.rowData;
                clearFormData(true);
                closeModal();
                tempOrderBookID = data.OrderBookID;
                tempOfferID = data.OfferID;

                const $enquiryLabel = $('#EnquiryLabel');
                const $enquiryID = $('#EnquiryID');
                $enquiryLabel.val(`(${data.EnquiryNo}) | (${data.ClientName}) | (${data.strEnquiryDate})`);
                $enquiryID.val(data.EnquiryID);
                $enquiryLabel.prop('disabled', true);

                $("#PONo").val(data.PONo);
                $("#PODate").datepicker("setDate", data.strPODate);
                $("#POBaseValue").val(data.POBaseValue);
                $("#PIAdvSubmitDate").datepicker("setDate", data.strPIAdvSubmitDate);
                $("#ABGSubmitDate").datepicker("setDate", data.strABGSubmitDate);
                $("#PIABGAdvSubmitDate").datepicker("setDate", data.strPIABGAdvSubmitDate);
                $("#IncoTermID").val(data.IncoTermID);

                GetEnquiryDetails(data.EnquiryID);
                loadOrderBookProjectTCGrid(tempOrderBookID);
                loadOrderBookPaymentTermsGrid(tempOrderBookID);
                loadOrderBookDeliveryTermsGrid(tempOrderBookID);
            }
        }
    }

    var $OrderBookGrid = $("#OrderBookGrid").pqGrid(setOrderBookGrid);

    function loadOrderBookGrid() {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOrderBook",
            dataType: "json",

            beforeSend: function () {
                $("#OrderBookGrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#OrderBookGrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#OrderBookGrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading OrderBook grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#OrderBookGrid").pqGrid("hideLoading");
            }
        });

    }
    //-----------------------------------OrderBookGrid (Ends here)-----------------------------------//

    function loadOrderBookProjectTCGrid(orderBookID) {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOrderBookProjectTC",
            data: { OrderBookID: orderBookID },
            dataType: "json",

            beforeSend: function () {
                $("#ProjectTCgrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#ProjectTCgrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#ProjectTCgrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading OrderBookProjectTC grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#ProjectTCgrid").pqGrid("hideLoading");
            }
        });
    }

    function loadOrderBookPaymentTermsGrid(orderBookID) {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOrderBookPaymentTerms",
            data: { OrderBookID: orderBookID },
            dataType: "json",

            beforeSend: function () {
                $("#PaymentTermgrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#PaymentTermgrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#PaymentTermgrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading OrderBookPaymentTerms grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#PaymentTermgrid").pqGrid("hideLoading");
            }
        });
    }

    function loadOrderBookDeliveryTermsGrid(orderBookID) {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOrderBookDeliveryTerms",
            data: { OrderBookID: orderBookID },
            dataType: "json",

            beforeSend: function () {
                $("#DeliveryTermgrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#DeliveryTermgrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#DeliveryTermgrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading OrderBookDeliveryTerms grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#DeliveryTermgrid").pqGrid("hideLoading");
            }
        });
    }

    function validateFormData() {
        const fields = [
            { selector: "#EnquiryID", placeholder: "Enquiry" },
            { selector: "#PONo", placeholder: "PO No" },
            { selector: "#PODate", placeholder: "PO Date" },
            { selector: "#POBaseValue", placeholder: "PO Value" },
            { selector: "#ABGSubmitDate", placeholder: "ABG Submit Date" },
            //{ selector: "#IncoTermID", placeholder: "IncoTerm" },
        ];

        for (const { selector, placeholder } of fields) {
            const $field = $(selector);
            const fieldValue = $field.val();
            const fieldPlaceholder = $field.attr("placeholder") || placeholder;

            if (!fieldValue) {
                ShowAlert("error", `${fieldPlaceholder} is required!`);
                return false;
            }
        }

        const piAdvSubmitDate = $("#PIAdvSubmitDate").val();
        const piAbgAdvSubmitDate = $("#PIABGAdvSubmitDate").val();

        if (!piAdvSubmitDate && !piAbgAdvSubmitDate) {
            ShowAlert("error", "<b>One of the following is required:</b> <br/>(PI Submission date for ABG prepayment) <b> OR </b> (PI Submission date for advance payment).");
            return false;
        }

        return true;
    }


    function SaveOrderBook() {
        if (!validateFormData()) {
            return false;
        }

        let projectTCData = $ProjectTCgrid.pqGrid("option", "dataModel.data").filter(item => item.State);
        let paygridData = $PaymentTermgrid.pqGrid("option", "dataModel.data").filter(item => item.State);
        let delgridData = $DeliveryTermgrid.pqGrid("option", "dataModel.data").filter(item => item.State);

        const Details = {
            OrderBookID: tempOrderBookID,
            EnquiryID: $("#EnquiryID").val(),
            OfferID: tempOfferID,
            PONo: $("#PONo").val(),
            PODate: $("#PODate").val(),
            POBaseValue: $("#POBaseValue").val(),
            PIAdvSubmitDate: $("#PIAdvSubmitDate").val(),
            ABGSubmitDate: $("#ABGSubmitDate").val(),
            PIABGAdvSubmitDate: $("#PIABGAdvSubmitDate").val(),
            IncoTermID: $("#IncoTermID").val(),
            ProjectTCList: projectTCData,
            PaymentTermList: paygridData,
            DeliveryTermList: delgridData,
        };

        const antiForgeryToken = $("input[name=__RequestVerificationToken]").val();

        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            url: "/OrderBook/SaveOrderBook",
            data: JSON.stringify(Details),
            success: function (response) {
                if (response.success) {
                    const message = tempOrderBookID === 0 ? `OrderBook registered successfully !<br> Project Code : <b>${response.Data.ProjectCode}</b>` : `OrderBook updated successfully !<br> Project Code : <b>${response.Data.ProjectCode}</b>`;
                    ShowAlert("success", message);
                    clearFormData();
                } else {
                    ShowAlert("error", response.message || "An error occurred while saving the offer.");
                }
            },
            error: function (xhr, status, error) {
                ShowAlert("error", `An unexpected error occurred: ${xhr.responseText || error}`);
            }
        });

    }

    function clearFormData(rowclick) {
        $("#EnquiryLabel").val('').prop('disabled', false);
        if (!rowclick) {
            getEnquiry();
        }
        tempOrderBookID = 0;
        $(".datepicker").datepicker("setDate", new Date());
        $("#PONo").val('');
        $(".datepicker").datepicker("setDate", null);
        $("#IncoTermID").val('');
        ClearParamGrid("ProjectTCgrid");
        ClearParamGrid("PaymentTermgrid");
        ClearParamGrid("DeliveryTermgrid");
        clearEnquiryDetails();
    }
    $("#PIAdvSubmitDate").change(() => {
        if ($("#PIAdvSubmitDate").val() != "") {
            $("#PIABGAdvSubmitDate").datepicker("setDate", null);
        }
    });

    $("#PIABGAdvSubmitDate").change(() => {
        if ($("#PIABGAdvSubmitDate").val() != "") {
            $("#PIAdvSubmitDate").datepicker("setDate", null);
        }
    });


    function clearEnquiryDetails() {
        tempOfferID = 0;
        $("#EnquiryID").val('');
        $("#EnquiryLabel").val('');
        $("#EnquiryNo").val('');
        $("#EnquiryDate").val('');
        $("#Source").val('');
        $("#Product").val('');
        $("#ProductID").val('');
        $("#Location").val('');
        $("#ClientName").val('');
        $("#Place").val('');
        $("#ContactPerson").val('');
        $("#ContactNo").val('');
        $("#EmailID").val('');
        $("#Status").val('');
        $("#StatusID").val('');
        $("#Type").val('');
        $("#Sector").val('');
        $("#Zone").val('');
        $("#CustomerMailMsg").val('');
        $("#POBaseValue").val('');
    }

    function showModal() {
        $("#SearchGridModal").modal('show');
        loadOrderBookGrid();
    }

    function closeModal() {
        $("#SearchGridModal").modal('hide');
    }

    /********* Project TC Search Grid *********/
    $(document).ready(function () {
        var dataDelM = { location: "local", sorting: 'local' }
        var colDelM = [
            {
                dataIndx: "State", Width: 25, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "ProjectTCID", dataType: "integer", hidden: true },
            {
                title: "Code", dataIndx: "ProjectTCCode", width: 150, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            },
            {
                title: "Name", dataIndx: "ProjectTCDesc", width: 450, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            }
        ];
        var DelM = {
            width: '100%',
            height: 400,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            filterModel: { on: true, mode: "AND", header: true },
            selectionModel: { type: 'row' },
            colModel: colDelM,
            dataModel: dataDelM,
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $SearchProjectTCgrid = $("#SearchProjectTCgrid").pqGrid(DelM);
    });
    /********* Project TC Grid *********/
    $(document).ready(function () {
        $('#btnViewProjectTC').on('click', function () {
            LoadSearchProjectTCgrid();
        });
        $('#btnRemoveProjectTC').on('click', function () {
            var getData = $ProjectTCgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();
            $.each(selectedItems, function (key, value) {
                var obj = $ProjectTCgrid.pqGrid("getRowIndx", { rowData: value });
                var rowIndx = obj.rowIndx;
                $ProjectTCgrid.pqGrid("deleteRow", { rowIndx: rowIndx });
            });
        });

        var dataOtherM = { location: "local" }
        var colOtherM = [
            {
                dataIndx: "State", Width: 15, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "ProjectTCID", dataType: "integer", hidden: true },
            { title: "Code", dataIndx: "ProjectTCCode", width: 200, editable: false },
            { title: "Name", dataIndx: "ProjectTCDesc", width: 400, editable: false }
        ];
        var DelM = {
            width: '100%',
            height: 250,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            selectionModel: { type: 'row' },
            colModel: colOtherM,
            dataModel: dataOtherM,
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $ProjectTCgrid = $("#ProjectTCgrid").pqGrid(DelM);
    });
    function LoadSearchProjectTCgrid() {
        $("#ProjectTCModal").dialog({
            height: 500,
            width: 700,
            modal: true,
            open: function (evt, ui) {
                $.ajax({
                    type: 'GET',
                    url: "/ProjectTCMaster/AllProjectTC",
                    dataType: "json",
                    data: { searchProjectTC:'', searchCode:''},
                    success: function (data) {
                        if (data.success) {
                            $SearchProjectTCgrid.pqGrid("option", "dataModel.data", data.records);
                            $SearchProjectTCgrid.pqGrid("refreshDataAndView");
                        }
                    },
                    error: function (e) {
                        ShowAlert("error", "No Record Found");
                    }
                });
            }
        });
    }

    /********* Payment Term Search Grid *********/
    $(document).ready(function () {
        var dataPayM = { location: "local" }
        var colPayM = [
            {
                dataIndx: "State", Width: 25, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "TermID", dataType: "integer", hidden: true },
            {
                title: "Code", dataIndx: "PaymentTermCode", width: 150, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            },
            {
                title: "Name", dataIndx: "PaymentTermDesc", width: 450, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }

            }
        ];
        var DelM = {
            width: '100%',
            height: 400,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            filterModel: { on: true, mode: "AND", header: true },
            selectionModel: { type: 'none', subtype: 'incr', cbHeader: true, cbAll: true },
            colModel: colPayM,
            dataModel: dataPayM,
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $SearchPaymentTermgrid = $("#SearchPaymentTermgrid").pqGrid(DelM);
    });
    /********* Payment Term Grid *********/
    $(document).ready(function () {
        $('#btnViewPayTerms').on('click', function () {
            LoadSearchPaymentTermgrid();
        });
        $('#btnRemovePayTerms').on('click', function () {
            var getData = $PaymentTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();
            $.each(selectedItems, function (key, value) {
                var obj = $PaymentTermgrid.pqGrid("getRowIndx", { rowData: value });
                var rowIndx = obj.rowIndx;
                $PaymentTermgrid.pqGrid("deleteRow", { rowIndx: rowIndx });
            });
        });
        var dataDelM = { location: "local", sorting: 'local' }
        var colDelM = [
            {
                dataIndx: "State", Width: 15, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "PayTermID", dataType: "integer", hidden: true },
            {
                title: "Code", dataIndx: "PaymentTermCode", width: 200, editable: false

            },
            {
                title: "Name", dataIndx: "PaymentTermDesc", width: 400, editable: false
            }
        ];
        var DelM = {
            width: '100%',
            height: 250,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            selectionModel: { type: 'row' },
            colModel: colDelM,
            dataModel: dataDelM,
            pageModel: { type: "local", rPP: 20 },
        };
        $PaymentTermgrid = $("#PaymentTermgrid").pqGrid(DelM);
    });
    function LoadSearchPaymentTermgrid() {
        $("#PaymentItemModal").dialog({
            height: 500,
            width: 700,
            modal: true,
            open: function (evt, ui) {
                $.ajax({
                    type: "GET",
                    url: "/PaymentTermMaster/GetActivePaymentTerm",
                    datatype: "Json",
                    success: function (data) {
                        $SearchPaymentTermgrid.pqGrid("option", "dataModel.data", data.records);
                        $SearchPaymentTermgrid.pqGrid("refreshDataAndView");
                    }
                });
            }

        });
    }

    /********* Delivery Term Search Grid *********/
    $(document).ready(function () {
        var dataModel = {
            location: "local"
        }
        var colDelM = [
            {
                dataIndx: "State", Width: 25, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "TermID", dataType: "integer", hidden: true },
            {
                title: "Code", dataIndx: "DeliveryTermCode", width: 150, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            },
            {
                title: "Name", dataIndx: "DeliveryTermDesc", width: 450, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            }
        ];
        var DelM = {
            width: '100%',
            height: 400,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            selectionModel: { type: 'row' },
            colModel: colDelM,
            dataModel: dataModel,
            filterModel: { on: true, mode: "AND", header: true },
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $SearchDeliveryTermgrid = $("#SearchDeliveryTermgrid").pqGrid(DelM);
    });
    /********* Delivery Term Grid *********/
    $(document).ready(function () {
        $('#btnViewDelTerms').on('click', function () {
            LoadSearchDeliveryTermgrid();
        });
        $('#btnRemoveDelTerms').on('click', function () {
            var getData = $DeliveryTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();

            $.each(selectedItems, function (key, value) {
                var obj = $DeliveryTermgrid.pqGrid("getRowIndx", { rowData: value });
                var rowIndx = obj.rowIndx;
                $DeliveryTermgrid.pqGrid("deleteRow", { rowIndx: rowIndx });
            });
        });

        var dataDelM = { location: "local", sorting: 'local' }
        var colDelM = [
            {
                dataIndx: "State", Width: 15, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "DelTermID", dataType: "integer", hidden: true },
            { title: "Code", dataIndx: "DeliveryTermCode", width: 200, editable: false },
            { title: "Name", dataIndx: "DeliveryTermDesc", width: 400, editable: false }
        ];
        var DelM = {
            width: '100%',
            height: 250,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            selectionModel: { type: 'row' },
            colModel: colDelM,
            dataModel: dataDelM,
            pageModel: { type: "local", rPP: 20 }
        };
        $DeliveryTermgrid = $("#DeliveryTermgrid").pqGrid(DelM);
    });
    function LoadSearchDeliveryTermgrid() {
        $("#DeliveryItemModal").dialog({
            height: 500,
            width: 700,
            modal: true,
            open: function (evt, ui) {
                $.ajax({
                    type: "GET",
                    url: "/DeliveryTerm/GetActiveDeliveryTerms",
                    datatype: "Json",
                    success: function (data) {
                        $SearchDeliveryTermgrid.pqGrid("option", "dataModel.data", data.records);
                        $SearchDeliveryTermgrid.pqGrid("refreshDataAndView");
                    }
                });
            }
        });
    }

    /********* Add Button Click Events *********/
    $(document).ready(function () {
        $('#btnAddProjectTC').on('click', function () {
            ClosePopupWindow("ProjectTCModal");
            var getData = $SearchProjectTCgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();
            var colM = $ProjectTCgrid.pqGrid("option", "colModel");
            colM[2].editable = true;
            colM[3].editable = true;
            $ProjectTCgrid.pqGrid("option", "colModel", colM);
            $.each(selectedItems, function (key, value) {
                $ProjectTCgrid.pqGrid("addRow", { newRow: { 'ProjectTCID': value.ProjectTCID, 'ProjectTCCode': value.ProjectTCCode, 'ProjectTCDesc': value.ProjectTCDesc, 'State': true } })
            });
            colM[2].editable = false;
            colM[3].editable = false;
            $ProjectTCgrid.pqGrid("option", "colModel", colM);
        });

        $('#btnAddPaymentTerm').on('click', function () {
            ClosePopupWindow("PaymentItemModal");
            var getData = $SearchPaymentTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();
            var colM = $PaymentTermgrid.pqGrid("option", "colModel");
            colM[2].editable = true;
            colM[3].editable = true;
            $PaymentTermgrid.pqGrid("option", "colModel", colM);
            $.each(selectedItems, function (key, value) {
                $PaymentTermgrid.pqGrid("addRow", { newRow: { 'PayTermID': value.TermID, 'PaymentTermCode': value.PaymentTermCode, 'PaymentTermDesc': value.PaymentTermDesc, 'State': true } })
            });
            colM[2].editable = false;
            colM[3].editable = false;
            $PaymentTermgrid.pqGrid("option", "colModel", colM);
        });

        $('#btnAddDeliveryTerm').on('click', function () {
            ClosePopupWindow("DeliveryItemModal");
            var getData = $SearchDeliveryTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();

            var colM = $DeliveryTermgrid.pqGrid("option", "colModel");
            colM[2].editable = true;
            colM[3].editable = true;
            $DeliveryTermgrid.pqGrid("option", "colModel", colM);
            $.each(selectedItems, function (key, value) {
                $DeliveryTermgrid.pqGrid("addRow", { newRow: { 'DelTermID': value.TermID, 'DeliveryTermCode': value.DeliveryTermCode, 'DeliveryTermDesc': value.DeliveryTermDesc, 'State': true } })
            });
            colM[2].editable = false;
            colM[3].editable = false;
            $DeliveryTermgrid.pqGrid("option", "colModel", colM);
        });
    });

    function closeTermModal() {
        ClosePopupWindow("DeliveryItemModal");
        ClosePopupWindow("PaymentItemModal");
        ClosePopupWindow("ProjectTCModal");
    }

    $("#content-tab").tabs({
        activate: function (event, ui) {
            let tabIndx = ui.newTab.index();
            tabIndx === 0 ? $ProjectTCgrid.pqGrid("refreshDataAndView") : tabIndx === 1 ? $PaymentTermgrid.pqGrid("refreshDataAndView") : $DeliveryTermgrid.pqGrid("refreshDataAndView");
        }
    });

    //-----------------------------------On Load-----------------------------------//
    getEnquiry();
    //loadIncoTerm();
</script>