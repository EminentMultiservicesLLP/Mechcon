@Scripts.Render("~/bundles/jquerymodels")

<style>
    .tbl-required {
        color: red;
    }
</style>

<script>
    $(function () {
        $(".datepicker").datepicker({
            showOn: "button",
            buttonImage: "/Content/images/calendar.gif",
            buttonImageOnly: true,
            buttonText: "Selectdate",
            'changeMonth': true,
            'changeYear': true,
            'yearRange': '2021:2030',
            "format": "dd-M-yyyy",
            todayBtn: "linked",
            pickerPosition: "bottom-left",
            "todayHighlight": true,
            autoclose: true,
        });
        $("#anim").change(function () {
            $(".datepicker").datepicker("option", "showAnim", "fadeIn");
        });
    });
</script>

<h5 class="page-header orangeDottedBottomBorder">Work Order</h5>

<div id="SearchGridModal" class="modal fade" role="dialog" data-backdrop="false">
    <div class="modal-dialog find-search-grid-modal">
        <div class="modal-content gridmodal-content">
            <div class="modal-header gridmodal-header">
                <button type="button" class="close" onclick="closeModal()">&times;</button>
                <h4 class="modal-title">Work Order Details.</h4>
            </div>
            <div class="modal-body">
                <div class="fill">
                    <div id="OrderBookGrid"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="ReportModal" class="modal fade" role="dialog" data-backdrop="false">
    <div class="modal-dialog find-search-grid-modal">
        <div class="modal-content gridmodal-content">
            <div class="modal-header gridmodal-header">
                <button type="button" class="close" onclick="closeModal()">&times;</button>
                <h4 class="modal-title">Report</h4>
            </div>
            <div class="modal-body">
                <div class="fill">
                    <iframe id="iframeReportViewer" style="width:100%;height:400px"></iframe>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-groupingBoder">
            <div class="panel-heading">
                <div class="panel-title">
                    <a class="collapsediv" data-toggle="collapse" href="#SearchDetails">
                        Work Order
                    </a>
                </div>
            </div>
            <div id="SearchDetails" class="panel-collapse collapse in" aria-expanded="true">
                <div class="panel-body">
                    <div class="fill">
                        <div class="submit-row">
                            <div class="col-sm-6" style="text-align:start">
                                <button type="button" id="btnSave" class="btn btn-success" onclick="SaveOrderBook()">Save</button>
                                <button type="button" class="btn btn-warning" id="btnResetT" onclick="clearFormData()">Clear</button>
                                <button type="button" id="btnFind" class="btn btn-primary" onclick="showModal()">Find</button>
                            </div>
                            <div class="col-sm-6" style="text-align:end">
                                <button type="button" class="btn btn-warning" id="btnExport">Report</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4 col-md-6 col-sm-12 mb-3">
                                <label for="EnquiryLabel" class="required">Enquiry</label>
                                <input id="EnquiryLabel" class="form-control" type="text" placeholder="Search by - (EnquiryNo) | (ClientName) | (EnquiryDate) | (AllocatedTo)">
                                <input type="hidden" id="EnquiryID">
                            </div>

                        </div>

                        <fieldset class="fieldsetCustom">
                            <legend class="legendCustom">Enquiry Details</legend>

                            <div class="row">
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="EnquiryNo">Enquiry No</label>
                                    <input type="text" id="EnquiryNo" class="form-control" placeholder="Enquiry No" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="EnquiryDate">Enquiry Date</label>
                                    <input type="text" id="EnquiryDate" class="form-control" placeholder="Enquiry Date" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Source">Source</label>
                                    <input type="text" id="Source" class="form-control" placeholder="Enquiry Source" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Product">Product</label>
                                    <input type="text" id="Product" class="form-control" placeholder="Enquiry Product" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Location">Location</label>
                                    <input type="text" id="Location" class="form-control" placeholder="Enquiry Location" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Type">Type</label>
                                    <input type="text" id="Type" class="form-control" placeholder="Enquiry Type" disabled>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Sector">Sector</label>
                                    <input type="text" id="Sector" class="form-control" placeholder="Enquiry Sector" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Zone">Zone</label>
                                    <input type="text" id="Zone" class="form-control" placeholder="Enquiry Zone" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="ClientName">Client Name</label>
                                    <input type="text" id="ClientName" class="form-control" placeholder="Enquiry Client Name" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="ContactPerson">Contact Person</label>
                                    <input type="text" id="ContactPerson" class="form-control" placeholder="Enquiry Contact Person" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="ContactNo">Contact Number</label>
                                    <input type="text" id="ContactNo" class="form-control" placeholder="Enquiry Contact Number" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="EmailID">Email Address</label>
                                    <input type="email" id="EmailID" class="form-control" placeholder="Enquiry Email Address" disabled>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Place">Place</label>
                                    <input type="text" id="Place" class="form-control" placeholder="Enquiry Place" disabled>
                                </div>
                                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                                    <label for="Status">Status</label>
                                    <input type="text" id="Status" class="form-control" placeholder="Enquiry Status" disabled>
                                </div>
                                <div class="col-lg-4 col-md-8 col-sm-12 col-xs-12">
                                    <label for="CustomerMailMsg">Customer Message</label>
                                    <textarea id="CustomerMailMsg" class="form-control" placeholder="Enquiry Customer Message" rows="4" disabled></textarea>
                                </div>
                            </div>
                        </fieldset>

                        <fieldset class="fieldsetCustom">
                            <legend class="legendCustom"> Summary </legend>
                            <table class="table table-hover">
                                <tbody>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4 tbl-required">PO No</div>
                                                <div class="col-sm-8">
                                                    <input type="text" id="PONo" class="form-control" placeholder="PO No">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4 tbl-required">PO Date</div>
                                                <div class="col-sm-8">
                                                    <input type="text" id="PODate" class="form-control datepicker" placeholder="PO Date">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4 tbl-required">PO Value</div>
                                                <div class="col-sm-8">
                                                    <input type="number" id="POBaseValue" class="form-control" placeholder="PO Value">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4 tbl-required">Budget Value</div>
                                                <div class="col-sm-8">
                                                    <input type="number" id="BudgetValue" class="form-control" placeholder="Budget Value">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Material Value</div>
                                                <div class="col-sm-8">
                                                    <input type="number" id="MaterialValue" class="form-control" placeholder="Material Value">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Conversion Value</div>
                                                <div class="col-sm-8">
                                                    <input type="number" id="ConversionValue" class="form-control" placeholder="Conversion Value">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Trans Value</div>
                                                <div class="col-sm-8">
                                                    <input type="number" id="TransValue" class="form-control" placeholder="Trans Value">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">E & C Value</div>
                                                <div class="col-sm-8">
                                                    <input type="number" id="ECValue" class="form-control" placeholder="E & C Value">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">PI Submission date for advance</div>
                                                <div class="col-sm-8">
                                                    <input type="text" id="PIAdvSubmitDate" class="form-control datepicker" placeholder="PI Submission date for advance">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4 tbl-required">ABG Submit Date</div>
                                                <div class="col-sm-8">
                                                    <input type="text" id="ABGSubmitDate" class="form-control datepicker" placeholder="ABG Submission Date">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">PI Submission date for ABG advance</div>
                                                <div class="col-sm-8">
                                                    <input type="text" id="PIABGAdvSubmitDate" class="form-control datepicker" placeholder="PI Submission date for ABG advance">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Quantity</div>
                                                <div class="col-sm-8">
                                                    <input type="number" class="form-control" id="Quantity" placeholder="Enter the quantity">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Project Description</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="ProjectDescription" placeholder="Provide a brief project description">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Material Of Construction</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="MaterialOfConstruction" placeholder="Specify the construction material">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Area OF Installation</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="AreaOfInstallation" placeholder="Mention the installation area">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Ship-To</div>
                                                <div class="col-sm-8">
                                                    <select id="ConsigneeID" name="ConsigneeID" class="form-control">
                                                        <option value="">--Select Ship-To--</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr hidden>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Technical Specification</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="TechnicalSpecification" placeholder="Enter technical specifications">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Scope Of Supply</div>
                                                <div class="col-sm-8">
                                                    <select id="ScopeOfSupplyID" name="ScopeOfSupplyID" class="form-control">
                                                        <option value="">--Select Scope Of Supply--</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Packaging</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="Packaging" placeholder="Enter packaging requirements">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Insurance</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="Insurance" placeholder="Provide insurance details">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Supervision of Installation & Commissioning</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="Supervision" placeholder="Details of installation supervision">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">LD Charges</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="LDCharges" placeholder="Enter LD charges">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Contact At Site</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="ContactAtSite" placeholder="Site contact details">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Contact At Purchase</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="ContactAtPurchase" placeholder="Purchase contact details">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Delivery Date</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control datepicker" id="DeliveryDate" placeholder="Select the delivery date">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Installation and Commissioning</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="InstAndComm" placeholder="Enter installation and commissioning details">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Bank Guarantee</div>
                                                <div class="col-sm-8">
                                                    <select class="form-control" id="GuaranteeType">
                                                        <option value="">Bank Guarantee</option>
                                                        <option value="Yes">Yes</option>
                                                        <option value="No">No</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr class="BG">
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">SBG</div>
                                                <div class="col-sm-8">
                                                    <input type="number" class="form-control" id="SBG" placeholder="SBG">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr class="BG">
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">ABG</div>
                                                <div class="col-sm-8">
                                                    <input type="number" class="form-control" id="ABG" placeholder="ABG">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr class="BG">
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">PBG</div>
                                                <div class="col-sm-8">
                                                    <input type="number" class="form-control" id="PBG" placeholder="PBG">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Additional Contact</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="AdditionalContact" placeholder="Enter the additional contact details">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Frieght</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="Transport" placeholder="Frieght">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Dispatch Date</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control datepicker" id="DispatchDate1" placeholder="Select the dispatch date">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr hidden>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">2nd Dispatch Date</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control datepicker" id="DispatchDate2" placeholder="Select the 2nd dispatch date">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr hidden>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">3rd Dispatch Date</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control datepicker" id="DispatchDate3" placeholder="Select the 3rd dispatch date">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr hidden>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">4th Dispatch Date</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control datepicker" id="DispatchDate4" placeholder="Select the 4th dispatch date">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr hidden>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">5th Dispatch Date</div>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control datepicker" id="DispatchDate5" placeholder="Select the 5th dispatch date">
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Technical Specification</div>
                                                <div class="col-sm-8">
                                                    <input class="form-control btn-primary attachment" type="file" multiple accept=".jpg,.jpeg,.png,.pdf" id="Attachment" />
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th scope="row">
                                            <div class="row">
                                                <div class="col-sm-4">Brief Technical Specfication</div>
                                                <div class="col-sm-8">
                                                    <textarea id="BriefTechnicalSpecification" class="form-control" placeholder="Brief Technical Specification" rows="5"></textarea>
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                </tbody>
                            </table>
                            <div class="submit-row">
                                <button type="button" id="btnAddOtherFields" class="btn btn-primary" onclick="addOtherFields()">Add Field</button>
                                <button type="button" id="btnViewAttachment" class="btn btn-info" onclick="viewAttachment()">View <i class="pe-va pe-7s-paperclip pe-2x"></i></button>
                            </div>
                            <table class="table table-hover">
                                <tbody id="OtherFields">
                                </tbody>
                            </table>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-sm-4">

        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-groupingBoder">
                    <div class="panel-heading">
                        <div class="panel-title">
                            <a class="collapsediv" data-toggle="collapse" href="#contentUser" style="color:white">
                                Send Email to
                            </a>
                        </div>
                    </div>
                    <div id="contentUser">
                        <div id="contentUser-tab">
                            <div id="GroupGrid"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="col-sm-8">

        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-groupingBoder">
                    <div class="panel-heading">
                        <div class="panel-title">
                            <a class="collapsediv" data-toggle="collapse" href="#content" style="color:white">
                                Add Terms
                            </a>
                        </div>
                    </div>
                    <div id="content">
                        <div id="content-tab">
                            <ul id="tabs" class="nav nav-tabs" data-tabs="tabs" style="padding: 1px;">
                                @*<li class="active tab"><a href="#tab1" data-toggle="tab" style="margin: 0;">Project T & C</a></li>*@
                                <li class="active tab"><a href="#tab2" data-toggle="tab" style="margin: 0;">Payment Terms</a></li>
                                @*<li><a href="#tab3" data-toggle="tab" style="margin: 0;">Delivery Terms</a></li>*@
                                @*<li><a href="#tab4" data-toggle="tab" style="margin: 0;">Freight</a></li>
                                <li><a href="#tab5" data-toggle="tab" style="margin: 0;">P&F</a></li>*@
                            </ul>
                            <fieldset class="fieldsetCustom">
                                <div id="my-tab-content" class="tab-content" style="border:none;padding:2px;">
                                    <div class="tab-pane " id="tab1" style="padding:0;">
                                        <br>
                                        <div class="form-group" align="left">
                                            <button type="button" class="btn btn-primary" id="btnViewProjectTC">Add Term</button>
                                            <button type="button" class="btn btn-danger" id="btnRemoveProjectTC">Remove Term</button>
                                        </div>
                                        <div id="ProjectTCgrid"></div>
                                    </div>
                                    <div class="tab-pane" active id="tab2">
                                        <br>
                                        <div class="form-group" align="left">
                                            <button type="button" class="btn btn-primary" id="btnViewPayTerms">Add Term</button>
                                            <button type="button" class="btn btn-danger" id="btnRemovePayTerms">Remove Term</button>
                                        </div>
                                        <div id="PaymentTermgrid"></div>
                                    </div>
                                    <div class="tab-pane" id="tab3">
                                        <br>
                                        <div class="form-group" align="left">
                                            <button type="button" class="btn btn-primary" id="btnViewDelTerms">Add Term</button>
                                            <button type="button" class="btn btn-danger" id="btnRemoveDelTerms">Remove Term</button>
                                        </div>
                                        <div id="DeliveryTermgrid"></div>
                                    </div>
                                    <div class="tab-pane" id="tab4">
                                        <br>
                                        <div class="form-group" align="left">
                                            <button type="button" class="btn btn-primary" id="btnViewOtherTerms">Add Term</button>
                                            <button type="button" class="btn btn-danger" id="btnRemoveOtherTerms">Remove Term</button>
                                        </div>
                                        <div id="OtherTermgrid"></div>
                                    </div>
                                    <div class="tab-pane" id="tab5">
                                        <br>
                                        <div class="form-group" align="left">
                                            <button type="button" class="btn btn-primary" id="btnBasisTerms">Add Term</button>
                                            <button type="button" class="btn btn-danger" id="btnRemoveBasisTerms">Remove Term</button>
                                        </div>
                                        <div id="BasisTermgrid"></div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<div id="ProjectTCModal" title="Select Other Terms" style="display: none;">
    <div id="SearchProjectTCgrid"></div>
    <button type="button" class="btn btn-primary" data-dismiss="modal" id="btnAddProjectTC">Add</button>
    <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="closeTermModal()">Close</button>
</div>

<div id="PaymentItemModal" title="Select Payment Terms" style="display: none;">
    <div id="SearchPaymentTermgrid"></div>
    <button type="button" class="btn btn-primary" data-dismiss="modal" id="btnAddPaymentTerm">Add</button>
    <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="closeTermModal()">Close</button>
</div>

<div id="DeliveryItemModal" title="Select Delivery Terms" style="display: none;">
    <div id="SearchDeliveryTermgrid"></div>
    <button type="button" class="btn btn-primary" data-dismiss="modal" id="btnAddDeliveryTerm">Add</button>
    <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="closeTermModal()">Close</button>
</div>

<div id="OtherItemModal" title="Select Freight" style="display: none;">
    <div id="SearchOtherTermgrid"></div>
    <button type="button" class="btn btn-primary" data-dismiss="modal" id="btnAddOtherTerm">Add</button>
    <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="closeTermModal()">Close</button>
</div>

<div id="BasisItemModal" title="Select P&F" style="display: none;">
    <div id="SearchBasisTermgrid"></div>
    <button type="button" class="btn btn-primary" data-dismiss="modal" id="btnAddBasisTerm">Add</button>
    <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="closeTermModal()">Close</button>
</div>

<div id="ViewModal" class="modal slideModal">
    <div class="modal-content slideContent">
        <span class="close slideClose" onclick="closeImageModal()"> &#x2715 </span>
        <div id="slideshow-container"></div>
        <div>
            <a class="prev slide-prev" onclick="plusSlides(-1)">❮</a>
            <a class="next slide-next" onclick="plusSlides(1)">❯</a>
        </div>
    </div>
</div>

<script>
    var appSetting = '@BISERP.Common.Constants.ScandocUrl';
    var tempOrderBookID = 0;
    var tempProjectID = 0;
    var tempOfferID = 0;
    let otherFieldIndx = 0;
    $(".BG").hide();

    function getEnquiry() {
        $("#EnquiryLabel").autocomplete({
            source: [],
            minLength: 0,
            select: handleEnquirySelection,
            change: handleEnquirySelection,
        });

        $.ajax({
            type: "GET",
            url: "/OrderBook/GetEnqForOrderBook",
            dataType: "json",
            success: function (response) {
                if (response.success && response.records.length > 0) {
                    const suggestions = response.records.map(({ EnquiryID, EnquiryNo, ClientName, strEnquiryDate, AllocatedToName }) => ({
                        label: `(${EnquiryNo}) | (${ClientName}) | (${strEnquiryDate}) | (${AllocatedToName})`,
                        value: EnquiryID
                    }));

                    $("#EnquiryLabel").autocomplete("option", "source", suggestions);
                } else {
                    $("#EnquiryLabel").autocomplete("option", "source", [{ label: "--No Enquiry Found--", value: "" }]);
                }
            },
            error: function () {
                $("#EnquiryLabel").autocomplete("option", "source", [{ label: "--Error loading enquiries--", value: "" }]);
            }
        });
    }
    function handleEnquirySelection(event, ui) {
        event.preventDefault();
        const $enquiryLabel = $(event.target);
        const $enquiryID = $("#EnquiryID");

        if (ui.item && ui.item.value) {
            if (ui.item.label === "--No Enquiry Found--" || ui.item.label === "--Error loading enquiries--") {
                $enquiryLabel.val('');
                $enquiryID.val('').trigger('change');
            } else {
                $enquiryLabel.val(ui.item.label);
                $enquiryID.val(ui.item.value).trigger('change');
            }
        } else {
            $enquiryLabel.val('');
            $enquiryID.val('').trigger('change');
        }
    }
    $("#EnquiryLabel").on("focus", function () {
        $(this).autocomplete("search", "");
    });

    $("#EnquiryID").change(() => {
        const enquiryID = $("#EnquiryID").val();
        if (enquiryID && enquiryID != 0) {
            GetEnquiryDetails(enquiryID);
            GetFinalOffer(enquiryID);
            loadConsignee(enquiryID);
        } else {
            clearEnquiryDetails();
        }
    });


    function loadConsignee(enquiryID, consigneeID) {
        $.ajax({
            type: "GET",
            url: "/OrderBook/GetConsignee",
            data: { EnquiryID: enquiryID },
            dataType: "json",
            success: function (data) {
                const $consigneeDropdown = $('#ConsigneeID');
                $consigneeDropdown.empty();

                if (data.error) {
                    $consigneeDropdown.append('<option value="">--Error loading consignee--</option>');
                    console.error("Error loading consignee:", data.error);
                    return;
                }

                $consigneeDropdown.append('<option value="">--Select Consignee--</option>');

                data.records.forEach(function (consignee) {
                    $consigneeDropdown.append(`<option value="${consignee.ConsigneeID}">${consignee.Consignee}</option>`);
                });
                if (consigneeID) {
                    $("#ConsigneeID").val(consigneeID)
                }
            },
            error: function (xhr, textConsignee, errorThrown) {
                $('#ConsigneeID').empty();
                $('#ConsigneeID').append('<option value="">--Error loading consignee--</option>');
                console.error("Error loading consignee:", errorThrown);
            }
        });
    }

    function GetEnquiryDetails(enquiryID) {
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/EnquiryRegister/GetEnquiryDetails",
            data: { EnquiryID: enquiryID },
            dataType: "json",
            success: function (response) {
                if (response.success) {
                    const details = response.record;

                    $("#EnquiryNo").val(details.EnquiryNo);
                    $("#EnquiryDate").val(details.strEnquiryDate);
                    $("#Source").val(details.Source);
                    $("#Product").val(details.Product);
                    $("#ProductID").val(details.ProductID);
                    $("#Location").val(details.Location);
                    $("#Type").val(details.Type);
                    $("#Sector").val(details.Sector);
                    $("#Zone").val(details.Zone);
                    $("#Status").val(details.Status);
                    $("#StatusID").val(details.StatusID);
                    $("#ClientName").val(details.ClientName);
                    $("#Place").val(details.Place);
                    $("#ContactPerson").val(details.ContactPerson);
                    $("#ContactNo").val(details.ContactNo);
                    $("#EmailID").val(details.EmailID);
                    $("#CustomerMailMsg").val(details.CustomerMailMsg);
                } else {
                    console.warn("No details found or an issue occurred: ", response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error loading enquiry details: ", status, error);
            }
        });
    }

    function GetFinalOffer(enquiryID) {
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetFinalOffer",
            data: { EnquiryID: enquiryID },
            dataType: "json",
            success: function (response) {
                if (response.success) {
                    const details = response.record;
                    $("#POBaseValue").val(details.POBaseValue);
                    tempOfferID = details.OfferID;
                } else {
                    console.warn("No details found or an issue occurred: ", response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error loading enquiry details: ", status, error);
            }
        });
    }

    function loadScopeOfSupply() {
        $.ajax({
            type: "GET",
            url: "/ScopeOfSupplyMaster/AllScopeOfSupply",
            dataType: "json",
            success: function (data) {
                const $scopeOfSupplyDropdown = $('#ScopeOfSupplyID');
                $scopeOfSupplyDropdown.empty();

                if (data.error) {
                    $scopeOfSupplyDropdown.append('<option value="">--Error loading scopeOfSupply--</option>');
                    console.error("Error loading scopeOfSupply:", data.error);
                    return;
                }

                $scopeOfSupplyDropdown.append('<option value="">--Select ScopeOfSupply--</option>');

                data.records.forEach(function (scopeOfSupply) {
                    $scopeOfSupplyDropdown.append(`<option value="${scopeOfSupply.ScopeOfSupplyID}">${scopeOfSupply.ScopeOfSupplyName}</option>`);
                });
            },
            error: function (xhr, textScopeOfSupply, errorThrown) {
                $('#ScopeOfSupplyID').empty();
                $('#ScopeOfSupplyID').append('<option value="">--Error loading scopeOfSupply--</option>');
                console.error("Error loading scopeOfSupply:", errorThrown);
            }
        });
    }
    loadScopeOfSupply();
    //-----------------------------------OrderBookGrid (Starts here)-----------------------------------//
    var OrderBookGrid_GDM = { location: "local" };

    var OrderBookGrid_GCM = [
        {
            title: "Enquiry No", dataIndx: "EnquiryNo", width: '30%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Enquiry Date", dataIndx: "strEnquiryDate", width: '20%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Client Name", dataIndx: "ClientName", width: '30%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Project Code", dataIndx: "ProjectCode", width: '20%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        }
    ];

    var setOrderBookGrid = {
        height: 300,
        width: 'auto',
        maxWidth: '100%',
        minWidth: 800,
        sortable: true,
        autofill: true,
        numberCell: { show: true },
        hoverMode: 'row',
        showTop: true,
        showTitle: true,
        showBottom: true,
        resizable: true,
        //scrollModel: { autoFit: true },
        filterModel: { on: true, mode: "AND", header: true },
        draggable: false,
        hwrap: false,
        wrap: false,
        editable: false,
        columnBorders: true,
        menuIcon: true,
        selectionModel: { type: 'row', mode: 'single', cbHeader: false },
        colModel: OrderBookGrid_GCM,
        dataModel: OrderBookGrid_GDM,
        pageModel: { type: "local" },
        rowClick: function (evt, ui) {
            if (ui.rowData) {
                const data = ui.rowData;
                clearFormData(true);
                closeModal();
                tempOrderBookID = data.OrderBookID;
                tempProjectID = data.ProjectID;
                tempOfferID = data.OfferID;

                const $enquiryLabel = $('#EnquiryLabel');
                const $enquiryID = $('#EnquiryID');
                $enquiryLabel.val(`(${data.EnquiryNo}) | (${data.ClientName}) | (${data.strEnquiryDate})`);
                $enquiryID.val(data.EnquiryID);
                $enquiryLabel.prop('disabled', true);

                loadConsignee(data.EnquiryID);
                loadConsignee(data.EnquiryID, data.ConsigneeID);
                GetEnquiryDetails(data.EnquiryID);
                GetOBOtherDetails(tempOrderBookID);
                loadOrderBookProjectTCGrid(tempOrderBookID);
                loadOrderBookPaymentTermsGrid(tempOrderBookID);
                loadOrderBookDeliveryTermsGrid(tempOrderBookID);
                loadOrderBookOtherTermsGrid(tempOrderBookID);
                loadOrderBookBasisTermsGrid(tempOrderBookID);

                $("#PONo").val(data.PONo);
                $("#PODate").datepicker("setDate", data.strPODate);
                $("#POBaseValue").val(data.POBaseValue);
                $("#BudgetValue").val(data.BudgetValue);
                $("#MaterialValue").val(data.MaterialValue);
                $("#ConversionValue").val(data.ConversionValue);
                $("#TransValue").val(data.TransValue);
                $("#ECValue").val(data.ECValue);
                $("#PIAdvSubmitDate").datepicker("setDate", data.strPIAdvSubmitDate);
                $("#ABGSubmitDate").datepicker("setDate", data.strABGSubmitDate);
                $("#PIABGAdvSubmitDate").datepicker("setDate", data.strPIABGAdvSubmitDate);
                $("#ProjectDescription").val(data.ProjectDescription);
                $("#MaterialOfConstruction").val(data.MaterialOfConstruction);
                $("#AreaOfInstallation").val(data.AreaOfInstallation);
                $("#TechnicalSpecification").val(data.TechnicalSpecification);
                $("#ScopeOfSupplyID").val(data.ScopeOfSupplyID);
                $("#Packaging").val(data.Packaging);
                $("#Insurance").val(data.Insurance);
                $("#Supervision").val(data.Supervision);
                $("#LDCharges").val(data.LDCharges);
                $("#ContactAtSite").val(data.ContactAtSite);
                $("#ContactAtPurchase").val(data.ContactAtPurchase);
                $("#DeliveryDate").datepicker("setDate", data.strDeliveryDate);
                $("#Transport").val(data.Transport);
                $("#DispatchDate1").datepicker("setDate", data.strDispatchDate1);
                $("#DispatchDate2").datepicker("setDate", data.strDispatchDate2);
                $("#DispatchDate3").datepicker("setDate", data.strDispatchDate3);
                $("#DispatchDate4").datepicker("setDate", data.strDispatchDate4);
                $("#DispatchDate5").datepicker("setDate", data.strDispatchDate5);
                $("#BriefTechnicalSpecification").val(data.BriefTechnicalSpecification);
                $("#Quantity").val(data.Quantity);
                $("#InstAndComm").val(data.InstAndComm);
                $("#GuaranteeType").val(data.GuaranteeType).trigger("change");
                $("#SBG").val(data.SBG);
                $("#ABG").val(data.ABG);
                $("#PBG").val(data.PBG);
                $("#AdditionalContact").val(data.AdditionalContact);

            }
        }
    }

    var $OrderBookGrid = $("#OrderBookGrid").pqGrid(setOrderBookGrid);

    function loadOrderBookGrid() {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOrderBook",
            dataType: "json",

            beforeSend: function () {
                $("#OrderBookGrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#OrderBookGrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#OrderBookGrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading OrderBook grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#OrderBookGrid").pqGrid("hideLoading");
            }
        });

    }
    //-----------------------------------OrderBookGrid (Ends here)-----------------------------------//

    function GetOBOtherDetails(orderBookID) {
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOBOtherDetails",
            data: { OrderBookID: orderBookID },
            dataType: "json",
            success: function (response) {
                if (response.success) {
                    let details = response.records
                    for (var i = 0; i < details.length; i++) {
                        otherFieldIndx++
                        addDiv(otherFieldIndx);
                        $(`#Name${otherFieldIndx}`).val(details[i].Name);
                        $(`#Value${otherFieldIndx}`).val(details[i].Value);
                    }

                } else {
                    console.warn("No details found or an issue occurred: ", response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error loading otherDetails details: ", status, error);
            }
        });
    }

    function loadOrderBookProjectTCGrid(orderBookID) {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOrderBookProjectTC",
            data: { OrderBookID: orderBookID },
            dataType: "json",

            beforeSend: function () {
                $("#ProjectTCgrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#ProjectTCgrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#ProjectTCgrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading OrderBookProjectTC grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#ProjectTCgrid").pqGrid("hideLoading");
            }
        });
    }

    function loadOrderBookPaymentTermsGrid(orderBookID) {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOrderBookPaymentTerms",
            data: { OrderBookID: orderBookID },
            dataType: "json",

            beforeSend: function () {
                $("#PaymentTermgrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#PaymentTermgrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#PaymentTermgrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading OrderBookPaymentTerms grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#PaymentTermgrid").pqGrid("hideLoading");
            }
        });
    }

    function loadOrderBookDeliveryTermsGrid(orderBookID) {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOrderBookDeliveryTerms",
            data: { OrderBookID: orderBookID },
            dataType: "json",

            beforeSend: function () {
                $("#DeliveryTermgrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#DeliveryTermgrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#DeliveryTermgrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading OrderBookDeliveryTerms grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#DeliveryTermgrid").pqGrid("hideLoading");
            }
        });
    }

    function loadOrderBookOtherTermsGrid(orderBookID) {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOrderBookOtherTerms",
            data: { OrderBookID: orderBookID },
            dataType: "json",

            beforeSend: function () {
                $("#OtherTermgrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#OtherTermgrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#OtherTermgrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading OrderBookOtherTerms grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#OtherTermgrid").pqGrid("hideLoading");
            }
        });
    }

    function loadOrderBookBasisTermsGrid(orderBookID) {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/OrderBook/GetOrderBookBasisTerms",
            data: { OrderBookID: orderBookID },
            dataType: "json",

            beforeSend: function () {
                $("#BasisTermgrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#BasisTermgrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#BasisTermgrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading OrderBookBasisTerms grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#BasisTermgrid").pqGrid("hideLoading");
            }
        });
    }

    function validateFormData() {
        const fields = [
            { selector: "#EnquiryID", placeholder: "Enquiry" },
            { selector: "#PONo", placeholder: "PO No" },
            { selector: "#PODate", placeholder: "PO Date" },
            { selector: "#POBaseValue", placeholder: "PO Value" },
            { selector: "#BudgetValue", placeholder: "Budget Value" },
            { selector: "#ABGSubmitDate", placeholder: "ABG Submit Date" },
        ];

        for (const { selector, placeholder } of fields) {
            const $field = $(selector);
            const fieldValue = $field.val();
            const fieldPlaceholder = $field.attr("placeholder") || placeholder;

            if (!fieldValue) {
                ShowAlert("error", `${fieldPlaceholder} is required!`);
                return false;
            }
        }

        const piAdvSubmitDate = $("#PIAdvSubmitDate").val();
        const piAbgAdvSubmitDate = $("#PIABGAdvSubmitDate").val();

        if (!piAdvSubmitDate && !piAbgAdvSubmitDate) {
            ShowAlert("error", "<b>One of the following is required:</b> <br/>(PI Submission date for ABG prepayment) <b> OR </b> (PI Submission date for advance payment).");
            return false;
        }

        if ($("#GuaranteeType").val() === "Yes") {
            const bankGuaranteeFields = ["#SBG", "#ABG", "#PBG"];
            const allFieldsInvalid = bankGuaranteeFields.every(selector => {
                const value = $(selector).val();
                return value === "" || value === "0" || value === 0;
            });

            if (allFieldsInvalid) {
                ShowAlert("error", "Please enter Bank-Guarantee Value");
                return false;
            }
        }

        return true;
    }

    function getOtherFeildDetails() {
        const data = [];

        $("#OtherFields tr").each(function () {
            const index = $(this).attr('id').replace('tr', '');
            const name = $(`#Name${index}`).val();
            const value = $(`#Value${index}`).val();

            if (name && value) {
                data.push({
                    Name: name,
                    Value: value
                });
            }
        });

        return data;
    }

    function SaveOrderBook() {
        if (!validateFormData()) {
            return false;
        }
        let projectTCData = $ProjectTCgrid.pqGrid("option", "dataModel.data").filter(item => item.State);
        let paygridData = $PaymentTermgrid.pqGrid("option", "dataModel.data").filter(item => item.State);
        let delgridData = $DeliveryTermgrid.pqGrid("option", "dataModel.data").filter(item => item.State);
        let othgridData = $OtherTermgrid.pqGrid("option", "dataModel.data").filter(item => item.State);
        let basgridData = $Basis.pqGrid("option", "dataModel.data").filter(item => item.State);

        const Details = {
            OrderBookID: tempOrderBookID,
            EnquiryID: $("#EnquiryID").val(),
            OfferID: tempOfferID,
            PONo: $("#PONo").val(),
            PODate: $("#PODate").val(),
            POBaseValue: $("#POBaseValue").val(),
            BudgetValue: $("#BudgetValue").val(),
            MaterialValue: $("#MaterialValue").val(),
            ConversionValue: $("#ConversionValue").val(),
            TransValue: $("#TransValue").val(),
            ECValue: $("#ECValue").val(),
            PIAdvSubmitDate: $("#PIAdvSubmitDate").val(),
            ABGSubmitDate: $("#ABGSubmitDate").val(),
            PIABGAdvSubmitDate: $("#PIABGAdvSubmitDate").val(),
            ProjectDescription: $("#ProjectDescription").val(),
            MaterialOfConstruction: $("#MaterialOfConstruction").val(),
            AreaOfInstallation: $("#AreaOfInstallation").val(),
            ConsigneeID: $("#ConsigneeID").val(),
            TechnicalSpecification: $("#TechnicalSpecification").val(),
            ScopeOfSupplyID: $("#ScopeOfSupplyID").val(),
            Packaging: $("#Packaging").val(),
            Insurance: $("#Insurance").val(),
            Supervision: $("#Supervision").val(),
            LDCharges: $("#LDCharges").val(),
            ContactAtSite: $("#ContactAtSite").val(),
            ContactAtPurchase: $("#ContactAtPurchase").val(),
            DeliveryDate: $("#DeliveryDate").val(),
            Transport: $("#Transport").val(),
            DispatchDate1: $("#DispatchDate1").val(),
            DispatchDate2: $("#DispatchDate2").val(),
            DispatchDate3: $("#DispatchDate3").val(),
            DispatchDate4: $("#DispatchDate4").val(),
            DispatchDate5: $("#DispatchDate5").val(),
            BriefTechnicalSpecification: $("#BriefTechnicalSpecification").val(),
            Quantity: $("#Quantity").val(),
            InstAndComm: $("#InstAndComm").val(),
            GuaranteeType: $("#GuaranteeType").val(),
            SBG: $("#SBG").val(),
            ABG: $("#ABG").val(),
            PBG: $("#PBG").val(),
            AdditionalContact: $("#AdditionalContact").val(),
            OBOtherDetails: getOtherFeildDetails(),
            ProjectTCList: projectTCData,
            PaymentTermList: paygridData,
            DeliveryTermList: delgridData,
            OtherTermList: othgridData,
            BasisTermList: basgridData,
        };

        const antiForgeryToken = $("input[name=__RequestVerificationToken]").val();

        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            url: "/OrderBook/SaveOrderBook",
            data: JSON.stringify(Details),
            success: function (response) {
                if (response.success) {
                    let fileSaveMsg = "";
                    try {
                        SaveScandoc(`Attachment`, response.Data.ProjectID, "Marketing", "OrderBook");
                    } catch (err) {
                        fileSaveMsg = "But failed to save attached files.";
                    } finally {
                        const message = tempOrderBookID === 0 ? `Work Order registered successfully!<br> Project Code : <b>${response.Data.ProjectCode}</b>` : `Work Order updated successfully!<br> Project Code : <b>${response.Data.ProjectCode}</b>`;
                        if (tempOrderBookID === 0) {
                            GetUserByGroups(response.Data.ProjectCode, message, fileSaveMsg);
                        } else {
                            ShowAlert("success", `${message} <br> ${fileSaveMsg}`);
                            clearFormData();
                        }
                    }
                } else {
                    ShowAlert("error", response.message || "An error occurred while saving the offer.");
                }
            },
            error: function (xhr, status, error) {
                ShowAlert("error", `An unexpected error occurred: ${xhr.responseText || error}`);
            }
        });

    }

    function clearFormData(rowclick) {
        $("#EnquiryLabel").val('').prop('disabled', false);
        if (!rowclick) {
            getEnquiry();
        }
        tempOrderBookID = 0;
        tempProjectID = 0;
        $("#PONo").val('');
        $("#ProjectDescription").val('');
        $("#MaterialOfConstruction").val('');
        $("#AreaOfInstallation").val('');
        $("#ConsigneeID").empty();
        $("#TechnicalSpecification").val('');
        $("#ScopeOfSupplyID").val('');
        $("#Packaging").val('');
        $("#Insurance").val('');
        $("#Supervision").val('');
        $("#LDCharges").val('');
        $("#ContactAtSite").val('');
        $("#ContactAtPurchase").val('');
        $("#Transport").val('');
        $("#BriefTechnicalSpecification").val('');
        $("#Quantity").val('');
        $("#InstAndComm").val('');
        $("#GuaranteeType").val('');
        $("#SBG").val('');
        $("#ABG").val('');
        $("#PBG").val('');
        $("#AdditionalContact").val('');

        $("#OtherFields").empty();
        $(".datepicker").datepicker("setDate", null);
        $("#Attachment").val(null);
        ClearParamGrid("ProjectTCgrid");
        ClearParamGrid("PaymentTermgrid");
        ClearParamGrid("DeliveryTermgrid");
        ClearParamGrid("OtherTermgrid");
        ClearParamGrid("BasisTermgrid");
        loadGroupGrid();
        clearEnquiryDetails();
        $(".BG").hide();
    }

    function addOtherFields() {
        otherFieldIndx++;
        addDiv(otherFieldIndx);
    }

    function addDiv(index) {
        const divContent = `
            <tr id="tr${index}">
                <th scope="row">
                    <div class="row">
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="Name${index}" placeholder="Enter Name${index}" style="background-color: gainsboro;">
                        </div>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" id="Value${index}" placeholder="Enter Value${index}">
                        </div>
                        <div class="col-sm-1" style="text-align: center;">
                            <span><a class="btnDelete" onclick="deleteRow(${index})"><i class="fa fa-times-circle" style="color: red; font-size: 29px;"></i></a></span>
                        </div>
                    </div>
                </th>
            </tr>
        `;

        $("#OtherFields").append(divContent);
    }

    function deleteRow(index) {
        $(`#tr${index}`).remove();
    }

    $("#PIAdvSubmitDate").change(() => {
        if ($("#PIAdvSubmitDate").val() != "") {
            $("#PIABGAdvSubmitDate").datepicker("setDate", null);
        }
    });

    $("#PIABGAdvSubmitDate").change(() => {
        if ($("#PIABGAdvSubmitDate").val() != "") {
            $("#PIAdvSubmitDate").datepicker("setDate", null);
        }
    });

    $("#GuaranteeType").change(() => {
        if ($("#GuaranteeType").val() == "Yes") {
            $(".BG").show();
        } else {
            $(".BG").hide();
            $("#SBG").val('');
            $("#ABG").val('');
            $("#PBG").val('');
        }
    });
    function clearEnquiryDetails() {
        tempOfferID = 0;
        $("#EnquiryID").val('');
        $("#EnquiryLabel").val('');
        $("#EnquiryNo").val('');
        $("#EnquiryDate").val('');
        $("#Source").val('');
        $("#Product").val('');
        $("#ProductID").val('');
        $("#Location").val('');
        $("#ClientName").val('');
        $("#Place").val('');
        $("#ContactPerson").val('');
        $("#ContactNo").val('');
        $("#EmailID").val('');
        $("#Status").val('');
        $("#StatusID").val('');
        $("#Type").val('');
        $("#Sector").val('');
        $("#Zone").val('');
        $("#CustomerMailMsg").val('');
        $("#POBaseValue").val('');
        $("#BudgetValue").val('');
        $("#MaterialValue").val('');
        $("#ConversionValue").val('');
        $("#TransValue").val('');
        $("#ECValue").val('');
    }

    function showModal() {
        $("#SearchGridModal").modal('show');
        loadOrderBookGrid();
    }

    function closeModal() {
        $("#SearchGridModal").modal('hide');
        $("#ReportModal").modal('hide');
    }

    /********* Project TC Search Grid *********/
    $(document).ready(function () {
        var dataDelM = { location: "local", sorting: 'local' }
        var colDelM = [
            {
                dataIndx: "State", Width: 25, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "ProjectTCID", dataType: "integer", hidden: true },
            {
                title: "Code", dataIndx: "ProjectTCCode", width: 150, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            },
            {
                title: "Name", dataIndx: "ProjectTCDesc", width: 450, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            }
        ];
        var DelM = {
            width: '100%',
            height: 400,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            filterModel: { on: true, mode: "AND", header: true },
            selectionModel: { type: 'row' },
            colModel: colDelM,
            dataModel: dataDelM,
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $SearchProjectTCgrid = $("#SearchProjectTCgrid").pqGrid(DelM);
    });
    /********* Project TC Grid *********/
    $(document).ready(function () {
        $('#btnViewProjectTC').on('click', function () {
            LoadSearchProjectTCgrid();
        });
        $('#btnRemoveProjectTC').on('click', function () {
            var getData = $ProjectTCgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();
            $.each(selectedItems, function (key, value) {
                var obj = $ProjectTCgrid.pqGrid("getRowIndx", { rowData: value });
                var rowIndx = obj.rowIndx;
                $ProjectTCgrid.pqGrid("deleteRow", { rowIndx: rowIndx });
            });
        });

        var dataOtherM = { location: "local" }
        var colOtherM = [
            {
                dataIndx: "State", Width: 15, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "ProjectTCID", dataType: "integer", hidden: true },
            { title: "Code", dataIndx: "ProjectTCCode", width: 200, editable: false },
            { title: "Name", dataIndx: "ProjectTCDesc", width: 400, editable: false }
        ];
        var DelM = {
            width: '100%',
            height: 250,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            selectionModel: { type: 'row' },
            colModel: colOtherM,
            dataModel: dataOtherM,
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $ProjectTCgrid = $("#ProjectTCgrid").pqGrid(DelM);
    });
    function LoadSearchProjectTCgrid() {
        $("#ProjectTCModal").dialog({
            height: 500,
            width: 700,
            modal: true,
            open: function (evt, ui) {
                $.ajax({
                    type: 'GET',
                    url: "/ProjectTCMaster/AllProjectTC",
                    dataType: "json",
                    data: { searchProjectTC:'', searchCode:''},
                    success: function (data) {
                        if (data.success) {
                            $SearchProjectTCgrid.pqGrid("option", "dataModel.data", data.records);
                            $SearchProjectTCgrid.pqGrid("refreshDataAndView");
                        }
                    },
                    error: function (e) {
                        ShowAlert("error", "No Record Found");
                    }
                });
            }
        });
    }

    /********* Payment Term Search Grid *********/
    $(document).ready(function () {
        var dataPayM = { location: "local" }
        var colPayM = [
            {
                dataIndx: "State", Width: 25, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "TermID", dataType: "integer", hidden: true },
            {
                title: "Code", dataIndx: "PaymentTermCode", width: 150, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            },
            {
                title: "Name", dataIndx: "PaymentTermDesc", width: 450, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }

            }
        ];
        var DelM = {
            width: '100%',
            height: 400,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            filterModel: { on: true, mode: "AND", header: true },
            selectionModel: { type: 'none', subtype: 'incr', cbHeader: true, cbAll: true },
            colModel: colPayM,
            dataModel: dataPayM,
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $SearchPaymentTermgrid = $("#SearchPaymentTermgrid").pqGrid(DelM);
    });
    /********* Payment Term Grid *********/
    $(document).ready(function () {
        $('#btnViewPayTerms').on('click', function () {
            LoadSearchPaymentTermgrid();
        });
        $('#btnRemovePayTerms').on('click', function () {
            var getData = $PaymentTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();
            $.each(selectedItems, function (key, value) {
                var obj = $PaymentTermgrid.pqGrid("getRowIndx", { rowData: value });
                var rowIndx = obj.rowIndx;
                $PaymentTermgrid.pqGrid("deleteRow", { rowIndx: rowIndx });
            });
        });
        var dataDelM = { location: "local", sorting: 'local' }
        var colDelM = [
            {
                dataIndx: "State", Width: 15, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "PayTermID", dataType: "integer", hidden: true },
            {
                title: "Code", dataIndx: "PaymentTermCode", width: 200, editable: false

            },
            {
                title: "Name", dataIndx: "PaymentTermDesc", width: 400, editable: false
            }
        ];
        var DelM = {
            width: '100%',
            height: 250,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            selectionModel: { type: 'row' },
            colModel: colDelM,
            dataModel: dataDelM,
            pageModel: { type: "local", rPP: 20 },
        };
        $PaymentTermgrid = $("#PaymentTermgrid").pqGrid(DelM);
    });
    function LoadSearchPaymentTermgrid() {
        $("#PaymentItemModal").dialog({
            height: 500,
            width: 700,
            modal: true,
            open: function (evt, ui) {
                $.ajax({
                    type: "GET",
                    url: "/PaymentTermMaster/GetActivePaymentTerm",
                    datatype: "Json",
                    success: function (data) {
                        $SearchPaymentTermgrid.pqGrid("option", "dataModel.data", data.records);
                        $SearchPaymentTermgrid.pqGrid("refreshDataAndView");
                    }
                });
            }

        });
    }

    /********* Delivery Term Search Grid *********/
    $(document).ready(function () {
        var dataModel = {
            location: "local"
        }
        var colDelM = [
            {
                dataIndx: "State", Width: 25, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "TermID", dataType: "integer", hidden: true },
            {
                title: "Code", dataIndx: "DeliveryTermCode", width: 150, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            },
            {
                title: "Name", dataIndx: "DeliveryTermDesc", width: 450, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            }
        ];
        var DelM = {
            width: '100%',
            height: 400,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            selectionModel: { type: 'row' },
            colModel: colDelM,
            dataModel: dataModel,
            filterModel: { on: true, mode: "AND", header: true },
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $SearchDeliveryTermgrid = $("#SearchDeliveryTermgrid").pqGrid(DelM);
    });
    /********* Delivery Term Grid *********/
    $(document).ready(function () {
        $('#btnViewDelTerms').on('click', function () {
            LoadSearchDeliveryTermgrid();
        });
        $('#btnRemoveDelTerms').on('click', function () {
            var getData = $DeliveryTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();

            $.each(selectedItems, function (key, value) {
                var obj = $DeliveryTermgrid.pqGrid("getRowIndx", { rowData: value });
                var rowIndx = obj.rowIndx;
                $DeliveryTermgrid.pqGrid("deleteRow", { rowIndx: rowIndx });
            });
        });

        var dataDelM = { location: "local", sorting: 'local' }
        var colDelM = [
            {
                dataIndx: "State", Width: 15, align: "center", type: 'checkBoxSelection', cls: 'ui-State-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "DelTermID", dataType: "integer", hidden: true },
            { title: "Code", dataIndx: "DeliveryTermCode", width: 200, editable: false },
            { title: "Name", dataIndx: "DeliveryTermDesc", width: 400, editable: false }
        ];
        var DelM = {
            width: '100%',
            height: 250,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            selectionModel: { type: 'row' },
            colModel: colDelM,
            dataModel: dataDelM,
            pageModel: { type: "local", rPP: 20 }
        };
        $DeliveryTermgrid = $("#DeliveryTermgrid").pqGrid(DelM);
    });
    function LoadSearchDeliveryTermgrid() {
        $("#DeliveryItemModal").dialog({
            height: 500,
            width: 700,
            modal: true,
            open: function (evt, ui) {
                $.ajax({
                    type: "GET",
                    url: "/DeliveryTerm/GetActiveDeliveryTerms",
                    datatype: "Json",
                    success: function (data) {
                        $SearchDeliveryTermgrid.pqGrid("option", "dataModel.data", data.records);
                        $SearchDeliveryTermgrid.pqGrid("refreshDataAndView");
                    }
                });
            }
        });
    }

    /********* Other Term (Freight) Search Grid *********/
    $(document).ready(function () {
        var dataDelM = { location: "local", sorting: 'local' }
        var colDelM = [
            {
                dataIndx: "state", Width: 25, align: "center", type: 'checkBoxSelection', cls: 'ui-state-default', sortable: false,
                editor: false, dataType: 'bool',
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "TermID", dataType: "integer", hidden: true },
            {
                title: "Code", dataIndx: "OthersTermCode", width: 150, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            },
            {
                title: "Name", dataIndx: "OthersTermDesc", width: 450, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            }
        ];
        var DelM = {
            width: '100%',
            height: 400,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            filterModel: { on: true, mode: "AND", header: true },
            selectionModel: { type: 'row' },
            colModel: colDelM,
            dataModel: dataDelM,
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $SearchOtherTermgrid = $("#SearchOtherTermgrid").pqGrid(DelM);
    });
    /********* Other Term (Freight) Grid *********/
    $(document).ready(function () {
        $('#btnViewOtherTerms').on('click', function () {
            //$("#OtherItem").modal('toggle');
            LoadSearchOtherTermgrid();
        });
        $('#btnRemoveOtherTerms').on('click', function () {
            var getData = $OtherTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("state", true).select();
            $.each(selectedItems, function (key, value) {
                var obj = $OtherTermgrid.pqGrid("getRowIndx", { rowData: value });
                var rowIndx = obj.rowIndx;
                $OtherTermgrid.pqGrid("deleteRow", { rowIndx: rowIndx });
            });
        });

        var dataOtherM = { location: "local" }
        var colOtherM = [
            {
                dataIndx: "State", Width: 15, align: "center", type: 'checkBoxSelection', cls: 'ui-state-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "OtherTermID", dataType: "integer", hidden: true },
            { title: "Code", dataIndx: "OthersTermCode", width: 200, editable: false },
            { title: "Name", dataIndx: "OthersTermDesc", width: 400, editable: false }
        ];
        var DelM = {
            width: '100%',
            height: 260,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            selectionModel: { type: 'row' },
            colModel: colOtherM,
            dataModel: dataOtherM,
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $OtherTermgrid = $("#OtherTermgrid").pqGrid(DelM);
    });
    function LoadSearchOtherTermgrid() {
        $("#OtherItemModal").dialog({
            height: 500,
            width: 700,
            modal: true,
            open: function (evt, ui) {
                $.ajax({
                    type: "GET",
                    url: "/OtherTermMaster/GetActiveOtherTerm",
                    datatype: "Json",
                    success: function (data) {
                        $SearchOtherTermgrid.pqGrid("option", "dataModel.data", data.records);
                        $SearchOtherTermgrid.pqGrid("refreshDataAndView");
                    }
                });
            }
        });
    }

    /***************** Basis Term (P&F) Search Grid********************/
    $(document).ready(function () {
        var dataDelM = { location: "local", sorting: 'local' }
        var colDelM = [
            {
                dataIndx: "state", Width: 25, align: "center", type: 'checkBoxSelection', cls: 'ui-state-default', sortable: false,
                editor: false, dataType: 'bool',
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "BasisID", dataType: "integer", hidden: true },
            {
                title: "Code", dataIndx: "BasisCode", width: 150, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            },
            {
                title: "Description", dataIndx: "BasisDesc", width: 450, editable: false,
                filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
            }
        ];
        var DelM = {
            width: '100%',
            height: 400,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            filterModel: { on: true, mode: "AND", header: true },
            selectionModel: { type: 'row' },
            colModel: colDelM,
            dataModel: dataDelM,
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true,
        };
        $SearchBasisTermgrid = $("#SearchBasisTermgrid").pqGrid(DelM);
    });
    /**********************Basis Term (P&F) Grid******************/
    $(document).ready(function () {
        $('#btnBasisTerms').on('click', function () {
            LoadSearchBasisTermgrid();
        });
        $('#btnRemoveBasisTerms').on('click', function () {
            var getData = $Basis.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("state", true).select();
            $.each(selectedItems, function (key, value) {
                var obj = $Basis.pqGrid("getRowIndx", { rowData: value });
                var rowIndx = obj.rowIndx;
                $Basis.pqGrid("deleteRow", { rowIndx: rowIndx });
            });
        });

        var basism = { location: "local" }
        var colM = [
            {
                dataIndx: "State", Width: 15, align: "center", type: 'checkBoxSelection', cls: 'ui-state-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "BasisId", dataType: "integer", hidden: true },
            { title: "Code", dataIndx: "BasisCode", width: 200, editable: false },
            { title: "Name", dataIndx: "BasisDesc", width: 400, editable: false }
        ];
        var basisgrid = {
            width: '100%',
            height: 260,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            columnBorders: true,
            selectionModel: { type: 'row' },
            colModel: colM,
            dataModel: basism,
            pageModel: { type: "local", rPP: 20 },
            virtualX: true,
            virtualY: true
        };
        $Basis = $("#BasisTermgrid").pqGrid(basisgrid);
    });
    function LoadSearchBasisTermgrid() {
        $("#BasisItemModal").dialog({
            height: 500,
            width: 700,
            modal: true,
            open: function (evt, ui) {
                $.ajax({
                    type: "GET",
                    url: "/OtherTermMaster/AllBasisTerm",
                    datatype: "Json",
                    success: function (data) {
                        $SearchBasisTermgrid.pqGrid("option", "dataModel.data", data.records);
                        $SearchBasisTermgrid.pqGrid("refreshDataAndView");
                    }
                });
            }
        });
    }

    /********* Add Button Click Events *********/
    $(document).ready(function () {
        $('#btnAddProjectTC').on('click', function () {
            ClosePopupWindow("ProjectTCModal");
            var getData = $SearchProjectTCgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();
            var colM = $ProjectTCgrid.pqGrid("option", "colModel");
            colM[2].editable = true;
            colM[3].editable = true;
            $ProjectTCgrid.pqGrid("option", "colModel", colM);
            $.each(selectedItems, function (key, value) {
                $ProjectTCgrid.pqGrid("addRow", { newRow: { 'ProjectTCID': value.ProjectTCID, 'ProjectTCCode': value.ProjectTCCode, 'ProjectTCDesc': value.ProjectTCDesc, 'State': true } })
            });
            colM[2].editable = false;
            colM[3].editable = false;
            $ProjectTCgrid.pqGrid("option", "colModel", colM);
        });

        $('#btnAddPaymentTerm').on('click', function () {
            ClosePopupWindow("PaymentItemModal");
            var getData = $SearchPaymentTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();
            var colM = $PaymentTermgrid.pqGrid("option", "colModel");
            colM[2].editable = true;
            colM[3].editable = true;
            $PaymentTermgrid.pqGrid("option", "colModel", colM);
            $.each(selectedItems, function (key, value) {
                $PaymentTermgrid.pqGrid("addRow", { newRow: { 'PayTermID': value.TermID, 'PaymentTermCode': value.PaymentTermCode, 'PaymentTermDesc': value.PaymentTermDesc, 'State': true } })
            });
            colM[2].editable = false;
            colM[3].editable = false;
            $PaymentTermgrid.pqGrid("option", "colModel", colM);
        });

        $('#btnAddDeliveryTerm').on('click', function () {
            ClosePopupWindow("DeliveryItemModal");
            var getData = $SearchDeliveryTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("State", true).select();

            var colM = $DeliveryTermgrid.pqGrid("option", "colModel");
            colM[2].editable = true;
            colM[3].editable = true;
            $DeliveryTermgrid.pqGrid("option", "colModel", colM);
            $.each(selectedItems, function (key, value) {
                $DeliveryTermgrid.pqGrid("addRow", { newRow: { 'DelTermID': value.TermID, 'DeliveryTermCode': value.DeliveryTermCode, 'DeliveryTermDesc': value.DeliveryTermDesc, 'State': true } })
            });
            colM[2].editable = false;
            colM[3].editable = false;
            $DeliveryTermgrid.pqGrid("option", "colModel", colM);
        });

        $('#btnAddOtherTerm').on('click', function () {
            ClosePopupWindow("OtherItemModal");
            var getData = $SearchOtherTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("state", true).select();
            var colM = $OtherTermgrid.pqGrid("option", "colModel");
            colM[2].editable = true;
            colM[3].editable = true;
            $OtherTermgrid.pqGrid("option", "colModel", colM);
            $.each(selectedItems, function (key, value) {
                $OtherTermgrid.pqGrid("addRow", { newRow: { 'OtherTermID': value.TermID, 'OthersTermCode': value.OthersTermCode, 'OthersTermDesc': value.OthersTermDesc, 'State': true } })
            });
            colM[2].editable = false;
            colM[3].editable = false;
            $OtherTermgrid.pqGrid("option", "colModel", colM);
        });

        $('#btnAddBasisTerm').on('click', function () {
            ClosePopupWindow("BasisItemModal");
            var getData = $SearchBasisTermgrid.pqGrid("option", "dataModel.data");
            var selectedItems = jLinq.from(getData).equals("state", true).select();
            var colM = $Basis.pqGrid("option", "colModel");
            colM[2].editable = true;
            colM[3].editable = true;
            $OtherTermgrid.pqGrid("option", "colModel", colM);
            $.each(selectedItems, function (key, value) {
                $Basis.pqGrid("addRow", { newRow: { 'BasisId': value.BasisId, 'BasisCode': value.BasisCode, 'BasisDesc': value.BasisDesc, 'State': true } })
            });
            colM[2].editable = false;
            colM[3].editable = false;
            $Basis.pqGrid("option", "colModel", colM);
        });
    });

    function closeTermModal() {
        ClosePopupWindow("DeliveryItemModal");
        ClosePopupWindow("PaymentItemModal");
        ClosePopupWindow("ProjectTCModal");
        ClosePopupWindow("OtherItemModal");
        ClosePopupWindow("BasisItemModal");
    }

    $("#content-tab").tabs({
        activate: function (event, ui) {
            let tabIndx = ui.newTab.index();
            const grids = [
                $ProjectTCgrid,
                $PaymentTermgrid,
                $DeliveryTermgrid,
                $OtherTermgrid,
                $Basis
            ];
            if (grids[tabIndx]) {
                grids[tabIndx].pqGrid("refreshDataAndView");
            }
        }
    });
    $PaymentTermgrid.pqGrid("refreshDataAndView");


    //---------------------------------------------------------------------Show Attachments-----------------------------------------------------------------//

    function viewAttachment() {

        if (!tempProjectID || tempProjectID == 0) {
            ShowAlert("error", "Please select a OrederBook first.");
            return false;
        }

        $.ajax({
            type: "GET",
            url: "/ScanDoc/ScanDoc/GetScanDocUrl",
            data: { FileId: tempProjectID, ScanDocSubTypeId: 28 },
            dataType: "json",
            success: function (data) {
                if (data && data.length > 0) {
                    closeImageModal();
                    ViewSlideShow(data, 'slideshow-container', appSetting);
                } else {
                    ShowAlert("error", "No documents found.");
                }
            },
            error: function (xhr, status, error) {
                ShowAlert("error", "An error occurred while fetching documents. Please try again later.");
                console.error("Error fetching documents:", status, error);
            }
        });
    }

    function ViewSlideShow(ImageGallery, container, appSetting) {
        if (ImageGallery.length === 0) {
            ShowAlert("error", "No Attachment found");
            return;
        }

        const supportedExtensions = new Set(['pdf', 'jpeg', 'jpg', 'png']);
        const $container = $("#" + container);
        let slidesHtml = '';

        $container.empty();

        ImageGallery.forEach(image => {
            const filePath = image.FilePath;
            const fileNameWithExtension = filePath.split('\\').pop();
            const [name, extension] = fileNameWithExtension.split('.').map(part => part.toLowerCase());

            if (!supportedExtensions.has(extension)) return;

            const src = `${appSetting}${filePath}`;
            const deleteItemHtml = `
            <a href="javascript:void(0);" data-id="${image.FileId}" class="deleteItem fa fa-trash" style="font-size: x-large;"
               onclick="Deletefile(${image.FileId}, ${image.ScanDocId}); return false;"></a>`;
            const downloadHtml = '<a class="fa fa-download downloadFiles" href="' + src + '" download></a>';
            const nameHtml = `<span class="text" style='font-weight: bold; font-size: large;'>${name}</span>`;
            let contentHtml = '';

            switch (extension) {
                case 'pdf':
                    contentHtml = `<object data="${src}#toolbar=0&navpanes=0&scrollbar=0" type="application/pdf" width="100%" height="500px"></object>`;
                    break;
                case 'jpeg':
                case 'jpg':
                case 'png':
                    contentHtml = `<img src="${src}" style="width:800px;height:500px;">`;
                    break;
            }

            slidesHtml += `
            <div class="imgSlide">
                ${contentHtml}
                <div class="divider"></div>
                <div class="row">
                    <div class="col-sm-2">${deleteItemHtml}</div>
                    <div class="col-sm-8 text-center">${nameHtml}</div>
                    <div class="col-sm-2">${downloadHtml}</div>
                </div>
            </div>`;
        });

        $container.append(slidesHtml);
        $("#ViewModal").css('display', 'block');
        showGallery(1);
    }

    let ImgIndex = 1;

    function plusSlides(n) {
        showGallery(ImgIndex += n);
    }

    function showGallery(n) {
        let i;
        let ImgSlides = document.getElementsByClassName("imgSlide");
        let video = document.getElementById("video");
        if (n > ImgSlides.length) { ImgIndex = 1; }
        if (n < 1) { ImgIndex = ImgSlides.length; }
        for (i = 0; i < ImgSlides.length; i++) {
            ImgSlides[i].style.display = "none";
        }
        ImgSlides[ImgIndex - 1].style.display = "block";
        if (video) {
            video.play();
        }
    }

    function Deletefile(fId, sId) {
        $.ajax({
            type: "POST",
            url: "/ScanDoc/ScanDoc/DeleteScanDocfile",
            data: {
                fileId: fId,
                scanDocId: sId
            },
            success: function () {
                $("#" + fId).parent().remove();
                $("#appendImg").empty();
                ShowAlert("success", "File Removed successfully");
                closeImageModal();
            },
            error: function () {
                ShowAlert("error", "Error deleting the file.");
            }
        });
        return false;
    }

    function closeImageModal() {
        $("#slideshow-container").empty();
        $("#ViewModal").css('display', 'none');
    }

    //-----------------------------------On Load-----------------------------------//
    getEnquiry();


    $('#btnExport').on('click', function () {
        if (tempOrderBookID === "" || tempOrderBookID === 0) {
            ShowAlert("error", "Please Select Order Book No");
            return;
        }
        $("#ReportModal").modal('show');

        ReportValidationCheck(tempOrderBookID);
    });

    function ReportValidationCheck(Id) {
        var url = "";

        url = "../../Reports/ReportViewer.aspx?reportid=" + 241 + "&orderBookId=" + Id;

        var myframe = document.getElementById("iframeReportViewer");
        if (myframe != null) {
            if (myframe.src) {
                myframe.src = url;
            }
            else if (myframe.contentWindow != null && myframe.contentWindow.location != null) {
                myframe.contentWindow.location = url;
            }
            else {
                myframe.setAttribute('src', url);
            }
            return false;
        }
    }


    //-----------------------------------GroupGrid (Starts here)-----------------------------------//
    var GroupGrid_GDM = { location: "local" };
    var GroupGrid_GCM = [
        {
            dataIndx: "State", maxWidth: 25, minWidth: 25, align: "center", type: 'checkBoxSelection', cls: 'ui-state-default', resizable: false, sortable: false,
            editor: false, dataType: 'bool', title: "<input type='checkbox' />",
            cb: {
                select: true,
                all: false,
                header: true
            }
        },
        {
            title: "Group Name", dataIndx: "GroupName", width: 700,
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        }
    ];
    var setGroupGrid = {
        height: 403,
        width: 'auto',
        maxWidth: '100%',
        minWidth: 800,
        sortable: true,
        autofill: true,
        numberCell: { show: false },
        hoverMode: 'row',
        showTop: true,
        showTitle: true,
        showBottom: true,
        resizable: true,
        scrollModel: { autoFit: true },
        filterModel: { on: true, mode: "AND", header: true },
        draggable: false,
        hwrap: false,
        wrap: false,
        editable: true,
        columnBorders: true,
        menuIcon: true,
        selectionModel: { type: 'cell', mode: 'multiple', cbHeader: true },
        colModel: GroupGrid_GCM,
        dataModel: GroupGrid_GDM,
        pageModel: { type: "local", rPP: 10 }
    };
    var $GroupGrid = $("#GroupGrid").pqGrid(setGroupGrid);
    function loadGroupGrid(groupID) {
        var antiForgeryToken = $("input[name='__RequestVerificationToken']").val();
        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            data: { statusID: null },
            url: "/GroupMaster/GetGroupMaster",
            dataType: "json",

            beforeSend: function () {
                $("#GroupGrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#GroupGrid").pqGrid("hideLoading");
            },

            success: function (response) {
                const grid = $("#GroupGrid").pqGrid();

                if (response.success) {
                    grid.pqGrid("option", "dataModel.data", response.records);
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    grid.pqGrid("option", "dataModel.data", []);
                }

                grid.pqGrid("refreshDataAndView");
                PqGridRefreshClick(grid);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading Sector Wise Sales Report grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#GroupGrid").pqGrid("hideLoading");
            }
        });

    }
    loadGroupGrid(null);
    //-----------------------------------GroupGrid (Ends here)-----------------------------------//

    function GetUserByGroups(projectCode, message, fileSaveMsg) {
        const loadingDivId = "loadingDiv1";
        $('#ContentViewSection').append(`<div style="position:fixed;" id="${loadingDivId}"><div class="loader1">Loading...</div></div>`);

        const gridData = $("#GroupGrid").pqGrid("option", "dataModel.data");
        const selectedGroups = gridData.filter(user => user.State === true);
        const groupIDs = selectedGroups.map(group => group.GroupID).join(",");

        if (selectedGroups.length > 0) {
            const antiForgeryToken = $("input[name='__RequestVerificationToken']").val();

            $.ajax({
                headers: {
                    "__RequestVerificationToken": antiForgeryToken
                },
                type: 'GET',
                url: "/GroupMaster/GetUserByGroups",
                data: { GroupIDs: groupIDs },
                dataType: "json",
                success: function (response) {
                    if (response.records.length > 0) {
                        // Send email
                        sendEmail(projectCode, response.records, message, fileSaveMsg, loadingDivId);
                    } else {
                        showAlertAndCleanup("info", message, fileSaveMsg, loadingDivId);
                    }
                },
                error: function () {
                    ShowAlert("error", "An error occurred while fetching users.");
                    $(`#${loadingDivId}`).remove();
                }
            });
        } else {
            showAlertAndCleanup("info", message, fileSaveMsg, loadingDivId);
        }
    }

    // Function to send email
    function sendEmail(projectCode, selectedUsers, message, fileSaveMsg, loadingDivId) {
        const antiForgeryToken = $("input[name=__RequestVerificationToken]").val();

        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: "POST",
            traditional: true,
            contentType: 'application/json; charset=utf-8',
            url: "/OrderBook/SendMail",
            data: JSON.stringify({
                ProjectCode: projectCode,
                SelectedUser: selectedUsers
            }),
            success: function (response) {
                const mailSaveMsg = response.success
                    ? `${response.message}`
                    : `but ${response.message}`;
                const alertType = response.success ? "success" : "info";

                ShowAlert(alertType, `${message} <br> ${fileSaveMsg} ${mailSaveMsg}`);
                clearFormData();
                $(`#${loadingDivId}`).remove();
            },
            error: function () {
                ShowAlert("error", "An error occurred while sending the email.");
                $(`#${loadingDivId}`).remove();
            }
        });
    }

    // Function to show alert and cleanup
    function showAlertAndCleanup(alertType, message, fileSaveMsg, loadingDivId) {
        ShowAlert(alertType, `${message} <br> ${fileSaveMsg}`);
        clearFormData();
        $(`#${loadingDivId}`).remove();
    }

</script>