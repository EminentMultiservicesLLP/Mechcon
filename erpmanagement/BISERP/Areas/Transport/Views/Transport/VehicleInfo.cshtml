@model BISERP.Areas.Transport.Models.VehicleInfoModel

@using (Html.BeginForm())
{    
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-groupingBoder">
                <div class="panel-heading">
                    <div class="panel-title">
                        <a class="collapsediv" data-toggle="collapse" href="#SearchDetails" style="color:white">
                            Search Details
                        </a>
                    </div>
                </div>
                <div id="SearchDetails" class="panel-collapse collapse in" aria-expanded="true">
                    <div class="panel-body">
                        <div class="container fill">
                            <div id="searchgrid"></div>
                        </div>
                    </div>
                </div>
                <div class="panel-heading">
                    <div class="panel-title">
                        Entry Form
                    </div>
                </div>
                <div id="collapse3" class="panel-groupingBoder" style="">
                    <div id="collapse2" class="panel-collapse collapse in" aria-expanded="true">
                        <div class="panel-body">
                            
                                <div class="row">
                                    <div id="content">
                                        <div id="content-tab">
                                            <ul id="tabs" class="nav nav-tabs" data-tabs="tabs">
                                                <li class="active">
                                                    <a href="#tab1" data-toggle="tab">Vehicle Information</a>
                                                </li>
                                                <li><a href="#tab2" data-toggle="tab">Insurance</a></li>
                                                <li><a href="#tab3" data-toggle="tab">Road Tax</a></li>
                                                <li><a href="#tab4" data-toggle="tab">Green Tax</a></li>
                                                <li><a href="#tab5" data-toggle="tab">PUC Details</a></li>
                                                <li><a href="#tab6" data-toggle="tab">Permit Details</a></li>
                                            </ul>

                                            <div id="my-tab-content" class="tab-content">
                                                <div class="tab-pane active" id="tab1">
                                                    <br>
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <button type="button" class="btn btn-success" id="btnSave">Save</button>
                                                            <a data-toggle="collapse" class="btn btn-success" id="btnAdd">Reset</a>
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.BranchId, new { @class = "required" })
                                                                @Html.DropDownList("ddlBranch", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.DivisionId, new { @class = "required" })
                                                                @Html.DropDownList("ddlDivision", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.VehicleNo, new { @class = "required" })
                                                                @Html.TextBoxFor(model => model.VehicleNo, new { @class = "form-control" })
                                                                @Html.HiddenFor(model => model.VehicleId)
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.VehicleTypeId, new { @class = "required" })
                                                                @Html.DropDownList("ddlVehicleType", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.ModelId, new { @class = "required" })
                                                                @Html.DropDownList("ddlModel", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.ModelYear, new { @class = "required" })
                                                                @Html.TextBoxFor(model => model.ModelYear, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.ChasisNo, new { @class = "required" })
                                                                @Html.TextBoxFor(model => model.ChasisNo, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.EngineNo, new { @class = "required" })
                                                                @Html.TextBoxFor(model => model.EngineNo, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.DriverId)
                                                                @Html.TextBoxFor(m => m.DriverName, "", new Dictionary<string, object> { { "class", "form-control" } })
                                                                @Html.HiddenFor(m => m.DriverId)
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.UsedBy)
                                                                @Html.TextBoxFor(model => model.UsedBy, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.UsageId)
                                                                <select id="ddlUsage" class="wrapperdropdown-content form-control">
                                                                    <option class="wrapperdropdown-content" value="1">Office</option>
                                                                    <option class="wrapperdropdown-content" value="2">Personal</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.RCBookName)
                                                                @Html.TextBoxFor(model => model.RCBookName, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.PurchaseDate)
                                                                <div class='input-group date' id='PurchaseDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.PurchaseAmount)
                                                                @Html.TextBoxFor(model => model.PurchaseAmount, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.EMIMonths)
                                                                @Html.TextBoxFor(model => model.EMIMonths, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.EMIAmount)
                                                                @Html.TextBoxFor(model => model.EMIAmount, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.VehicleMakeId, new { @class = "required" })
                                                                @Html.DropDownList("ddlVehicleMake", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(model => model.Deactive)
                                                                @Html.CheckBoxFor(model => model.Deactive, new { @disabled = "disabled" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-6">
                                                            @Html.Label("Upload")
                                                            <div>
                                                                <input type='file' id="files" multiple="multiple" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <ul id="displayImages" class="attachment" style="max-height: 150px; overflow-y: scroll;" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="tab-pane" id="tab2">
                                                    <br>
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <button type="button" class="btn btn-success" id="btnSaveInsurance">Save Insurance</button>
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.insurancemodel.IssueDate ,new { @class = "required" })
                                                                <div class='input-group date' id='insurancemodel_IssueDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                                @Html.HiddenFor(m => m.insurancemodel.InsuranceId)
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.insurancemodel.ExpiryDate, new { @class = "required" })
                                                                <div class='input-group date' id='insurancemodel_ExpiryDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.insurancemodel.PolicyNo, new { @class = "required" })
                                                                @Html.TextBoxFor(m => m.insurancemodel.PolicyNo, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.insurancemodel.CompanyId, new { @class = "required" })
                                                                @Html.DropDownList("ddlCompany", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.insurancemodel.InsuranceType)
                                                                <select id="InsuranceType" class="wrapperdropdown-content form-control">
                                                                    <option class="wrapperdropdown-content" value="0">First Party</option>
                                                                    <option class="wrapperdropdown-content" value="1">Third Party</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.insurancemodel.Amount)
                                                                @Html.TextBoxFor(m => m.insurancemodel.Amount, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.insurancemodel.Agent)
                                                                @Html.TextBoxFor(m => m.insurancemodel.Agent, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.insurancemodel.CovertNote)
                                                                @Html.TextBoxFor(m => m.insurancemodel.CovertNote, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.insurancemodel.ReminderDays)
                                                                @Html.TextBoxFor(m => m.insurancemodel.ReminderDays, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            @Html.Label("Upload")
                                                            <div>
                                                                <input type='file' id="files2" multiple="multiple" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <ul id="InsuranceImages" class="attachment" style="max-height: 150px; overflow-y: scroll;" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="tab-pane" id="tab3">
                                                    <br>
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <button type="button" class="btn btn-success" id="btnSaveRoadTax">Save RoadTax</button>
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.rtmodel.IssueDate, new { @class = "required" })
                                                                <div class='input-group date' id='rtmodel_IssueDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                                @Html.HiddenFor(m => m.rtmodel.RoadTaxId)
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.rtmodel.ExpiryDate, new { @class = "required" })
                                                                <div class='input-group date' id='rtmodel_ExpiryDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.rtmodel.TaxNo, new { @class = "required" })
                                                                @Html.TextBoxFor(m => m.rtmodel.TaxNo, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.rtmodel.Amount, new { @class = "required" })
                                                                @Html.TextBoxFor(m => m.rtmodel.Amount, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.rtmodel.ReminderDays)
                                                                @Html.TextBoxFor(m => m.rtmodel.ReminderDays, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            @Html.Label("Upload")
                                                            <div>
                                                                <input type='file' id="files3" multiple="multiple" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <ul id="RoadTaxImages" class="attachment" style="max-height: 150px; overflow-y: scroll;" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="tab-pane" id="tab4">
                                                    <br>
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <button type="button" class="btn btn-success" id="btnSaveGreenTax">Save GreenTax</button>
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.gtmodel.IssueDate, new { @class = "required" })
                                                                <div class='input-group date' id='gtmodel_IssueDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                                @Html.HiddenFor(m => m.gtmodel.GreenTaxId)
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.gtmodel.ExpiryDate, new { @class = "required" })
                                                                <div class='input-group date' id='gtmodel_ExpiryDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.gtmodel.GreenTaxNo, new { @class = "required" })
                                                                @Html.TextBoxFor(m => m.gtmodel.GreenTaxNo, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.gtmodel.Amount, new { @class = "required" })
                                                                @Html.TextBoxFor(m => m.gtmodel.Amount, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.gtmodel.ReminderDays)
                                                                @Html.TextBoxFor(m => m.gtmodel.ReminderDays, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            @Html.Label("Upload")
                                                            <div>
                                                                <input type='file' id="files4" multiple="multiple" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <ul id="GreenTaxImages" class="attachment" style="max-height: 150px; overflow-y: scroll;" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="tab-pane" id="tab5">
                                                    <br>
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <button type="button" class="btn btn-success" id="btnSavePuc">Save PUC Details</button>
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.pucmodel.IssueDate, new { @class = "required" })
                                                                <div class='input-group date' id='pucmodel_IssueDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                                @Html.HiddenFor(m => m.pucmodel.PUCId)
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.pucmodel.ExpiryDate, new { @class = "required" })
                                                                <div class='input-group date' id='pucmodel_ExpiryDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.pucmodel.PUCNo, new { @class = "required" })
                                                                @Html.TextBoxFor(m => m.pucmodel.PUCNo, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.pucmodel.Amount, new { @class = "required" })
                                                                @Html.TextBoxFor(m => m.pucmodel.Amount, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.pucmodel.ReminderDays)
                                                                @Html.TextBoxFor(m => m.pucmodel.ReminderDays, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            @Html.Label("Upload")
                                                            <div>
                                                                <input type='file' id="files5" multiple="multiple" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <ul id="PUCImages" class="attachment" style="max-height: 150px; overflow-y: scroll;" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="tab-pane" id="tab6">
                                                    <br>
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <button type="button" class="btn btn-success" id="btnSavePermit">Save Permit Details</button>
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.prmtmodel.IssueDate, new { @class = "required" })
                                                                <div class='input-group date' id='prmtmodel_IssueDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                                @Html.HiddenFor(m => m.prmtmodel.PermitId)
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.prmtmodel.ExpiryDate, new { @class = "required" })
                                                                <div class='input-group date' id='prmtmodel_ExpiryDate'>
                                                                    <input type='text' class="form-control" />
                                                                    <span class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.prmtmodel.PermitNo, new { @class = "required" })
                                                                @Html.TextBoxFor(m => m.prmtmodel.PermitNo, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.prmtmodel.Amount, new { @class = "required" })
                                                                @Html.TextBoxFor(m => m.prmtmodel.Amount, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-horizontal">
                                                            <div class="col-sm-3">
                                                                @Html.LabelFor(m => m.prmtmodel.ReminderDays)
                                                                @Html.TextBoxFor(m => m.prmtmodel.ReminderDays, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            @Html.Label("Upload")
                                                            <div>
                                                                <input type='file' id="files6" multiple="multiple" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <ul id="PermitImages" class="attachment" style="max-height: 150px; overflow-y: scroll;" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        </div>
    </div>
    @*<div id="DriverModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Driver List</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <div id="Drivergrid" ></div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>*@
      <div id="DriverModal" title="Material Indent" style="display: none;">
        <div id="Drivergrid"></div>
    </div>
    <script type="text/javascript">
    var $SearchGrid;
    var setIID, colIID, dataIID;
    var colIL, dataIL, setIL;
    var $Drivergrid;
    var appSetting = '@BISERP.Common.Constants.ScandocUrl'
    function ClearForm() {
        $("#Deactive").prop('checked', false);
        $("#Deactive").prop('disabled', true);
        $("#VehicleId").val("");
        $("#ddlBranch").val("");
        $("#ddlDivision").val("");
        $("#ddlVehicleType").val("");
        $("#VehicleNo").val("");
        $("#ddlModel").val("");
        $("#ddlVehicleMake").val("");
        $("#ModelYear").val("");
        $("#ChasisNo").val("");
        $("#PurchaseAmount").val("");
        $("#EMIMonths").val("");
        $("#EMIAmount").val("");
        $("#EngineNo").val("");
        $("#RCBookName").val("");
        $("#DriverId").val("");
        $("#DriverName").val("");
        $("#UsedBy").val("");
        $("#insurancemodel_InsuranceId").val("");
        $("#VehicleId").val("");
        $("#insurancemodel_PolicyNo").val("");
        $("#ddlCompany").val("");
        $("#insurancemodel_Amount").val("");
        $("#insurancemodel_ReminderDays").val("");
        $("#insurancemodel_Agent").val("");
        $("#insurancemodel_CovertNote").val("");
        $("#InsuranceType").val("");
        $("#rtmodel_RoadTaxId").val("");
        $("#VehicleId").val("");
        $("#rtmodel_TaxNo").val("");
        $("#rtmodel_Amount").val("");
        $("#rtmodel_ReminderDays").val("");
        $("#gtmodel_GreenTaxId").val("");
        $("#VehicleId").val("");
        $("#gtmodel_GreenTaxNo").val("");
        $("#gtmodel_Amount").val("");
        $("#gtmodel_ReminderDays").val("");
        $("#pucmodel_PUCId").val("");
        $("#VehicleId").val("");
        $("#pucmodel_PUCNo").val("");
        $("#pucmodel_Amount").val("");
        $("#pucmodel_ReminderDays").val("");
        $("#prmtmodel_PermitId").val("");
        $("#VehicleId").val("");
        $("#prmtmodel_PermitNo").val("");
        $("#prmtmodel_Amount").val("");
        $("#prmtmodel_ReminderDays").val("");

        ResetDate("PurchaseDate");
        ResetDate("insurancemodel_IssueDate");
        ResetDate("insurancemodel_ExpiryDate");
        ResetDate("rtmodel_IssueDate");
        ResetDate("rtmodel_ExpiryDate");
        ResetDate("gtmodel_IssueDate");
        ResetDate("pucmodel_IssueDate");
        ResetDate("pucmodel_ExpiryDate");
        ResetDate("prmtmodel_IssueDate");
        ResetDate("gtmodel_ExpiryDate");

        $("#displayImages").html('');
        $("#InsuranceImages").html('');
        $("#RoadTaxImages").html('');
        $("#GreenTaxImages").html('');
        $("#PUCImages").html('');
        $("#PermitImages").html('');

        $("#btnSaveInsurance").hide();
        $("#btnSaveRoadTax").hide();
        $("#btnSaveGreenTax").hide();
        $("#btnSavePuc").hide();
        $("#btnSavePermit").hide();
    }

    function DisplayUploadedImages(objectName, FileDetail) {
        var newImageLI = '<li>';
        newImageLI = newImageLI + '<a class="title" id="'+ FileDetail.FileId + '" href= "' + appSetting + FileDetail.FilePath + '" target="_blank"> ' + FileDetail.FileNames + '</a>';
        newImageLI = newImageLI + '<a href="javascript:void(0);" data-id="' + FileDetail.FileId + '"  class="deleteItem" onclick="Deletefile('+FileDetail.FileId+');return false;">X</a>';
        newImageLI = newImageLI + "</li>";

        $("#"+objectName).append(newImageLI);
    }

    function Deletefile(fileId)
    {
        var $ctrl = $(this);
        if (confirm('Do you really want to delete this file?')) {
            var fileObject = $("#" + fileId);
            if (fileObject != undefined && fileObject != null)
                fileObject.parent().remove();
        }
    }

    function LoadSearchGrid() {
        $.ajax({
            url: "/VehicleInfo/AllVehicle",
            cache: false,
            async: true,
            method: "GET",
            dataType: "JSON",
            success: function (response) {

                $SearchGrid.pqGrid("option", "dataModel.data", response);

                var column = $SearchGrid.pqGrid("getColumn", { dataIndx: "BranchName" });
                var filter = column.filter;
                filter.cache = null;
                filter.options = $SearchGrid.pqGrid("getData", { dataIndx: ["BranchName"] });

                var column = $SearchGrid.pqGrid("getColumn", { dataIndx: "DivisionName" });
                var filter = column.filter;
                filter.cache = null;
                filter.options = $SearchGrid.pqGrid("getData", { dataIndx: ["DivisionName"] });

                var column = $SearchGrid.pqGrid("getColumn", { dataIndx: "TypeName" });
                var filter = column.filter;
                filter.cache = null;
                filter.options = $SearchGrid.pqGrid("getData", { dataIndx: ["TypeName"] });

                var column = $SearchGrid.pqGrid("getColumn", { dataIndx: "UsedFor" });
                var filter = column.filter;
                filter.cache = null;
                filter.options = $SearchGrid.pqGrid("getData", { dataIndx: ["UsedFor"] });

                $SearchGrid.pqGrid("refreshDataAndView");
            }
        });
    }
 

    function LoadDriverGrid() {
        var branchId = $("#ddlBranch").val();
        $("#DriverModal").dialog({
            height: 500,
            width: 700,
            modal: true,
            open: function (evt, ui) {
                $.ajax({
                    url: "/Transport/Transport/AllDrivers",
                    data: { branchId: branchId },
                    cache: false,
                    async: true,
                    method: "GET",
                    dataType: "JSON",
                    beforeSend: function () {
                        $Drivergrid.pqGrid("showLoading");
                    },
                    complete: function () {
                        $Drivergrid.pqGrid("hideLoading");
                    },
                    success: function (response) {
                        $Drivergrid.pqGrid("hideLoading");
                        $Drivergrid.pqGrid("option", "dataModel.data", response);
                        $Drivergrid.pqGrid("refreshDataAndView");
                    }
                });
            },
            close: function (event, ui) {
            },
            show: {
                effect: "blind",
                duration: 500
            }
        });
    }
    (function ($) {
        $("#btnSaveInsurance").hide();
        $("#btnSaveRoadTax").hide();
        $("#btnSaveGreenTax").hide();
        $("#btnSavePuc").hide();
        $("#btnSavePermit").hide();

        $("#DriverName").on("click", function () {
            LoadDriverGrid();
        });
        $.ajax({
            type: "GET",
            url: "/Master/AllBranches",
            datatype: "Json",
            async: true,
            success: function (data) {
                $.each(data, function (index, value) {
                    $('#ddlBranch').append('<option value="' + value.BranchID + '">' + value.BranchName + '</option>');
                });
            }
        });

        $.ajax({
            type: "GET",
            url: "/DivisionMaster/AllDivision",
            datatype: "Json",
            async: true,
            success: function (data) {
                $.each(data.records, function (index, value) {
                    $('#ddlDivision').append('<option value="' + value.DivisionId + '">' + value.DivisionName + '</option>');
                });
            }
        });

        $.ajax({
            type: "GET",
            url: "/Insurance/AllInsuranceCompany",
            datatype: "Json",
            async: true,
            success: function (data) {
                $.each(data, function (index, value) {
                    $('#ddlCompany').append('<option value="' + value.CompanyId + '">' + value.CompanyName + '</option>');
                });
            }
        });

        $.ajax({
            type: "GET",
            url: "/VehicleType/AllVehicleType",
            datatype: "Json",
            async: true,
            success: function (data) {
                $.each(data, function (index, value) {
                    $('#ddlVehicleType').append('<option value="' + value.TypeId + '">' + value.TypeName + '</option>');
                });
            }
        });

        $.ajax({
            type: "GET",
            url: "/VehicleModel/AllVehicleModel",
            datatype: "Json",
            async: true,
            success: function (data) {
                $.each(data, function (index, value) {
                    $('#ddlModel').append('<option value="' + value.ModelId + '">' + value.ModelName + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: "/VehicleMake/AllActiveVehicleMake",
            datatype: "Json",
            async: true,
            success: function (data) {
                $.each(data.records, function (index, value) {
                    $('#ddlVehicleMake').append('<option value="' + value.MakeId + '">' + value.MakeName + '</option>');
                });
            }
        });

        /********* Build Search Grid *********/
        var dataSearchGrid = { location: "local", sorting: 'local' };
        var colSearchGrid = [
                { title: "", dataIndx: "VehicleId", dataType: "integer", hidden: true },
                { title: "", dataIndx: "BranchId", dataType: "integer", hidden: true },
                { title: "", dataIndx: "DivisionId", dataType: "integer", hidden: true },
                { title: "", dataIndx: "VehicleTypeId", dataType: "integer", hidden: true },
                { title: "", dataIndx: "DriverId", dataType: "integer", hidden: true },
                { title: "", dataIndx: "DriverName", dataType: "integer", hidden: true },
                { title: "", dataIndx: "UsedBy", dataType: "integer", hidden: true },
                { title: "", dataIndx: "ModelId", dataType: "integer", hidden: true },
                {
                    title: "Vehicle No", dataIndx: "VehicleNo", width: 400,
                    filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }
                },
                {
                    title: "Branch", dataIndx: "BranchName", width: 200,
                    filter: {
                        type: "select",
                        condition: 'equal',
                        prepend: { '': '--Select--' },
                        valueIndx: "BranchName",
                        labelIndx: "BranchName",
                        listeners: ['change']
                    }
                },
                {
                    title: "Division", dataIndx: "DivisionName", width: 200, filter: {
                        type: "select",
                        condition: 'equal',
                        prepend: { '': '--Select--' },
                        valueIndx: "DivisionName",
                        labelIndx: "DivisionName",
                        listeners: ['change']
                    }
                },
                {
                    title: "Type", dataIndx: "TypeName", width: 200, filter: {
                        type: "select",
                        condition: 'equal',
                        prepend: { '': '--Select--' },
                        valueIndx: "TypeName",
                        labelIndx: "TypeName",
                        listeners: ['change']
                    }
                },
                {
                    title: "Used For", dataIndx: "UsedFor", width: 200, filter: {
                        type: "select",
                        condition: 'equal',
                        prepend: { '': '--Select--' },
                        valueIndx: "TypeName",
                        labelIndx: "TypeName",
                        listeners: ['change']
                    }
                },
        ];
        var setSearchGrid = {
            width: '100%',
            height: 250,
            sortable: false,
            numberCell: { show: false },
            showTop: false,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            editable: false,
            columnBorders: true,
            selectionModel: { type: 'row', subtype: 'incr', cbHeader: true, cbAll: true },
            filterModel: { on: true, mode: "AND", header: true },
            colModel: colSearchGrid,
            dataModel: dataSearchGrid,
            pageModel: { type: "local", rPP: 20 },
            rowClick: function (evt, ui) {
                ClearForm();
                ClearParamGrid("grid");
                if (ui.rowData) {
                    var rowIndx = parseInt(ui.rowIndx);
                    var record = ui.rowData;

                    $("#VehicleId").val(record.VehicleId);
                    $("#ddlBranch").val(record.BranchId);
                    $("#ddlDivision").val(record.DivisionId);
                    $("#ddlVehicleType").val(record.VehicleTypeId);
                    $("#VehicleNo").val(record.VehicleNo);
                    $("#ddlModel").val(record.ModelId);
                    $("#ddlVehicleMake").val(record.VehicleMakeId);
                    $("#ModelYear").val(record.ModelYear);
                    $("#ChasisNo").val(record.ChasisNo);
                    $("#EngineNo").val(record.EngineNo);

                    $('#PurchaseDate').data({ date: record.strPurchaseDate });
                    $('#PurchaseDate').datetimepicker('update');
                    $('#PurchaseDate').datetimepicker().children('input').val(record.strPurchaseDate);

                    $("#PurchaseAmount").val(record.PurchaseAmount);
                    $("#EMIMonths").val(record.EMIMonths);
                    $("#EMIAmount").val(record.EMIAmount);

                    $("#RCBookName").val(record.RCBookName);
                    $("#DriverId").val(record.DriverId);
                    $("#DriverName").val(record.DriverName);
                    $("#UsedBy").val(record.UsedBy);
                    $("#Deactive").prop('checked', record.Deactive);
                    $("#Deactive").prop('disabled', false);

                    $("#btnSaveInsurance").show();
                    $("#btnSaveRoadTax").show();
                    $("#btnSaveGreenTax").show();
                    $("#btnSavePuc").show();
                    $("#btnSavePermit").show();

                    $.ajax({
                        type: "GET",
                        url: "/Insurance/VehicleInsurance",
                        data: { VehicleId: record.VehicleId },
                        datatype: "Json",
                        success: function (data) {
                            $.each(data, function (key, value) {
                                $("#insurancemodel_InsuranceId").val(value.InsuranceId);
                                $("#VehicleId").val(value.VehicleId);
                                $("#insurancemodel_PolicyNo").val(value.PolicyNo);
                                $("#ddlCompany").val(value.CompanyId);
                                $("#insurancemodel_Amount").val(value.Amount);
                                $("#insurancemodel_ReminderDays").val(value.ReminderDays);
                                $("#insurancemodel_Agent").val(value.Agent);
                                $("#insurancemodel_CovertNote").val(value.CovertNote);
                                $("#InsuranceType").val(value.InsuranceType);

                                $('#insurancemodel_IssueDate').data({ date: value.strIssueDate });
                                $('#insurancemodel_IssueDate').datetimepicker('update');
                                $('#insurancemodel_IssueDate').datetimepicker().children('input').val(value.strIssueDate);

                                $('#insurancemodel_ExpiryDate').data({ date: value.strExpiryDate });
                                $('#insurancemodel_ExpiryDate').datetimepicker('update');
                                $('#insurancemodel_ExpiryDate').datetimepicker().children('input').val(value.strExpiryDate);
                            });
                            $("#InsuranceImages").html('');
                            $.ajax({
                                type: "GET",
                                url: "/ScanDoc/ScanDoc/GetScanDocUrl",
                                data: { FileId: $("#insurancemodel_InsuranceId").val(), ScanDocSubTypeId: 2 },
                                datatype: "Json",
                                success: function (data) {
                                    $.each(data, function (key, value) {
                                        DisplayUploadedImages("InsuranceImages", value);
                                    });
                                }
                            });
                        }
                    });

                    $.ajax({
                        type: "GET",
                        url: "/RoadTax/VehicleRoadTax",
                        data: { VehicleId: record.VehicleId },
                        datatype: "Json",
                        success: function (data) {
                            $.each(data, function (key, value) {
                                $("#rtmodel_RoadTaxId").val(value.RoadTaxId);
                                $("#VehicleId").val(value.VehicleId);
                                $("#rtmodel_TaxNo").val(value.TaxNo);
                                $("#rtmodel_Amount").val(value.Amount);
                                $("#rtmodel_ReminderDays").val(value.ReminderDays);

                                $('#rtmodel_IssueDate').data({ date: value.strIssueDate });
                                $('#rtmodel_IssueDate').datetimepicker('update');
                                $('#rtmodel_IssueDate').datetimepicker().children('input').val(value.strIssueDate);

                                $('#rtmodel_ExpiryDate').data({ date: value.strExpiryDate });
                                $('#rtmodel_ExpiryDate').datetimepicker('update');
                                $('#rtmodel_ExpiryDate').datetimepicker().children('input').val(value.strExpiryDate);
                            });
                            $("#RoadTaxImages").html('');
                            $.ajax({
                                type: "GET",
                                url: "/ScanDoc/ScanDoc/GetScanDocUrl",
                                data: { FileId: $("#rtmodel_RoadTaxId").val(), ScanDocSubTypeId: 5 },
                                datatype: "Json",
                                success: function (data) {
                                    $.each(data, function (key, value) {
                                        DisplayUploadedImages("RoadTaxImages", value);
                                    });
                                }
                            });
                        }
                    });

                    $.ajax({
                        type: "GET",
                        url: "/GreenTax/VehicleGreenTax",
                        data: { VehicleId: record.VehicleId },
                        datatype: "Json",
                        success: function (data) {
                            $.each(data, function (key, value) {
                                $("#gtmodel_GreenTaxId").val(value.GreenTaxId),
                                $("#VehicleId").val(value.VehicleId),
                                $("#gtmodel_GreenTaxNo").val(value.GreenTaxNo),
                                $("#gtmodel_Amount").val(value.Amount),
                                $("#gtmodel_ReminderDays").val(value.ReminderDays)

                                $('#gtmodel_IssueDate').data({ date: value.strIssueDate });
                                $('#gtmodel_IssueDate').datetimepicker('update');
                                $('#gtmodel_IssueDate').datetimepicker().children('input').val(value.strIssueDate);

                                $('#gtmodel_ExpiryDate').data({ date: value.strExpiryDate });
                                $('#gtmodel_ExpiryDate').datetimepicker('update');
                                $('#gtmodel_ExpiryDate').datetimepicker().children('input').val(value.strExpiryDate);
                            });
                            $("#GreenTaxImages").html('');
                            $.ajax({
                                type: "GET",
                                url: "/ScanDoc/ScanDoc/GetScanDocUrl",
                                data: { FileId: $("#gtmodel_GreenTaxId").val(), ScanDocSubTypeId: 6 },
                                datatype: "Json",
                                success: function (data) {
                                    $.each(data, function (key, value) {
                                        DisplayUploadedImages("GreenTaxImages", value);
                                    });
                                }
                            });
                        }
                    });

                    $.ajax({
                        type: "GET",
                        url: "/PUCDetails/VehiclePUCDetails",
                        data: { VehicleId: record.VehicleId },
                        datatype: "Json",
                        success: function (data) {
                            $.each(data, function (key, value) {
                                $("#pucmodel_PUCId").val(value.PUCId);
                                $("#VehicleId").val(value.VehicleId);
                                $("#pucmodel_PUCNo").val(value.PUCNo);
                                $("#pucmodel_Amount").val(value.Amount);
                                $("#pucmodel_ReminderDays").val(value.ReminderDays);

                                $('#pucmodel_IssueDate').data({ date: value.strIssueDate });
                                $('#pucmodel_IssueDate').datetimepicker('update');
                                $('#pucmodel_IssueDate').datetimepicker().children('input').val(value.strIssueDate);

                                $('#pucmodel_ExpiryDate').data({ date: value.strExpiryDate });
                                $('#pucmodel_ExpiryDate').datetimepicker('update');
                                $('#pucmodel_ExpiryDate').datetimepicker().children('input').val(value.strExpiryDate);
                            });
                            $("#PUCImages").html('');
                            $.ajax({
                                type: "GET",
                                url: "/ScanDoc/ScanDoc/GetScanDocUrl",
                                data: { FileId: $("#pucmodel_PUCId").val(), ScanDocSubTypeId: 3 },
                                datatype: "Json",
                                success: function (data) {
                                    $.each(data, function (key, value) {
                                        DisplayUploadedImages("PUCImages", value);
                                    });
                                }
                            });
                        }
                    });

                    $.ajax({
                        type: "GET",
                        url: "/PermitDetails/VehiclePermitDetails",
                        data: { VehicleId: record.VehicleId },
                        datatype: "Json",
                        success: function (data) {
                            $.each(data, function (key, value) {
                                $("#prmtmodel_PermitId").val(value.PermitId);
                                $("#VehicleId").val(value.VehicleId);
                                $("#prmtmodel_PermitNo").val(value.PermitNo);
                                $("#prmtmodel_Amount").val(value.Amount);
                                $("#prmtmodel_ReminderDays").val(value.ReminderDays);

                                $('#prmtmodel_IssueDate').data({ date: value.strIssueDate });
                                $('#prmtmodel_IssueDate').datetimepicker('update');
                                $('#prmtmodel_IssueDate').datetimepicker().children('input').val(value.strIssueDate);

                                $('#prmtmodel_ExpiryDate').data({ date: value.strExpiryDate });
                                $('#prmtmodel_ExpiryDate').datetimepicker('update');
                                $('#prmtmodel_ExpiryDate').datetimepicker().children('input').val(value.strExpiryDate);
                            });
                            $("#PermitImages").html('');
                            $.ajax({
                                type: "GET",
                                url: "/ScanDoc/ScanDoc/GetScanDocUrl",
                                data: { FileId: $("#prmtmodel_PermitId").val(), ScanDocSubTypeId: 4 },
                                datatype: "Json",
                                success: function (data) {
                                    $.each(data, function (key, value) {
                                        DisplayUploadedImages("PermitImages", value);
                                    });
                                }
                            });
                        }
                    });
                    $("#displayImages").html('');
                    $.ajax({
                        type: "GET",
                        url: "/ScanDoc/ScanDoc/GetScanDocUrl",
                        data: { FileId: record.VehicleId, ScanDocSubTypeId: 1 },
                        datatype: "Json",
                        success: function (data) {
                            $.each(data, function (key, value) {
                                DisplayUploadedImages("displayImages", value);
                            });
                        }
                    });
                }
            }
        }
        $SearchGrid = $("#searchgrid").pqGrid(setSearchGrid);
        LoadSearchGrid();

        $("#btnAdd").on("click", ClearForm);

        $("#btnSave").click(function () {

            if ($("#ddlBranch").val() == "") {
                ShowAlert("error", "Please Select Branch");
                return;
            }
            if ($("#ddlDivision").val() == "") {
                ShowAlert("error", "Please Select Division");
                return;
            }
            if ($("#ddlVehicleType").val() == "") {
                ShowAlert("error", "Please Select Vehicle Type");
                return;
            }
            if ($("#VehicleNo").val() == "") {
                ShowAlert("error", "Please Enter Vehicle No");
                return;
            }
            if ($("#ddlModel").val() == "") {
                ShowAlert("error", "Please Vehicle Model");
                return;
            }
            if ($("#ModelYear").val() == "") {
                ShowAlert("error", "Please Enter Model Year");
                return;
            }
            if ($("#ChasisNo").val() == "") {
                ShowAlert("error", "Please Enter Chasis No");
                return;
            }
            if ($("#EngineNo").val() == "") {
                ShowAlert("error", "Please Enter Engine No");
                return;
            }
            var data = new FormData();
            //var files = $("#fileInput").get(0).files;
            data.append('VehicleId', $("#VehicleId").val());
            data.append('VehicleNo', $("#VehicleNo").val());
            data.append('BranchId', $("#ddlBranch").val());
            data.append('DivisionId', $("#ddlDivision").val());
            data.append('VehicleTypeId', $("#ddlVehicleType").val());
            data.append('UsageId', $("#ddlUsage").val());
            data.append('ModelId', $("#ddlModel").val());
            data.append('VehicleMakeId', $("#ddlVehicleMake").val());
            data.append('ModelYear', $("#ModelYear").val());
            data.append('ChasisNo', $("#ChasisNo").val());
            data.append('EngineNo', $("#EngineNo").val());
            data.append('PurchaseDate', $("#PurchaseDate").data('date'));
            data.append('PurchaseAmount', $("#PurchaseAmount").val());
            data.append('EMIMonths', $("#EMIMonths").val());
            data.append('EMIAmount', $("#EMIAmount").val());
            data.append('DriverId', $("#DriverId").val());
            data.append('UsedBy', $("#UsedBy").val());
            data.append('RCBookName', $("#RCBookName").val());
            data.append('Deactive', $("#Deactive").prop('checked'));
            //data.append('file', files);
            $.ajax(
            {
                type: "POST", //HTTP POST Method
                traditional: true,
                processData: false,
                contentType: false,
                dataType: "json",
                url: '/VehicleInfo/SaveVehicleInfo', // Controller/View
                data: data,
                success: function (msg) {
                    if (msg.success) {
                        SaveScandoc("files", msg.VehicleId, "Transport", "Vehicle");
                        $("#files").val('');
                        if ($("#VehicleId").val() == "") {
                            ShowAlert("success", "Vehicle info saved successfully.");
                        }
                        else {
                            ShowAlert("success", "Vehicle info updated successfully");
                        }
                        ClearForm();
                        LoadSearchGrid();
                    }
                    else {
                        ShowAlert("error", msg.Message);
                    }
                },
                error: function (jqXHR, exception) {
                }
            });
        });

        $("#btnSaveRoadTax").click(function () {
            if ($("#VehicleId").val() == "" || $("#VehicleId").val() == "0") {
                ShowAlert("error", "Please Select Vehicle");
                return;
            }
            if ($("#rtmodel_IssueDate").data('date') == "") {
                ShowAlert("error", "Please Select Issue Date");
                return;
            }
            if ($("#rtmodel_ExpiryDate").data('date') == "") {
                ShowAlert("error", "Please Select Expiry Date");
                return;
            }
            if ($("#rtmodel_TaxNo").val() == "") {
                ShowAlert("error", "Please Enter Tax No");
                return;
            }
            if ($("#rtmodel_Amount").val() == "") {
                ShowAlert("error", "Please Enter Amount");
                return;
            }

            var items = JSON.stringify({
                RoadTaxId: $("#rtmodel_RoadTaxId").val(),
                VehicleId: $("#VehicleId").val(), //Reading text box values using Jquery
                TaxNo: $("#rtmodel_TaxNo").val(),
                Amount: $("#rtmodel_Amount").val(),
                IssueDate: $("#rtmodel_IssueDate").data('date'),
                ExpiryDate: $("#rtmodel_ExpiryDate").data('date'),
                ReminderDays: $("#rtmodel_ReminderDays").val(),
                Deactive: $("#Deactive").prop('checked')
            });

            $.ajax(
            {
                type: "POST",
                traditional: true,
                contentType: 'application/json; charset=utf-8',
                url: '/RoadTax/SaveRoadTax',
                data: items,
                success: function (msg) {
                    if (msg.success) {
                        SaveScandoc("files3", msg.RoadTaxId, "Transport", "RoadTax");
                        $("#files3").val('');
                        if ($("#RoadTaxId").val() == "") {
                            ShowAlert("success", "Road Tax saved successfully.");
                        }
                        else {
                            ShowAlert("success", "Road Tax updated successfully");
                        }
                    }
                    else {
                        ShowAlert("error", msg.Message);
                    }
                },
                error: function (jqXHR, exception) {
                }
            });
        });
        $("#btnSaveGreenTax").click(function () {
            if ($("#VehicleId").val() == "" || $("#VehicleId").val() == "0") {
                ShowAlert("error", "Please Select Vehicle");
                return;
            }
            if ($("#gtmodel_IssueDate").data('date') == "") {
                ShowAlert("error", "Please Select Issue Date");
                return;
            }
            if ($("#gtmodel_ExpiryDate").data('date') == "") {
                ShowAlert("error", "Please Select Expiry Date");
                return;
            }
            if ($("#gtmodel_TaxNo").val() == "") {
                ShowAlert("error", "Please Enter Tax No");
                return;
            }
            if ($("#gtmodel_Amount").val() == "") {
                ShowAlert("error", "Please Enter Amount");
                return;
            }

            var items = JSON.stringify({
                GreenTaxId: $("#gtmodel_GreenTaxId").val(),
                VehicleId: $("#VehicleId").val(), //Reading text box values using Jquery
                GreenTaxNo: $("#gtmodel_GreenTaxNo").val(),
                Amount: $("#gtmodel_Amount").val(),
                IssueDate: $("#gtmodel_IssueDate").data('date'),
                ExpiryDate: $("#gtmodel_ExpiryDate").data('date'),
                ReminderDays: $("#gtmodel_ReminderDays").val(),
                Deactive: $("#Deactive").prop('checked')
            });

            $.ajax(
            {
                type: "POST",
                traditional: true,
                contentType: 'application/json; charset=utf-8',
                url: '/GreenTax/SaveGreenTax',
                data: items,
                success: function (msg) {
                    if (msg.success) {
                        SaveScandoc("files4", msg.GreenTaxId, "Transport", "GreenTax");
                        $("#files4").val('');
                        if ($("#GreenTaxId").val() == "") {
                            ShowAlert("success", "Green Tax saved successfully.");
                        }
                        else {
                            ShowAlert("success", "Green Tax updated successfully");
                        }
                    }
                    else {
                        ShowAlert("error", msg.Message);
                    }
                },
                error: function (jqXHR, exception) {
                }
            });
        });
        $("#btnSaveInsurance").click(function () {
            if ($("#VehicleId").val() == "" || $("#VehicleId").val() == "0") {
                ShowAlert("error", "Please Select Vehicle");
                return;
            }
            if ($("#insurancemodel_IssueDate").data('date') == "") {
                ShowAlert("error", "Please Select Issue Date");
                return;
            }
            if ($("#insurancemodel_ExpiryDate").data('date') == "") {
                ShowAlert("error", "Please Select Expiry Date");
                return;
            }
            if ($("#insurancemodel_PolicyNo").val() == "") {
                ShowAlert("error", "Please Enter Tax No");
                return;
            }
            if ($("#insurancemodel_Amount").val() == "") {
                ShowAlert("error", "Please Enter Amount");
                return;
            }

            var items = JSON.stringify({
                InsuranceId: $("#insurancemodel_InsuranceId").val(),
                VehicleId: $("#VehicleId").val(),
                PolicyNo: $("#insurancemodel_PolicyNo").val(),
                CompanyId: $("#ddlCompany").val(),
                IssueDate: $("#insurancemodel_IssueDate").data('date'),
                ExpiryDate: $("#insurancemodel_ExpiryDate").data('date'),
                Amount: $("#insurancemodel_Amount").val(),
                ReminderDays: $("#insurancemodel_ReminderDays").val(),
                Agent: $("#insurancemodel_Agent").val(),
                CovertNote: $("#insurancemodel_CovertNote").val(),
                InsuranceType: $("#InsuranceType").val(),
                Deactive: $("#Deactive").prop('checked')
            });

            $.ajax(
            {
                type: "POST",
                traditional: true,
                contentType: 'application/json; charset=utf-8',
                url: '/Insurance/SaveInsurance',
                data: items,
                success: function (msg) {
                    if (msg.success) {
                        SaveScandoc("files2", msg.InsuranceId, "Transport", "Insurance");
                        $("#files2").val('');
                        if ($("#InsuranceId").val() == "") {
                            ShowAlert("success", "Insurance saved successfully.");
                        }
                        else {
                            ShowAlert("success", "Insurance updated successfully");
                        }
                    }
                    else {
                        ShowAlert("error", msg.Message);
                    }
                },
                error: function (jqXHR, exception) {
                }
            });
        });
        $("#btnSavePuc").click(function () {
            if ($("#VehicleId").val() == "" || $("#VehicleId").val() == "0") {
                ShowAlert("error", "Please Select Vehicle");
                return;
            }
            if ($("#pucmodel_IssueDate").data('date') == "") {
                ShowAlert("error", "Please Select Issue Date");
                return;
            }
            if ($("#pucmodel_ExpiryDate").data('date') == "") {
                ShowAlert("error", "Please Select Expiry Date");
                return;
            }
            if ($("#pucmodel_PUCNo").val() == "") {
                ShowAlert("error", "Please Enter Tax No");
                return;
            }
            if ($("#pucmodel_Amount").val() == "") {
                ShowAlert("error", "Please Enter Amount");
                return;
            }

            var items = JSON.stringify({
                PUCId: $("#pucmodel_PUCId").val(),
                VehicleId: $("#VehicleId").val(), //Reading text box values using Jquery
                PUCNo: $("#pucmodel_PUCNo").val(),
                Amount: $("#pucmodel_Amount").val(),
                IssueDate: $("#pucmodel_IssueDate").data('date'),
                ExpiryDate: $("#pucmodel_ExpiryDate").data('date'),
                ReminderDays: $("#pucmodel_ReminderDays").val(),
                Deactive: $("#Deactive").prop('checked')
            });

            $.ajax(
            {
                type: "POST",
                traditional: true,
                contentType: 'application/json; charset=utf-8',
                url: '/PUCDetails/SavePUCDetails',
                data: items,
                success: function (msg) {
                    if (msg.success) {
                        SaveScandoc("files5", msg.PUCId, "Transport", "PUC");
                        $("#files5").val('');
                        if ($("#PUCId").val() == "") {
                            ShowAlert("success", "PUC Details saved successfully.");
                        }
                        else {
                            ShowAlert("success", "PUC Details updated successfully");
                        }
                    }
                    else {
                        ShowAlert("error", msg.Message);
                    }
                },
                error: function (jqXHR, exception) {
                }
            });
        });
        $("#btnSavePermit").click(function () {
            if ($("#VehicleId").val() == "" || $("#VehicleId").val() == "0") {
                ShowAlert("error", "Please Select Vehicle");
                return;
            }
            if ($("#prmtmodel_IssueDate").data('date') == "") {
                ShowAlert("error", "Please Select Issue Date");
                return;
            }
            if ($("#prmtmodel_ExpiryDate").data('date') == "") {
                ShowAlert("error", "Please Select Expiry Date");
                return;
            }
            if ($("#prmtmodel_PermitNo").val() == "") {
                ShowAlert("error", "Please Enter Tax No");
                return;
            }
            if ($("#prmtmodel_Amount").val() == "") {
                ShowAlert("error", "Please Enter Amount");
                return;
            }

            var items = JSON.stringify({
                PermitId: $("#prmtmodel_PermitId").val(),
                VehicleId: $("#VehicleId").val(), //Reading text box values using Jquery
                PermitNo: $("#prmtmodel_PermitNo").val(),
                Amount: $("#prmtmodel_Amount").val(),
                IssueDate: $("#prmtmodel_IssueDate").data('date'),
                ExpiryDate: $("#prmtmodel_ExpiryDate").data('date'),
                ReminderDays: $("#prmtmodel_ReminderDays").val(),
                Deactive: $("#Deactive").prop('checked')
            });

            $.ajax(
            {
                type: "POST",
                traditional: true,
                contentType: 'application/json; charset=utf-8',
                url: '/PermitDetails/SavePermitDetails',
                data: items,
                success: function (msg) {
                    if (msg.success) {
                        SaveScandoc("files6", msg.PermitId, "Transport", "Permit");
                        $("#files6").val('');
                        if ($("#PermitId").val() == "") {
                            ShowAlert("success", "Permit Details saved successfully.");
                        }
                        else {
                            ShowAlert("success", "Permit Details updated successfully");
                        }
                    }
                    else {
                        ShowAlert("error", msg.Message);
                    }
                },
                error: function (jqXHR, exception) {
                }
            });
        });
    })(jQuery);

    $(document).ready(function () {
        var dataM = { location: "local", sorting: 'local' };
        var colM = [
                { title: "", dataIndx: "EmpId", dataType: "integer", hidden: true },
                { title: "", dataIndx: "BranchId", dataType: "integer", hidden: true },
                {
                    title: "Ticket Code", dataIndx: "TicketCode", width: 400,
                    filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }, width: 200
                },
                {
                    title: "Driver Name", dataIndx: "EmpName", width: 150, dataType: "string",
                    filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
                },
        ];

        var setM = {
            height: 400,
            sortable: false,
            numberCell: { show: false },
            hoverMode: 'cell',
            showTop: false,
            resizable: false,
            draggable: false,
            wrap: false,
            editable: false,
            columnBorders: true,
            filterModel: { on: true, mode: "AND", header: true },
            colModel: colM,
            dataModel: dataM,
            virtualX: true,
            virtualY: true,
            pageModel: { type: "local", rPP: 20 },
            rowClick: function (evt, ui) {
                ClosePopupWindow("DriverModal");
                if (ui.rowData) {
                    var rowIndx = parseInt(ui.rowIndx);
                    var record = ui.rowData;
                    $("#DriverId").val(record.EmpId);
                    $("#DriverName").val(record.EmpName);
                }
            }
        };
        $Drivergrid = $("#Drivergrid").pqGrid(setM);
    });

    $(function () {
        $('#PurchaseDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });

        $('#insurancemodel_IssueDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });
        $('#insurancemodel_ExpiryDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });

        $('#rtmodel_IssueDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });
        $('#rtmodel_ExpiryDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });

        $('#gtmodel_IssueDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });
        $('#gtmodel_ExpiryDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });

        $('#pucmodel_IssueDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });
        $('#pucmodel_ExpiryDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });

        $('#prmtmodel_IssueDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });
        $('#prmtmodel_ExpiryDate').datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['DD-MM-YYYY', 'DD-MM-YY'],
            defaultDate: new Date()
        });
    });
</script>
}