@model BISERP.Areas.Store.Models.Store.GRNModel
<script>
    $(function () {
        $(".datepicker").datepicker({
            showOn: "button",
            buttonImage: "",
            buttonImageOnly: true,
            buttonText: "",
            dateFormat: "dd-MM-yy"
        }).datepicker("setDate", new Date());
        $("#anim").change(function () {
            $(".datepicker").datepicker("option", "showAnim", "fadeIn");
        });
    });
</script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <h5 class="page-header orangeDottedBottomBorder">GRN Authorization</h5>
    @* new addition 2024 *@
    <div id="SearchGridModal" class="modal fade" role="dialog" data-backdrop="false">
        <div class="modal-dialog find-search-grid-modal">
            <div class="modal-content gridmodal-content">
                <div class="modal-header gridmodal-header">
                    <button type="button" class="close" onclick="closeModal()">&times;</button>
                    <h4 class="modal-title">Details</h4>
                </div>
                <div class="modal-body">
                    <div class="fill">
                        <div id="searchgrid"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="ReportModal" class="modal fade" role="dialog" data-backdrop="false">
        <div class="modal-dialog find-search-grid-modal">
            <div class="modal-content gridmodal-content">
                <div class="modal-header gridmodal-header">
                    <button type="button" class="close" onclick="closeModal()">&times;</button>
                    <h4 class="modal-title">Report</h4>
                </div>
                <div class="modal-body">
                    <div class="fill">
                        <iframe id="iframeReportViewer" style="width:100%;height:400px"></iframe>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-groupingBoder">
                <div class="panel-heading">
                    <div class="panel-title">
                        Entry Form
                    </div>
                </div>
                <div id="collapse2" class="panel-collapse collapse in" aria-expanded="true">
                    <div class="panel-body">
                        <div class="submit-row">
                            <div class="col-sm-6" style="text-align:start">
                                <button type="button" class="btn btn-success" id="btnAuthorize">Save</button>
                                <button type="button" class="btn btn-primary" id="btnReset">Reset</button>
                                <button type="button" class="btn btn-danger" id="btnSearch">Un-Authorised</button>
                            </div>
                            <div class="col-sm-6" style="text-align:end">
                                <button type="button" class="btn btn-info" id="btnSearchAuth">Authorized</button>
                                <a data-toggle="collapse" id="btnPrint" class="btn btn-warning " href="#ReportPreview">Report</a>
                            </div>
                        </div>
                        <fieldset class="fieldsetCustom" style="padding-right:25px;">
                            <div class="row">
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.StoreId, "Project")
                                    @Html.TextBoxFor(m => m.StoreName, new { @readonly = "true", @class = "form-control" })
                                    @Html.HiddenFor(m => m.StoreId)
                                </div>
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.SupplierID)
                                    @Html.TextBoxFor(m => m.SupplierName, new { @readonly = "true", @class = "form-control" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.GRNNo)
                                    @Html.TextBoxFor(m => m.GRNNo, new { @readonly = "true", @class = "form-control" })
                                    @Html.HiddenFor(m => m.ID)
                                    @Html.HiddenFor(m => m.GrnTypeID)
                                </div>
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.GRNDate)
                                    @Html.TextBoxFor(m => m.GRNDate, new Dictionary<string, object> { { "class", "form-control" }, { "readonly", "true" } })
                                </div>
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.DCNo)
                                    @Html.TextBoxFor(m => m.DCNo, new { @readonly = "true", @class = "form-control" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.DCDate)
                                    @Html.TextBoxFor(m => m.DCDate, new Dictionary<string, object> { { "class", "form-control" }, { "readonly", "true" } })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.InwardNo)
                                    @Html.TextBoxFor(m => m.InwardNo, new { @readonly = "true", @class = "form-control" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.InwardDate)
                                    @Html.TextBoxFor(m => m.InwardDate, new Dictionary<string, object> { { "class", "form-control" }, { "readonly", "true" } })
                                </div>
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.InvoiceNo)
                                    @Html.TextBoxFor(m => m.InvoiceNo, new { @readonly = "true", @class = "form-control" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.InvoiceDate)
                                    @Html.TextBoxFor(m => m.InvoiceDate, new Dictionary<string, object> { { "class", "form-control" }, { "readonly", "true" } })
                                </div>
                                <div class="col-sm-2">
                                    @Html.LabelFor(m => m.AuthorizedDate)
                                    @Html.TextBoxFor(m => m.AuthorizedDate, new { @class = "AuthorizedDate form-control datepicker", @disabled = "true" })
                                </div>
                                <div class="col-sm-2">
                                    <br />
                                    @*@Html.Label("Status :", new { @class = "required" })&nbsp;*@
                                    @Html.RadioButton("AuthCancel", "Authorized", true) Authorized &nbsp;&nbsp;&nbsp;
                                    @Html.RadioButton("AuthCancel", "Cancel")Cancel
                                </div>
                            </div>
                            <div class="row">
                            </div>
                            <div class="row">
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="panel-groupingBoder">
        <div id="grid"></div>
    </div>
    <fieldset class="fieldsetCustom" hidden>
        <div class="row">
            <div class="col-sm-8">
                <div class="row">
                    <div class="col-sm-1">
                        @Html.LabelFor(m => m.Preparedby)
                    </div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(m => m.Preparedby, new { @readonly = "true", @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-1">
                        @Html.LabelFor(m => m.Notes)
                    </div>
                    <div class="col-sm-2">
                        @Html.TextAreaFor(m => m.Notes, new { @readonly = "true", @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-1">
                        @Html.LabelFor(m => m.GrnPaymentType)
                    </div>
                    <div class="col-sm-2 ">
                        @Html.RadioButton("PaymentMode", "Cash")  Cash
                        @Html.RadioButton("PaymentMode", "Credit") Credit
                    </div>
                </div>
            </div>
            <div class="col-sm-4" style="display: none">
                <table align="right">
                    <tr>
                        <td>Gross Amount</td>
                        <td>
                            @Html.TextBoxFor(m => m.Amount, new Dictionary<string, object> { { "Id", "GrossAmount" }, { "readonly", "true" }, { "class", "form-control" } })
                        </td>
                    </tr>
                    <tr>
                        <td>Tax</td>
                        <td>
                            @Html.TextBoxFor(m => m.TotalTaxamt, new Dictionary<string, object> { { "Id", "TaxAmount" }, { "readonly", "true" }, { "class", "form-control" } })
                        </td>
                    </tr>
                    <tr>
                        <td>Other Charges</td>
                        <td>
                            @Html.TextBoxFor(m => m.TotalOtherAmt, new Dictionary<string, object> { { "Id", "OtherCharges" }, { "readonly", "true" }, { "class", "form-control" } })
                        </td>
                    </tr>
                    <tr>
                        <td>Discount</td>
                        <td>
                            @Html.TextBoxFor(m => m.TotalDisc, new Dictionary<string, object> { { "Id", "Discount" }, { "readonly", "true" }, { "class", "form-control" } })
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.Label("BED% & Amt")</td>
                        <td>@Html.TextBoxFor(model => model.BED, new { @class = "form-control", style = "width: 75px" })</td>
                        <td><input readonly="readonly" class="form-control readonly" id="BedAmt" name="BedAmt" style="margin-left:-75px " /></td>
                    </tr>
                    <tr>
                        <td>@Html.Label("Edu Cess % & Amt")</td>
                        <td>
                            @Html.TextBoxFor(model => model.Edu, new { @class = "form-control", style = "width: 75px;" })

                        </td>
                        <td><input readonly="readonly" class="form-control readonly" id="educessamt" name="educessamt" style="margin-left:-75px " /></td>
                    </tr>
                    <tr>
                        <td>@Html.Label("SHE Cess % & Amt")</td>
                        <td> @Html.TextBoxFor(model => model.SHECess, new { @class = "form-control", style = "width: 75px" }) </td>
                        <td><input readonly="readonly" class="form-control readonly" id="Shecessamt" name="Shecessamt" style="margin-left:-75px " /></td>
                    </tr>
                    @*<tr>
                            <td>CR Note Amount</td>
                            <td>
                                @Html.TextBoxFor(m => m.CrNoteAmt, new Dictionary<string, object> { { "Id", "CR_Note_Amount" }, { "readonly", "true" }, { "class", "form-control" } })
                            </td>
                        </tr>*@
                    <tr>
                        <td>Grand Total</td>
                        <td>
                            @Html.TextBoxFor(m => m.TotalAmount, new Dictionary<string, object> { { "Id", "GrandTotal" }, { "readonly", "true" }, { "class", "form-control" } })
                        </td>
                    </tr>
                    <tr>
                        <td>Rounding Off</td>
                        <td>
                            @Html.TextBoxFor(m => m.TotalAmount, new Dictionary<string, object> { { "Id", "Rounding_Off" }, { "readonly", "true" }, { "class", "form-control" } })
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </fieldset>
}
<script type="text/javascript">
    var $DetailsGrid;
    //var grid;
    var grndate, storeName;
    var $SearchGrid;

    $("#BED").prop('disabled', true);
    $("#SHECess").prop('disabled', true);
    $("#Edu").prop('disabled', true);
    function LoadSearchGrid(status) {
        $.ajax({
            url: "/GRN/GRNForAuthorization",
            cache: false,
            async: true,
            method: "GET",
            dataType: "JSON",
            beforeSend: function () {
                $SearchGrid.pqGrid("showLoading");
            },
            complete: function () {
                $SearchGrid.pqGrid("hideLoading");
            },
            success: function (response) {
                var filterData = [];
                status == 'authorized' ? filterData = response.records.filter(obj => obj.Authorized == true) : filterData = response.records.filter(obj => obj.Authorized == false)
                $SearchGrid.pqGrid("hideLoading");
                $SearchGrid.pqGrid("option", "dataModel.data", filterData);
                $SearchGrid.pqGrid("refreshDataAndView");
            }
        });
    }
    function ClearForm() {
        $('#StoreName').val("");
        $("#StoreId").val();
        $('#GRNNo').val("");
        $('#GrnTypeID').val("");
        $('#GRNDate').val("");
        $('#SupplierName').val("");
        $('#DCNo').val("");
        $('#DCDate').val("");
        $('#InwardNo').val("");
        $('#InwardDate').val("");
        $('#InvoiceNo').val("");
        $('#InvoiceDate').val("");
        $('#Preparedby').val("");
        $('#Notes').val("");
        $('#GrossAmount').val("");
        $('#TaxAmount').val("");
        $('#OtherCharges').val("");
        $('#Discount').val("");
        //$('#CR_Note_Amount').val("");
        $('#GrandTotal').val("");
        $('#Rounding_Off').val("");
        ClearParamGrid("grid");
    }
    $(document).ready(function () {
        $.ajax({
            type: "GET",
            url: "/Master/MainStores",
            datatype: "Json",
            success: function (data) {
                $.each(data, function (index, value) {
                    $('#ddlSearchStores').append('<option value="' + value.ID + '">' + value.Name + '</option>');
                });
            }
        });

        $('#btnReset').on('click', function () {
            ClearForm();
        });

        $('#btnAuthorize').on('click', function () {
            var authorize = false;
            var cancel = false;
            if ($("[name='AuthCancel']:checked").val() == "Authorized")
                authorize = true;
            else
                cancel = true;

            var getData = $("#grid").pqGrid("getData", { dataIndx: ['state', 'ID', 'ItemID', 'GrnID', 'PackSizeId','UnitId', 'Amount', 'Qty', 'ItemName', 'Rate'] });

            if (getData != undefined) {
                var selectedItemsMainGrid = jLinq.from(getData).equals("state", true).select();

                if (selectedItemsMainGrid.length > 0) {
                }
                else {
                    ShowAlert("error", "Please Select at least one Item before saving.");
                    return;
                }
            }

            var grn = JSON.stringify({ //Passing data
                ID: $("#ID").val(), //Reading text box values using Jquery
                Authorized: authorize,
                StoreId: $("#StoreId").val(),
                StoreName: $("#StoreName").val(),
                SupplierName: $("#SupplierName").val(),
                DCNo: $("#DCNo").val(),
                GRNNo: $("#GRNNo").val(),
                strGRNDate: $("#GRNDate").val(),
                Cancelled: cancel,
                AuthorizedDate: $("#AuthorizedDate").val(),
                GrnTypeID: $("#GrnTypeID").val(),
                GRNDetails: getData
            });

            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    traditional: true,
                    contentType: 'application/json; charset=utf-8',
                    url: '/GRN/AuthCancelGRN', // Controller/View
                    data: grn,
                    success: function (msg) {
                        if ($("[name='AuthCancel']:checked").val() == "Authorized")
                            ShowAlert("success", "GRN authorized successfully to system.");
                        else
                            ShowAlert("success", "GRN cancelled successfully.");
                        ClearForm();
                    },
                    error: function (jqXHR, exception) {
                        ShowAlert("error", "Failed to authorize/cancel");
                    }
                });
        });
    });

    $(document).ready(function () {
        var dataSearchGrid = { location: "local", sorting: 'local' };
        var colSearchGrid = [
            { title: "", dataIndx: "ID", dataType: "integer", hidden: true },
            { title: "", dataIndx: "GrnTypeID", dataType: "integer", hidden: true },
            { title: "", dataIndx: "Storeid", dataType: "integer", hidden: true },
            { title: "", dataIndx: "PoID", dataType: "integer", hidden: true },
            { title: "", dataIndx: "SupplierID", dataType: "integer", hidden: true },
            { title: "", dataIndx: "strDCDate", dataType: "date", hidden: true },
            { title: "", dataIndx: "strInvoiceDate", dataType: "date", hidden: true },
            { title: "", dataIndx: "strInwardDate", dataType: "date", hidden: true },
            { title: "", dataIndx: "strPODate", dataType: "date", hidden: true },
            { title: "", dataIndx: "InvoiceNo", dataType: "string", hidden: true },
            { title: "", dataIndx: "PONo", dataType: "string", hidden: true },
            { title: "", dataIndx: "Amount", dataType: "double", hidden: true },
            { title: "", dataIndx: "Transporter", dataType: "string", hidden: true },
            { title: "", dataIndx: "VehicleNo", dataType: "string", hidden: true },
            { title: "", dataIndx: "Amount", dataType: "double", hidden: true },
            { title: "", dataIndx: "TotalTaxamt", dataType: "double", hidden: true },
            { title: "", dataIndx: "TotalFORE", dataType: "double", hidden: true },
            { title: "", dataIndx: "TotalExciseAmt", dataType: "double", hidden: true },
            { title: "", dataIndx: "TotalDisc", dataType: "double", hidden: true },
            { title: "", dataIndx: "InwardNo", dataType: "double", hidden: true },
            { title: "", dataIndx: "GrnPaymentType", dataType: "string", hidden: true },
            { title: "", dataIndx: "CrNoteAmt", dataType: "double", hidden: true },
            { title: "", dataIndx: "TotalOtherAmt", dataType: "double", hidden: true },
            { title: "", dataIndx: "TotalAmount", dataType: "double", hidden: true },
            { title: "", dataIndx: "TotalDisc", dataType: "double", hidden: true },
            { title: "", dataIndx: "GRNType", dataType: "string", hidden: true },
            { title: "", dataIndx: "Notes", dataType: "string", hidden: true },
            {
                title: "Project Name", dataIndx: "StoreName", width: "14%", dataType: "string", editable: false,
                filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }
            },
            {
                title: "GRN No", dataIndx: "GRNNo", width: "15%", dataType: "string", editable: false,
                filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }
            },
            {
                title: "GRN Date", dataIndx: "strGRNDate", width: "14%", dataType: "string", editable: false,
                filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }
            },
            {
                title: "Supplier", dataIndx: "SupplierName", width: "15%", dataType: "string", editable: false,
                filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }
            },
            {
                title: "DC No", dataIndx: "DCNo", width: "14%", dataType: "double", editable: false,
                filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }
            },
            {
                title: "Created-By", dataIndx: "InsertedByName", width: "14%", dataType: "string", editable: false,
                filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }
            },
            {
                title: "Authorized-By", dataIndx: "AuthorizedByName", width: "14%", dataType: "string", editable: false,
                filter: { type: 'textbox', condition: 'begin', listeners: ['keyup'] }
            },
        ];
        var setSearchGrid = {
            width: '100%',
            height: 400,
            sortable: false,
            numberCell: { show: false },
            showTop: true,
            resizable: true,
            scrollModel: { autoFit: true },
            draggable: false,
            wrap: false,
            editable: false,
            columnBorders: true,
            filterModel: { on: true, mode: "AND", header: true },
            selectionModel: { type: 'row', mode: 'single' },
            colModel: colSearchGrid,
            dataModel: dataSearchGrid,
            pageModel: { type: "local", rPP: 50 },
            rowClick: function (evt, ui) {
                ClearParamGrid("grid");
                if (ui.rowData) {
                    var rowIndx = parseInt(ui.rowIndx);
                    var record = ui.rowData;
                    grndate = record.strGRNDate;
                    storeName = record.StoreName;
                    $("#ID").val(record.ID), $("#GRNNo").val(record.GRNNo), $("#GrnTypeID").val(record.GrnTypeID), $("#GRNDate").val(record.strGRNDate),
                        $("#DCNo").val(record.DCNo), $("#DCDate").val(record.strDCDate), $("#InvoiceNo").val(record.InvoiceNo), $("#InvoiceDate").val(record.strInvoiceDate),
                        $("#InwardNo").val(record.InwardNo), $("#InwardDate").val(record.strInwardDate), $("#StoreName").val(record.StoreName), $("#StoreId").val(record.StoreId), $("#SupplierName").val(record.SupplierName),
                        $("#Notes").val(record.Notes), $('input:radio[name="PaymentMode"][value="' + record.GrnPaymentType + '"]').prop('checked', true); $("[name='']").prop('checked', true),
                            $("#GrossAmount").val(record.Amount), $("#TaxAmount").val(record.TotalTaxamt), $("#OtherCharges").val(record.TotalOtherAmt), $("#Discount").val(record.TotalDisc),
                            $("#CR_Note_Amount").val(record.CrNoteAmt), $("#Rounding_Off").val(record.Roundoff), $("#GrandTotal").val(record.TotalAmount),
                            $("#BED").val(record.BED),
                            $("#Edu").val(record.Edu),
                            $("#SHECess").val(record.SHECess);

                    $.ajax({
                        type: "GET",
                        url: "/GRN/GRNDetails/",
                        data: { GRNId: record.ID },
                        datatype: "Json",
                        async: true,
                        success: function (data) {
                            $DetailsGrid.pqGrid("option", "dataModel.data", data);
                            $DetailsGrid.pqGrid("refreshDataAndView");
                            showperAmount();
                        },
                        error: function () {
                            ShowAlert("error", "Server Error");
                            return;
                        }
                    });
                    closeModal();
                }
            }
        }
        $SearchGrid = $("#searchgrid").pqGrid(setSearchGrid);
    });
    $(document).ready(function () {
        colIID = [
            {
                dataIndx: "state", Width: 25, align: "center", type: 'checkBoxSelection', cls: 'ui-state-default', sortable: false,
                editor: false, dataType: 'bool',
                title: "<input type='checkbox' />",
                cb: { select: true, all: false, header: true }
            },
            { title: "", dataIndx: "ID", width: 10, dataType: "integer", editable: false, resizable: false, hidden: true },
            { title: "", dataIndx: "ItemID", width: 10, dataType: "integer", editable: false, resizable: false, hidden: true },
            { title: "", dataIndx: "GrnID", width: 10, dataType: "integer", editable: false, resizable: false, hidden: true },
            { title: "", dataIndx: "Status", width: 10, dataType: "string", editable: false, resizable: false, hidden: true },
            { title: "", dataIndx: "PackSizeId", width: 200, dataType: "integer", resizable: false, editable: false, hidden: true },
            { title: "", dataIndx: "UnitId", width: 200, dataType: "integer", resizable: false, editable: false, hidden: true },
            { title: "Amount", dataIndx: "Amount", width: 150, dataType: "double", resizable: false, editable: false, hidden: true },
            { title: "ItemCode", dataIndx: "ItemCode", width: 150, dataType: "string", resizable: false, editable: false, hidden: true },
            { title: "Item Name & Description", dataIndx: "ItemName", width: 750, resizable: false, dataType: "string", editable: false },
            { title: "HSNCode", dataIndx: "HSNCode", width: 150, resizable: false, dataType: "string", editable: false },
            {
                title: "Description", dataIndx: "DescriptiveName", minWidth: 300, dataType: "string", editable: true,
                editor: { type: "textarea", attr: "rows=5" }, hidden: true
            },
            { title: "Unit", dataIndx: "UnitName", width: 150, dataType: "string", resizable: false, editable: false },
            { title: "Size/Wt.", dataIndx: "SizeOrWeight", width: 90, dataType: "string", resizable: true, editable: false },
            { title: "Pack Size", dataIndx: "PackSize", width: 150, dataType: "double", resizable: false, editable: false, hidden: true },

            { title: "BatchNo", dataIndx: "BatchName", width: 150, dataType: "float", resizable: false, editable: false, hidden: true },
            { title: "Expiry Date", dataIndx: "strExpiryDate", width: 150, dataType: "DateTime", resizable: false, editable: false, hidden: true },
            { title: "Qty", dataIndx: "Qty", width: 150, dataType: "double", resizable: false, editable: false },
            { title: "Free Qty", dataIndx: "FreeQty", width: 150, dataType: "double", resizable: false, editable: false, hidden: true },
            { title: "Unit Rate", dataIndx: "Rate", width: 150, dataType: "double", resizable: false, editable: false},
            { title: "Mrp", dataIndx: "MRP", width: 150, dataType: "double", resizable: false, editable: false, hidden: true },
        ];

        dataIID = {
            location: 'local',
            sorting: 'local',
            paging: 'local',
            dataType: 'JSON'
        };

        setIID = {
            width: '100%',
            height: '350',
            maxheight: '400',
            title: "GRN Details",
            sortable: false,
            numberCell: { show: false },
            selectionModel: { type: 'row' },
            hoverMode: 'cell',
            editor: { type: 'textbox' },
            showTop: true,
            wrap: false,
            resizable: true,
            editModel: {
                saveKey: $.ui.keyCode.ENTER
            },
            draggable: false,
            colModel: colIID,
            dataModel: dataIID,
            pageModel: { type: "local", rPP: 20 },
        };
        $DetailsGrid = $("#grid").pqGrid(setIID);
    });
    function showperAmount() {

        var amt = $("#GrossAmount").val();
        if (amt == undefined || amt === "") amt = 0;
        var bed = $("#BED").val();
        if (bed == undefined || bed === "") bed = 0;
        var bedamt = (bed * amt) / 100;
        $("#BedAmt").val(Math.round(bedamt));
        var shecess = $("#SHECess").val();
        if (shecess == undefined || shecess === "") shecess = 0;
        var shecessamt = (shecess * amt) / 100;
        $("#Shecessamt").val(Math.round(shecessamt));
        var educess = $("#Edu").val();
        if (educess == undefined || educess === "") educess = 0;
        var eduamt = (educess * amt) / 100;
        $("#educessamt").val(Math.round(eduamt));
    }
    $('#btnPrint').on('click', function () {
        if ($("#ID").val() === "" || $("#ID").val() === 0) {
            ShowAlert("error", "Please Select GRN");
            return;
        }
        $("#ReportModal").modal('show');
        ReportValidationCheck($("#ID").val());
    });


    function ReportValidationCheck(grnid) {
        var url = "";
        url = "../../Reports/ReportViewer.aspx?reportid=" +
            142 +
            "&fdate=" +
            grndate +
            "&tdate=" +
            grndate +
            "&storeid=" +
            $("#StoreId").val() + "&suppid=" + 0 + "&GrnId=" + grnid + "&sname=" + storeName;

        console.log(url);
        var myframe = document.getElementById("iframeReportViewer");
        if (myframe != null) {
            if (myframe.src) {
                myframe.src = url;
            }
            else if (myframe.contentWindow != null && myframe.contentWindow.location != null) {
                myframe.contentWindow.location = url;
            }
            else {
                myframe.setAttribute('src', url);
            }
            return false;
        }
    }

    $("#btnSearch").on('click', function () {
        $("#SearchGridModal").modal('show');
        LoadSearchGrid('unauthorized');
    });

    $("#btnSearchAuth").on('click', function () {
        $("#SearchGridModal").modal('show');
        LoadSearchGrid('authorized');
    });

    function closeModal() {
        $("#SearchGridModal").modal('hide');
        $("#ReportModal").modal('hide');
    }
</script>
