@Scripts.Render("~/bundles/jquerymodels")

<h5 class="page-header orangeDottedBottomBorder">Ticket Dashboard</h5>

<div class="submit-row">
    <div class="col-lg-2 col-md-4 col-sm-12 mb-3">
        <label class="required" for="financialYear">Financial Year</label>
        <select id="financialYear" name="financialYear" class="form-control">
            <option value="">--Select Financial Year--</option>
        </select>
    </div>
    <div class="col-lg-2 col-md-4 col-sm-12 mb-3">
        <br />
        <button type="button" id="btnGo" class="btn btn-primary" onclick="go()">GO</button>
        <button type="button" class="btn btn-warning" id="btnResetT" onclick="clearFormData()">Clear</button>
    </div>

</div>

<fieldset class="fieldsetCustom">
    <legend class="legendCustom"> Summury </legend>
    <div class="dashboard-container">
        <!-- New -->
        <div class="dashboard-card" onclick="filterTickets(1)">
            <h3>New</h3>
            <h2 id="StatusID_1">0</h2>
        </div>

        <!-- Queued / Assigned -->
        <div class="dashboard-card" onclick="filterTickets(2)">
            <h3>Queued / Assigned</h3>
            <h2 id="StatusID_2">0</h2>
        </div>

        <!-- In Progress -->
        <div class="dashboard-card" onclick="filterTickets(3)">
            <h3>In Progress</h3>
            <h2 id="StatusID_3">0</h2>
        </div>

        <!-- Resolved -->
        <div class="dashboard-card" onclick="filterTickets(4)">
            <h3>Resolved</h3>
            <h2 id="StatusID_4">0</h2>
        </div>

        <!-- Closed -->
        <div class="dashboard-card" onclick="filterTickets(5)">
            <h3>Closed</h3>
            <h2 id="StatusID_5">0</h2>
        </div>
    </div>

    <div class="dashboard-container">
        <!-- Waiting for Customer Response -->
        <div class="dashboard-card" onclick="filterTickets(6)">
            <h3>Waiting for Customer Response</h3>
            <h2 id="StatusID_6">0</h2>
        </div>

        <!-- Waiting for Support -->
        <div class="dashboard-card" onclick="filterTickets(7)">
            <h3>Waiting for Support</h3>
            <h2 id="StatusID_7">0</h2>
        </div>

        <!-- On Hold -->
        <div class="dashboard-card" onclick="filterTickets(8)">
            <h3>On Hold</h3>
            <h2 id="StatusID_8">0</h2>
        </div>

        <!-- Canceled -->
        <div class="dashboard-card" onclick="filterTickets(9)">
            <h3>Canceled</h3>
            <h2 id="StatusID_9">0</h2>
        </div>

        <!-- Re-Open -->
        <div class="dashboard-card" onclick="filterTickets(10)">
            <h3>Re-Open</h3>
            <h2 id="StatusID_10">0</h2>
        </div>
    </div>



    <div id="TicketStatusRptGrid"></div>
</fieldset>

<div id="SearchGridModal" class="modal fade" role="dialog" data-backdrop="false">
    <div class="modal-dialog find-search-grid-modal">
        <div class="modal-content gridmodal-content">
            <div class="modal-header gridmodal-header">
                <button type="button" class="close" onclick="closeModal()">&times;</button>
                <h4 class="modal-title">Activity Details</h4>
            </div>
            <div class="modal-body">
                <div class="fill">
                    <div id="ActivityGrid"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var ticketStatusRpt = [];

    function loadFinancialYear() {
        $.ajax({
            type: "GET",
            url: "/ResourceTarget/GetFinancialYear",
            dataType: "json",
            success: function (data) {
                const $financialYear = $('#financialYear');
                $financialYear.empty();

                if (data.error) {
                    $financialYear.append('<option value="">--Error loading financial years--</option>');
                    console.error("Error loading financial years:", data.error);
                    return;
                }

                $financialYear.append('<option value="">All</option>');
                data.forEach(function (financialYear) {
                    $financialYear.append(`<option value="${financialYear.FinancialYear}">${financialYear.FinancialYear}</option>`);
                });
            },
            error: function (xhr, textStatus, errorThrown) {
                $('#financialYear').empty();
                $('#financialYear').append('<option value="">--Error loading sources--</option>');
                console.error("Error loading sources:", errorThrown);
            }
        });
    }
    loadFinancialYear();

    function go() {
        const financialYear = $("#financialYear").val();

        loadTicketStatusSummary(financialYear);
        loadTicketStatusRptGrid(financialYear);
    }

    function loadTicketStatusSummary(financialYear) {
        const antiForgeryToken = $("input[name=__RequestVerificationToken]").val();

        $.ajax({
            headers: { "__RequestVerificationToken": antiForgeryToken },
            type: 'GET',
            url: "/Ticket/TKT_Dashboard/GetTicketStatusSummary",
            data: { financialYear },
            dataType: "json",
            success(response) {
                if (response.success && Array.isArray(response.records)) {
                    response.records.forEach(({ StatusID, TicketCount }) => {
                        const statusElement = $(`#StatusID_${StatusID}`);
                        if (statusElement.length) {
                            statusElement.text(TicketCount);
                        }
                    });
                } else {
                    alert(response.message || "Unable to load ticket status summary.");
                }
            },
            error() {
                alert("An error occurred while loading ticket status summary. Please try again later.");
            }
        });
    }

    //-----------------------------------TicketStatusRptGrid (Starts here)-----------------------------------//
    var TicketStatusRptGrid_GDM = { location: "local" };
    var TicketStatusRptGrid_GCM = [
        {
            title: "Current Status",
            dataIndx: "Status",
            width: 200,
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Ticket No",
            dataIndx: "TicketNo",
            width: 150,
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Client Name",
            dataIndx: "ClientName",
            width: 200,
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Subject",
            dataIndx: "Subject",
            width: 200,
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Ticket Date",
            dataIndx: "strTicketDate",  // Use the string representation for the date
            width: 100,
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Ticket Age",
            dataIndx: "TicketAge",
            width: 50,
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Allocated To",
            dataIndx: "AllocatedToName",  // AllocatedToName instead of AllocatedTo
            width: 150,
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Activity Details", editable: false, minWidth: 30, width: 50, sortable: false, align: 'center', render: function (ui) {
                return '<button type="button" class="btn btn-primary" onclick="viewTicketActivities(' + ui.rowData.TicketID + ');">Activities</button>';
            }
        },
    ];
    var setTicketStatusRptGrid = {
        height: 530,
        width: 'auto',
        maxWidth: '100%',
        minWidth: 800,
        sortable: true,
        autofill: true,
        numberCell: { show: false },
        hoverMode: 'row',
        showTop: true,
        showTitle: true,
        showBottom: true,
        resizable: true,
        scrollModel: { autoFit: true },
        filterModel: { on: true, mode: "AND", header: true },
        draggable: false,
        hwrap: false,
        wrap: false,
        editable: false,
        columnBorders: true,
        menuIcon: true,
        selectionModel: { type: 'row', mode: 'single', cbHeader: false },
        colModel: TicketStatusRptGrid_GCM,
        dataModel: TicketStatusRptGrid_GDM,
        pageModel: { type: "local", rPP: 50 },
        rowInit: function (ui) {
            if (ui.rowData.Color && ui.rowData.Color !== "") {
                return {
                    style: `background:${ui.rowData.Color};color:black;`
                };
            }
        },
        toolbar: {
            items: [
                {
                    type: "<label><b>Export data to Excel : </b> | </label>"
                },
                {
                    type: 'button',
                    label: "Export",
                    icon: 'ui-icon-arrowthickstop-1-s',
                    listener: function () {
                        var format = 'xlsx',
                            blob = workbook = this.exportData({
                                format: format,
                                workbook: true,
                                render: true
                            });

                        blob = pq.excel.exportWb({ workbook: workbook })
                        if (typeof blob === "string") {
                            blob = new Blob([blob]);
                        }

                        var fileName = "TicketStatusRpt_" + formatDateTime(new Date()) + "." + format;

                        saveAs(blob, fileName);
                    }
                }
            ]
        }
    }
    var $TicketStatusRptGrid = $("#TicketStatusRptGrid").pqGrid(setTicketStatusRptGrid);
    function loadTicketStatusRptGrid(financialYear) {
        const antiForgeryToken = $("input[name='__RequestVerificationToken']").val();

        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/Ticket/TKT_Dashboard/GetTicketStatusRpt",
            data: { financialYear: financialYear },
            dataType: "json",

            beforeSend: function () {
                $("#TicketStatusRptGrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#TicketStatusRptGrid").pqGrid("hideLoading");
            },

            success: function (response) {
                if (response.success) {
                    ticketStatusRpt = response.records;
                } else {
                    console.warn("No data found or an issue occurred: ", response.message);
                    ticketStatusRpt = [];
                }
                filterTickets();
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading Ticket Status Report grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText);
                $("#TicketStatusRptGrid").pqGrid("hideLoading");
            }
        });
    }
    //-----------------------------------TicketStatusRptGrid (Ends here)-----------------------------------//

    function filterTickets(statusID) {

        const filteredData = statusID ? ticketStatusRpt.filter(ticket => ticket.StatusID === statusID) : ticketStatusRpt;

        const grid = $("#TicketStatusRptGrid").pqGrid();
        grid.pqGrid("option", "dataModel.data", filteredData);
        grid.pqGrid("refreshDataAndView");
        PqGridRefreshClick(grid);
    }

    //-----------------------------------ActivityGrid (Starts here)-----------------------------------//
    var ActivityGrid_GDM = { location: "local" };
    var ActivityGrid_GCM = [
        {
            title: "Activity Date", dataIndx: "strActivityDate", width: '15%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Activity", dataIndx: "Activity", width: '30%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Response Date", dataIndx: "strResponseDate", width: '15%',
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
        {
            title: "Response", dataIndx: "Response", width: 150,
            filter: { type: 'textbox', condition: 'contain', listeners: ['keyup'] }
        },
    ];
    var setActivityGrid = {
        height: 300,
        width: 'auto',
        maxWidth: '100%',
        minWidth: 800,
        sortable: true,
        autofill: true,
        numberCell: { show: true },
        hoverMode: 'row',
        showTop: false,
        showTitle: true,
        showBottom: true,
        resizable: true,
        scrollModel: { autoFit: true },
        filterModel: { on: true, mode: "AND", header: true },
        draggable: false,
        hwrap: false,
        wrap: false,
        editable: false,
        columnBorders: true,
        menuIcon: true,
        selectionModel: { type: 'row', mode: 'single', cbHeader: false },
        colModel: ActivityGrid_GCM,
        dataModel: ActivityGrid_GDM,
        pageModel: { type: "local" },
        rowClick: function (evt, ui) {
            if (ui.rowData) {
                var data = ui.rowData;
                closeModal();
                clearFormData();
                tempTicketID = data.TicketID;
                $("#Subject").val(data.Subject);
                $("#Description").val(data.Description);
                $("#Priority").val(data.Priority);
                $("#AllocatedToName").val(data.AllocatedToName);
                GetActivity(data.TicketID);
            }
        }

    }
    var $ActivityGrid = $("#ActivityGrid").pqGrid(setActivityGrid);

    function viewTicketActivities(ticketID) {
        const antiForgeryToken = $("input[name=__RequestVerificationToken]").val();

        $.ajax({
            headers: {
                "__RequestVerificationToken": antiForgeryToken
            },
            type: 'GET',
            url: "/TicketActivity/GetActivity",
            data: { TicketID: ticketID },
            dataType: "json",

            beforeSend: function () {
                $("#ActivityGrid").pqGrid("showLoading");
            },

            complete: function () {
                $("#ActivityGrid").pqGrid("hideLoading");
            },

            success: function (response) {
                if (response.success && response.records?.length > 0) {
                    $("#SearchGridModal").modal("show");
                    const grid = $("#ActivityGrid").pqGrid();
                    grid.pqGrid("option", "dataModel.data", response.records);
                    grid.pqGrid("refreshDataAndView");
                    PqGridRefreshClick(grid);
                } else {
                    $("#SearchGridModal").modal("hide");
                    ShowAlert("warning", "No Activity Found");
                }
            },

            error: function (jqXHR, textStatus, errorThrown) {
                $("#SearchGridModal").modal("hide");
                console.error("Error loading Activity Details grid:", textStatus, errorThrown);
                console.error("Response text:", jqXHR.responseText || "No response text");
            }
        });
    }

    //-----------------------------------ActivityGrid (Ends here)-----------------------------------//

    function showModal() {
        $("#SearchGridModal").modal('show');
    }

    function closeModal() {
        $("#SearchGridModal").modal('hide');
    }

    function clearFormData() {
        $("#financialYear").val('');
        $('.dashboard-card h2').text('0');
        ClearParamGrid('TicketStatusRptGrid');
    }
</script>
