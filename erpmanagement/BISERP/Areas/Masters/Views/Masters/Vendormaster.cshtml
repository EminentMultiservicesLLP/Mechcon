@model BISERP.Areas.Masters.Models.VendorMasterModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <h5 class="page-header orangeDottedBottomBorder">Vender Master</h5>
    @* new addition 2024 *@
    <div id="SearchGridModal" class="modal fade" role="dialog" data-backdrop="false">
        <div class="modal-dialog find-search-grid-modal">
            <div class="modal-content gridmodal-content">
                <div class="modal-header gridmodal-header">
                    <button type="button" class="close" onclick="closeModal()">&times;</button>
                    <h4 class="modal-title">Item Details</h4>
                </div>
                <div class="modal-body">
                    <div class="fill">
                        <div id="grid"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <fieldset>

        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-groupingBoder">
                    <div class="panel-heading">
                        <div class="panel-title">
                            Vender Detail Entry Form
                        </div>
                    </div>
                    <div id="collapse2" class="panel-collapse collapse in" aria-expanded="true">
                        <div class="panel-body">
                            <div class="fill">
                                <div class="submit-row">
                                    <button type="button" id="btnSave" class="btn btn-success">Save</button>
                                    <button type="button" id="btnAdd" class="btn btn-primary">Reset</button>
                                    <button type="button" id="btnSearch" class="btn btn-info">Find</button>
                                </div>

                                <fieldset class="fieldsetCustom">
                                    <legend class="legendCustom">Create</legend>
                                    <div class="row">
                                        <div class="col-md-5">
                                            @Html.LabelFor(model => model.Code, new { @class = "required" })
                                            @Html.TextBoxFor(model => model.Code, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Code)
                                            @Html.HiddenFor(model => model.VendorId)
                                        </div>
                                        <div class="col-md-5">
                                            @Html.LabelFor(model => model.Name, new { @class = "required" })
                                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Name)
                                        </div>
                                        <div class="col-sm-2">
                                            @Html.LabelFor(model => model.Deactive)
                                            @Html.CheckBoxFor(model => model.Deactive, new { @disabled = "disabled" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset class="fieldsetCustom">
                                    <legend class="legendCustom">Address</legend>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Society)
                                            @Html.TextBoxFor(model => model.Society, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Society)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Street)
                                            @Html.TextBoxFor(model => model.Street, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Street)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Landmark)
                                            @Html.TextBoxFor(model => model.Landmark, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Landmark)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Village)
                                            @Html.TextBoxFor(model => model.Village, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Country)
                                            @Html.DropDownList("ddlCountry", new SelectList(string.Empty, "Value", "Text"), "Select Country ", new { @class = "wrapperdropdown-content form-control" })
                                            @Html.ValidationMessageFor(model => model.Country)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.State)
                                            @Html.DropDownList("ddlState", new SelectList(string.Empty, "Value", "Text"), "Select State ", new { @class = "wrapperdropdown-content form-control" })
                                            @Html.ValidationMessageFor(model => model.State)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.City)
                                            @Html.DropDownList("ddlCity", new SelectList(string.Empty, "Value", "Text"), "Select City", new { @class = "wrapperdropdown-content form-control" })
                                            @Html.ValidationMessageFor(model => model.City)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Pincode)
                                            @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Pincode)
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset class="fieldsetCustom">
                                    <legend class="legendCustom">Contact Person Details</legend>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ContactPerson)
                                            @Html.TextBoxFor(model => model.ContactPerson, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ContactPerson)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ContactDesignation)
                                            @Html.TextBoxFor(model => model.ContactDesignation, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ContactDesignation)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Phone1)
                                            @Html.TextBoxFor(model => model.Phone1, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Phone1)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Phone2)
                                            @Html.TextBoxFor(model => model.Phone2, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Phone2)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.CellPhone)
                                            @Html.TextBoxFor(model => model.CellPhone, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CellPhone)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Fax)
                                            @Html.TextBoxFor(model => model.Fax, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Fax)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Web)
                                            @Html.TextBoxFor(model => model.Web, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Web)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Email)
                                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Email)
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset class="fieldsetCustom">
                                    <legend class="legendCustom">Tax</legend>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.VATTINNo)
                                            @Html.TextBoxFor(model => model.VATTINNo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.VATTINNo)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ServiceTaxNo)
                                            @Html.TextBoxFor(model => model.ServiceTaxNo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ServiceTaxNo)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ExciseCode)
                                            @Html.TextBoxFor(model => model.ExciseCode, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ExciseCode)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.PANNo)
                                            @Html.TextBoxFor(model => model.PANNo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.PANNo)
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.CST)
                                            @Html.TextBoxFor(model => model.CST, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CST)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.IncomeTaxNo)
                                            @Html.TextBoxFor(model => model.IncomeTaxNo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.IncomeTaxNo)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.CreditPeriod)
                                            @Html.TextBoxFor(model => model.CreditPeriod, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CreditPeriod)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.DateOfAssociation)
                                            @Html.TextBoxFor(model => model.DateOfAssociation, new { @class = "form-control datepicker" })
                                            @Html.ValidationMessageFor(model => model.DateOfAssociation)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.GSTIN)
                                            @Html.TextBoxFor(model => model.GSTIN, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset class="fieldsetCustom">
                                    <legend class="legendCustom">Bank Information</legend>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.BankName)
                                            @Html.TextBoxFor(model => model.BankName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.BankName)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.BankAcNo)
                                            @Html.TextBoxFor(model => model.BankAcNo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.BankAcNo)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.RTGSCODE)
                                            @Html.TextBoxFor(model => model.RTGSCODE, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.RTGSCODE)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.BankBranch)
                                            @Html.TextBoxFor(model => model.BankBranch, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.BankBranch)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.MICRNo)
                                            @Html.TextBoxFor(model => model.MICRNo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.MICRNo)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.IFSCCODE)
                                            @Html.TextBoxFor(model => model.IFSCCODE, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.IFSCCODE)
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </fieldset>

}
<script type="text/javascript">
 var grid;
    $(".datepicker").datepicker({
        showOn: "button",
        buttonImage: "/Content/images/calendar.gif",
        buttonImageOnly: true,
        buttonText: "Select date",
        'changeMonth': true,
        'changeYear': true,
        'yearRange': '2021:2030',
        "format": "dd-MM-yyyy",
        todayBtn: "linked",
        pickerPosition: "bottom-left",
        "todayHighlight": true,
        autoclose: true,
    }).datepicker("setDate", new Date());
    $("#anim").change(function () {
        $(".datepicker").datepicker("option", "showAnim", "fadeIn");
    });
function loadGridData() {
    grid = $("#grid").jsGrid({
        width: "100%",
        height: "500px",
        filtering: true, //will display top 1st row as filter
        selecting: true,

        inserting: false, // false will not allow inserting new entry
        editing: false,// false will not allow exisiting data entry
        sorting: true,
        autoload: true, // this statement require to load data using ajax call
        paging: true,
        pageSize: 20,

        controller: {
            loadData: function (filter) {
                var d = $.Deferred();
                $.ajax({
                    type: 'GET',
                    url: "/VendorMaster/AllVendor",
                    @*url: '@Url.Action("AllVendor", "VendorMaster")',*@
                dataType: "json",
                    data: { SearchName: filter.Name, SearchCode: filter.Code },
                    success: function (data) {
                        if (data.success) {
                            d.resolve(data.records);
                        } else {
                            ShowAlert("error", data.Messsage);
                            return;
                        }
                    },
                    error: function (e) {
                        ShowAlert("error", "Server error! Please Contact Administrator");
                        return;
                    }
                });
    return d.promise();
}
        },

fields: [
    { name: "VendorId", visible: false, width: 0 },
    { name: "Code", title: "Code", type: "text", validate: "required", width: 20 },
    { name: "Name", title: "Name", type: "text", validate: "required" },
    { name: "Deactive", title: "Deactive", type: "checkbox", filtering: false, width: 10 },
    { name: "Society", visible: false, width: 0 },
    { name: "Street", visible: false, width: 0 },
    { name: "Landmark", visible: false, width: 0 },
    { name: "Village", visible: false, width: 0 },
    { name: "City", visible: false, width: 0 },
    { name: "Pincode", visible: false, width: 0 },
    { name: "State", visible: false, width: 0 },
    { name: "Country", visible: false, width: 0 },
    { name: "ContactPerson", visible: false, width: 0 },
    { name: "ContactDesignation", visible: false, width: 0 },
    { name: "CreditPeriod", visible: false, width: 0 },
    { name: "DateOfAssociation", visible: false, width: 10, type: 'date', format: "dd/MM/yyyy" },
    { name: "GroupID", visible: false, width: 0 },
    { name: "Fax", visible: false, width: 0 },
    { name: "Phone1", visible: false, width: 0 },
    { name: "Phone2", visible: false, width: 0 },
    { name: "CellPhone", visible: false, width: 0 },
    { name: "Web", visible: false, width: 0 },
    { name: "Email", visible: false, width: 0 },
    { name: "CST", visible: false, width: 0 },
    { name: "MST", visible: false, width: 0 },
    { name: "TDS", visible: false, width: 0 },
    { name: "ExciseCode", visible: false, width: 0 },
    { name: "ExportCode", visible: false, width: 0 },
    { name: "LedgerID", visible: false, width: 0 },
    { name: "EligableForAdv", visible: false, width: 0 },
    { name: "BankName", visible: false, width: 0 },
    { name: "BankAcNo", visible: false, width: 0 },
    { name: "MICRNo", visible: false, width: 0 },
    { name: "BankBranch", visible: false, width: 0 },
    { name: "Note", visible: false, width: 0 },
    { name: "Proposed", visible: false, width: 0 },
    { name: "IncomeTaxNo", visible: false, width: 0 },
    { name: "SuppType", visible: false, width: 0 },
    { name: "AccountId", visible: false, width: 0 },
    { name: "Paytermsid", visible: false, width: 0 },
    { name: "IFSCCODE", visible: false, width: 0 },
    { name: "RTGSCODE", visible: false, width: 0 },
    { name: "VendorCategory", visible: false, width: 0 },
    { name: "VendorType", visible: false, width: 0 },
    { name: "VATTINNo", visible: false, width: 0 },
    { name: "ServiceTaxNo", visible: false, width: 0 },
    { name: "PANNo", visible: false, width: 0 },
    //{ type: "control", editButton: false, deleteButton: false, clearFilterButton: true, modeSwitchButton: true, width: 10 }

],
    /********** Row Selection Event you can use in suupplier***********/
    rowClick: function (args) {
        //var date1 = ToJavaScriptDate(data.DateOfAssociation);
        var data = args.item;
        $("#VendorId").val(data.VendorId);
        $("#Name").val(data.Name); $("#Code").val(data.Code); $("#Deactive").prop('checked', data.Deactive); $("#Society").val(data.Society); $("#Street").val(data.Street); $("#Landmark").val(data.Landmark);
        $("#Village").val(data.Village);$("#Pincode").val(data.Pincode);/* $("#ddlState").val(data.State);*/ $("#ddlCountry").val(data.Country);
        GetState(data.State); GetCity(data.City, data.State); $("#ContactPerson").val(data.ContactPerson);
        $("#ContactDesignation").val(data.ContactDesignation); $("#Phone1").val(data.Phone1); $("#Phone2").val(data.Phone2); $("#CellPhone").val(data.CellPhone); $("#Fax").val(data.Fax);
        $("#Web").val(data.Web); $("#Email").val(data.Email); $("#VATTINNo").val(data.VATTINNo); $("#ServiceTaxNo").val(data.ServiceTaxNo); $("#ExciseCode").val(data.ExciseCode); $("#PANNo").val(data.PANNo);
        $("#CST").val(data.CST); $("#IncomeTaxNo").val(data.IncomeTaxNo); $("#RTGSCODE").val(data.RTGSCODE); $("#IFSCCODE").val(data.IFSCCODE); $("#CreditPeriod").val(data.CreditPeriod); $("#DateOfAssociation").val(data.strDateOfAssociation);
        $("#EligableForAdv").prop('checked', data.EligableForAdv); $("#ExportCode").val(data.ExportCode); $("#BankName").val(data.BankName); $("#BankAcNo").val(data.BankAcNo); $("#MICRNo").val(data.MICRNo); $("#GSTIN").val(data.GSTIN);
        $("#BankBranch").val(data.BankBranch); $("#Note").val(data.Note);
        $("#Deactive").attr("disabled", false);
        $("#SearchGridModal").modal('hide');
        //$(this).is(":checked") ? selectItem(item) : unselectItem(item);
    },

    });

}

$("#btnSave").click(function () {
    if ($("#Code").val() == "") {
        ShowAlert("error", "code is missing! Please enter the code");
        return;
    }
    if ($("#Name").val() == "") {
        ShowAlert("error", "Name is missing! Please enter the Name");
        return;
    }


    $.ajax(
        {
            type: "POST", //HTTP POST Method
            url: '/VendorMaster/SaveVendor', // Controller/View
            data: { //Passing data
                VendorId: $("#VendorId").val(), //Reading text box values using Jquery GSTIN
                Name: $("#Name").val(),
                Code: $("#Code").val(),
                Street: $("#Street").val(),
                Society: $("#Society").val(),
                Landmark: $("#Landmark").val(),
                Village: $("#Village").val(),
                City: $("#ddlCity").val(),
                Pincode: $("#Pincode").val(),
                State: $("#ddlState").val(),
                Country: $("#ddlCountry").val(),
                ContactPerson: $("#ContactPerson").val(),
                ContactDesignation: $("#ContactDesignation").val(),
                CreditPeriod: $("#CreditPeriod").val(),
                GroupID: $("#GroupID").val(),
                Fax: $("#Fax").val(),
                Phone1: $("#Phone1").val(),
                Phone2: $("#Phone2").val(),
                CellPhone: $("#CellPhone").val(),
                Web: $("#Web").val(),
                Email: $("#Email").val(),
                CST: $("#CST").val(),
                MST: $("#MST").val(),
                TDS: $("#TDS").val(),
                ExciseCode: $("#ExciseCode").val(),
                ExportCode: $("#ExportCode").val(),
                LedgerID: $("#LedgerID").val(),
                BankName: $("#BankName").val(),
                BankAcNo: $("#BankAcNo").val(),
                MICRNo: $("#MICRNo").val(),
                BankBranch: $("#BankBranch").val(),
                Note: $("#Note").val(),
                Proposed: $("#Proposed").val(),
                IncomeTaxNo: $("#IncomeTaxNo").val(),
                SuppType: $("#SuppType").val(),
                AccountId: $("#AccountId").val(),
                Paytermsid: $("#Paytermsid").val(),
                VendorCategory: $("#VendorCategory").val(),
                VendorType: $("#VendorType").val(),
                VATTINNo: $("#VATTINNo").val(),
                ServiceTaxNo: $("#ServiceTaxNo").val(),
                PANNo: $("#PANNo").val(),
                GSTIN: $("#GSTIN").val(),
                RTGSCODE: $("#RTGSCODE").val(),
                IFSCCODE: $("#IFSCCODE").val(),
                DateOfAssociation: $("#DateOfAssociation").val(),
                EligableForAdv: $("#EligableForAdv").prop('checked'),
                Deactive: $("#Deactive").prop('checked')
            },
            success: function (msg) {
                if (msg.success) {
                    ClearForm();
                    ShowAlert("success", "Vendor Master record added successfully to system.");
                }
                else {
                    ShowAlert("error", msg.Message);
                }
            },

        });
});


    $.ajax({
        type: "GET",
        url: "/Master/AllCountry",
        datatype: "Json",
        success: function (data) {
            $.each(data, function (index, value) {
                $('#ddlCountry').append('<option value="' + value.ID + '">' + value.CountryName + '</option>');
            });
        }
    });

    $('#ddlCountry').change(function () {
        GetState();
    });

    function GetState(stateId) {
        $('#ddlState').empty();
        var countryId = $('#ddlCountry').val();
        $.ajax({
            type: "GET",
            url: "/Master/GetStateByCountryId",
            datatype: "Json",
            data: { CountryId: countryId },
            success: function (data) {
                if (data.length > 0) {
                    $.each(data, function (index, value) {
                        $('#ddlState').append('<option value="' + value.ID + '">' + value.StateName + '</option>');
                    });
                }
                else {
                    $('#ddlState').append('<option value="">No State Found</option>');
                }
                if (stateId) {
                    $('#ddlState').val(stateId)
                }
                else {
                    $('#ddlState').val("");
                }
            }
        });
    }


$('#ddlState').change(function () {
    GetCity();
});


    function GetCity(cityId, stateID) {
        $('#ddlCity').empty();
        var StateID = 0;
        stateID ? StateID = stateID : StateID = $('#ddlState').val();
        $.ajax({
            type: "GET",
            url: "/Master/GetCityById",
            datatype: "Json",
            data: { stateId: StateID },
            success: function (data) {
                if (data.length > 0) {
                    $.each(data, function (index, value) {
                        $('#ddlCity').append('<option value="' + value.ID + '">' + value.CityName + '</option>');
                    });
                }
                else {
                    $('#ddlCity').append('<option value="">No City Found</option>');
                }
                if (cityId) {
                    $('#ddlCity').val(cityId)
                }
                else {
                    $('#ddlCity').val("");
                }
            }
        });
    }


$.ajax({
    type: "GET",
    url: "/Master/AllVillages",
    datatype: "Json",
    success: function (data) {
        $.each(data, function (index, value) {
            $('#ddlVillage').append('<option value="' + value.ID + '">' + value.VillageName + '</option>');
        });
    }
});


function ClearForm() {
    $("#VendorId").val(""); $("#Name").val(""); $("#Code").val(""); $("#Deactive").prop('checked', false); $("#Society").val(""); $("#Street").val(""); $("#Landmark").val(""); $("#ddlVillage").val(""); $("#ddlCity").val(""); $("#Pincode").val("");
    $("#ddlState").val(""); $("#ddlCountry").val(""); $("#ContactPerson").val(""); $("#ContactDesignation").val(""); $("#Phone1").val(""); $("#Phone2").val(""); $("#CellPhone").val(""); $("#Fax").val(""); $("#Web").val(""); $("#Email").val("");
    $("#VATTINNo").val(""); $("#ServiceTaxNo").val(""); $("#ExciseCode").val(""); $("#PANNo").val(""); $("#CST").val(""); $("#IncomeTaxNo").val(""); $("#RTGSCODE").val(""); $("#IFSCCODE").val(""); $("#CreditPeriod").val("");
    $("#EligableForAdv").prop('checked', false); $("#ExportCode").val(""); $("#BankName").val(""); $("#BankAcNo").val(""); $("#MICRNo").val(""); $("#BankBranch").val(""); $("#Note").val("");
    $("#Deactive").attr("disabled", true); $("#DateOfAssociation").datepicker().datepicker("setDate", new Date()); $("#GSTIN").val("");
}

$("#btnSearch").on('click', function () {
    loadGridData();
    //$("#grid").jsGrid("loadData");
    $("#SearchGridModal").modal('show');
});

function closeModal() {
    $("#SearchGridModal").modal('hide');
}

$("#btnAdd").click(function () {
    ClearForm();
});
</script>