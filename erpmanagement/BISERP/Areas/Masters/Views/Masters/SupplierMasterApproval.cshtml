@model BISERP.Areas.Masters.Models.SupplierMasterModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <h5 class="page-header orangeDottedBottomBorder">Supplier Approval Master</h5>

    <fieldset>
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-groupingBoder">
                    <div class="panel-heading">
                        <div class="panel-title">
                            Supplier Detail Entry Form
                        </div>
                    </div>
                    <div id="collapse2" class="panel-collapse collapse in" aria-expanded="true">
                        <div class="panel-body">
                            <div class="fill">
                                <div class="submit-row">
                                    <button type="button" id="btnSave" class="btn btn-success">Save</button>
                                    <button type="button" id="btnReset" class="btn btn-primary">Reset</button>
                                </div>

                                <fieldset class="fieldsetCustom">
                                    <div class="row">
                                        <div class="col-sm-3 col-sm-3">
                                            <label for="ddlCategory" class="required"> Supplier Category </label>
                                            <select id="ddlCategory" name="ddlCategory" class="wrapperdropdown-content form-control">
                                                <option value="0">Select Category</option>
                                                <option value="1">Approved</option>
                                                <option value="2">Un-Approved</option>
                                                <option value="3">Rejected</option>
                                            </select>

                                        </div>
                                        <div class="col-md-3">
                                            @Html.Label("Supplier", new { @class = "required" })
                                            @Html.DropDownList("ddlSupplier", new SelectList(string.Empty, "Value", "Text"), "Select Supplier", new { @class = "wrapperdropdown-content form-control" })
                                        </div>
                                        <div class="col-lg-2 col-sm-12" style="margin-top:1rem;">
                                            <fieldset class="fieldsetCustom">
                                                @*<p>Status :</p>*@
                                                <input type="radio" id="Approved" name="Status" value="1">
                                                <label for="Approved">Approve</label>&nbsp;&nbsp;
                                                <input type="radio" id="Rejected" name="Status" value="2">
                                                <label for="Rejected" class="required">Reject</label>
                                            </fieldset>
                                        </div>
                                        <div class="col-lg-4 col-sm-6">
                                            <br />
                                            <button type="button" class="btn btn-primary" id="btnShowAttachments">View uploaded Files</button>
                                            <button type="button" class="btn btn-info" id="btnDownloadAttachment">Download Files</button>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-8 col-sm-8">
                                            @Html.Label("Remark")
                                            @Html.TextAreaFor(model => model.Remark, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </fieldset>

                                <fieldset class="fieldsetCustom">
                                    <legend class="legendCustom">Details</legend>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Code, new { })
                                            @Html.TextBoxFor(model => model.Code, new { @class = "form-control", @disabled = "disabled" })

                                            @Html.HiddenFor(model => model.ID)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Name, new { })
                                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @disabled = "disabled" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Society)
                                            @Html.TextBoxFor(model => model.Society, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.Society)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Street)
                                            @Html.TextBoxFor(model => model.Street, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.Street)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Landmark)
                                            @Html.TextBoxFor(model => model.Landmark, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.Landmark)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Village)
                                            @Html.TextBoxFor(model => model.Village, new { @class = "form-control", @disabled = "disabled" })
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Pincode)
                                            @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.Pincode)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Country)
                                            @Html.DropDownList("ddlCountry", new SelectList(string.Empty, "Value", "Text"), "Select Country ", new { @class = "wrapperdropdown-content form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.Country)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.State)
                                            @Html.DropDownList("ddlState", new SelectList(string.Empty, "Value", "Text"), "Select State ", new { @class = "wrapperdropdown-content form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.State)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.City)
                                            @Html.DropDownList("ddlCity", new SelectList(string.Empty, "Value", "Text"), "Select City", new { @class = "wrapperdropdown-content form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.City)
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset class="fieldsetCustom">
                                    <legend class="legendCustom">Contact Person Details</legend>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ContactPerson)
                                            @Html.TextBoxFor(model => model.ContactPerson, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.ContactPerson)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ContactDesignation)
                                            @Html.TextBoxFor(model => model.ContactDesignation, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.ContactDesignation)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Phone1)
                                            @Html.TextBoxFor(model => model.Phone1, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.Phone1)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Phone2)
                                            @Html.TextBoxFor(model => model.Phone2, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.Phone2)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.CellPhone)
                                            @Html.TextBoxFor(model => model.CellPhone, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.CellPhone)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Fax)
                                            @Html.TextBoxFor(model => model.Fax, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.Fax)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Web)
                                            @Html.TextBoxFor(model => model.Web, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.Web)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Email)
                                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.Email)
                                        </div>
                                    </div>
                                </fieldset>

                                <fieldset class="fieldsetCustom">
                                    <legend class="legendCustom">Tax</legend>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.VATTINNo)
                                            @Html.TextBoxFor(model => model.VATTINNo, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.VATTINNo)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ServiceTaxNo)
                                            @Html.TextBoxFor(model => model.ServiceTaxNo, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.ServiceTaxNo)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ExciseCode)
                                            @Html.TextBoxFor(model => model.ExciseCode, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.ExciseCode)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.PANNo)
                                            @Html.TextBoxFor(model => model.PANNo, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.PANNo)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.CST)
                                            @Html.TextBoxFor(model => model.CST, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.CST)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.IncomeTaxNo)
                                            @Html.TextBoxFor(model => model.IncomeTaxNo, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.IncomeTaxNo)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.CreditPeriod)
                                            @Html.TextBoxFor(model => model.CreditPeriod, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.CreditPeriod)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.DateOfAssociation)
                                            @Html.TextBoxFor(model => model.DateOfAssociation, new { @class = "form-control datepicker", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.DateOfAssociation)
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.EligableForAdv)
                                            @Html.CheckBoxFor(model => model.EligableForAdv, new { @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.EligableForAdv)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.GSTIN)
                                            @Html.TextBoxFor(model => model.GSTIN, new { @class = "form-control", @disabled = "disabled" })
                                        </div>
                                    </div>
                                </fieldset>

                                <fieldset class="fieldsetCustom">
                                    <legend class="legendCustom">Bank Information</legend>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.BankName)
                                            @Html.TextBoxFor(model => model.BankName, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.BankName)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.BankAcNo)
                                            @Html.TextBoxFor(model => model.BankAcNo, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.BankAcNo)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.RTGSCODE)
                                            @Html.TextBoxFor(model => model.RTGSCODE, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.RTGSCODE)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.BankBranch)
                                            @Html.TextBoxFor(model => model.BankBranch, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.BankBranch)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.MICRNo)
                                            @Html.TextBoxFor(model => model.MICRNo, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.MICRNo)
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.IFSCCODE)
                                            @Html.TextBoxFor(model => model.IFSCCODE, new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.IFSCCODE)
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
}
@*The Modal*@
<div id="ViewModal" class="modal slideModal">
    @*Modal content*@
    <div class="modal-content slideContent">
        <span class="close slideClose" onclick="closeModal()"> &#x2715 </span>
        <div id="slideshow-container">
            <!--Slidshow-->
        </div>
        <div>
            <a class="prev slide-prev" onclick="plusSlides(-1)">❮</a>
            <a class="next slide-next" onclick="plusSlides(1)">❯</a>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var appSetting = '@BISERP.Common.Constants.ScandocUrl';
        let supplierData = [];
        loadSupplierList();
        $("#Approved").prop('checked', true);

        $.ajax({
            type: "GET",
            url: "/Master/AllStates",
            datatype: "Json",
            success: function (data) {
                $.each(data, function (index, value) {
                    $('#ddlState').append('<option value="' + value.ID + '">' + value.StateName + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: "/Master/AllCountry",
            datatype: "Json",
            success: function (data) {
                $.each(data, function (index, value) {
                    $('#ddlCountry').append('<option value="' + value.ID + '">' + value.CountryName + '</option>');
                });
            }
        });

        $('#ddlState').change(function () {
            GetStatesCity();
        });

        function GetStatesCity(cityId) {
            $('#ddlCity').empty();
            var stateID = $('#ddlState').val();
            $.ajax({
                type: "GET",
                url: "/Master/GetCityById",
                datatype: "Json",
                data: { stateId: stateID },
                success: function (data) {
                    if (data.length > 0) {
                        $.each(data, function (index, value) {
                            $('#ddlCity').append('<option value="' + value.ID + '">' + value.CityName + '</option>');
                        });
                    }
                    else {
                        $('#ddlCity').append('<option value="0">No Data Found</option>');
                    }
                    if (cityId) {
                        $('#ddlCity').val(cityId)
                    } else {
                        $('#ddlCity').val("");
                    }
                }
            });
        }

        function loadSupplierList() {
            $.ajax({
                type: 'GET',
                url: "/SupplierMaster/AllSupplier",
                dataType: "json",
                success: function (data) {
                    if (data.success) {
                        supplierData = data.records;
                    }
                    else {
                        ShowAlert("error", data.Messsage);
                    }
                }

            });
        }

        $("#btnSave").click(function () {
            let status = $("[name='Status']:checked").val()
            let deactive, reject;
            if (status === '1') {
                deactive = false;
                reject = false;
            }
            else if (status === '2') {
                deactive = true;
                reject = true
            }
            $.ajax({
                type: "POST", //HTTP POST Method
                url: '/SupplierMaster/AuthCanSupplier', // Controller/View
                data: {
                    ID: $("#ID").val(), //Reading text box values using Jquery
                    Name: $("#Name").val(),
                    Code: $("#Code").val(),
                    Deactive: deactive,
                    Rejected: reject,
                    Remark: $("#Remark").val()
                },
                success: function (msg) {
                    if (msg.success) {
                        ShowAlert("success", "Supplier record Updated successfully to system.");
                        ClearForm(); $("#ddlCategory").val(0); $("#ddlSupplier").empty();
                        loadSupplierList();
                    }
                    else {
                        ShowAlert("error", msg.Message);
                    }
                },

            });
        });

        $('#ddlCategory').change(function () {
            $('#ddlSupplier').empty();
            let status = $('#ddlCategory').val();
            ClearForm();

            let unapproved = supplierData.filter(req => req.Deactive === true && req.Rejected === false);
            let approved = supplierData.filter(req => req.Deactive === false && req.Rejected === false);
            let rejected = supplierData.filter(req => req.Rejected === true && req.Deactive === true);
            $('#ddlSupplier').append('<option value="0"> Select Supplier</option>');

            if (status === "1") {

                $.each(approved, function (index, value) {
                    $('#ddlSupplier').append('<option value="' + value.ID + '">' + value.Name + '</option>');
                });
            }
            else if (status === "2") {
                $.each(unapproved, function (index, value) {
                    $('#ddlSupplier').append('<option value="' + value.ID + '">' + value.Name + '</option>');
                });
            }
            else if (status === "3") {
                $.each(rejected, function (index, value) {
                    $('#ddlSupplier').append('<option value="' + value.ID + '">' + value.Name + '</option>');
                });
            }
        });

        $('#ddlSupplier').change(function () {
            let ID = $('#ddlSupplier').val();
            $.ajax({
                type: 'GET',
                url: "/SupplierMaster/GetSupplierById",
                dataType: "json",
                data: { id: ID },
                success: function (data) {
                    if (data) {
                        $("#ID").val(data.ID);
                        $("#Code").val(data.Code);
                        $("#Name").val(data.Name);
                        $("#Society").val(data.Society);
                        $("#Street").val(data.Street);
                        $("#Landmark").val(data.Landmark);
                        $("#Village").val(data.Village);
                        $("#Pincode").val(data.Pincode);
                        $("#ddlState").val(data.State);
                        $("#ddlCountry").val(data.Country);
                        GetStatesCity(data.City);
                        $("#ContactPerson").val(data.ContactPerson);
                        $("#ContactDesignation").val(data.ContactDesignation);
                        $("#Phone1").val(data.Phone1); $("#Phone2").val(data.Phone2);
                        $("#CellPhone").val(data.CellPhone); $("#Fax").val(data.Fax);
                        $("#Web").val(data.Web); $("#Email").val(data.Email);
                        $("#VATTINNo").val(data.VATTINNo);
                        $("#ServiceTaxNo").val(data.ServiceTaxNo);
                        $("#ExciseCode").val(data.ExciseCode);
                        $("#PANNo").val(data.PANNo);
                        $("#CST").val(data.CST);
                        $("#IncomeTaxNo").val(data.IncomeTaxNo);
                        $("#RTGSCODE").val(data.RTGSCODE);
                        $("#IFSCCODE").val(data.IFSCCODE);
                        $("#CreditPeriod").val(data.CreditPeriod);
                        $("#DateOfAssociation").val(data.strDateOfAssociation);
                        $("#EligableForAdv").prop('checked', data.EligableForAdv);
                        $("#ExportCode").val(data.ExportCode);
                        $("#BankName").val(data.BankName);
                        $("#BankAcNo").val(data.BankAcNo);
                        $("#MICRNo").val(data.MICRNo);
                        $("#BankBranch").val(data.BankBranch);
                        $("#Note").val(data.Note);
                        $("#GSTIN").val(data.GSTIN);
                        if (data.Deactive === false) {
                            $("#Approved").prop('checked', 'true');
                        }
                        if (data.Rejected === true) {
                            $("#Rejected").prop('checked', 'true');
                        }
                        $("#Remark").val(data.Remark);


                    } else {
                        ShowAlert("error", 'Data Not Found');

                    }
                }
            });
        });
        // ********View Image modal ******//
        $("#btnShowAttachments").click(function () {
            let SupplierId = $('#ddlSupplier').val();
            $.ajax({
                type: "GET",
                url: "/ScanDoc/ScanDoc/GetScanDocUrl",
                data: { FileId: SupplierId, ScanDocSubTypeId: 16 },
                datatype: "Json",
                success: function (data) {
                    if (data != '') {
                        ViewSlideShow(data, 'slideshow-container', appSetting);
                    }
                    else {
                        ShowAlert("error", "No Documents Found")
                    }
                }
            });
        })


        // this function is for download all Images and Videos
        $(document).on("click", "#btnDownloadAttachment", function (e) {
            let SupplierId = $('#ddlSupplier').val();

            if (SupplierId > 0) {
                let supplierCode = $("#Code").val();
                let supplierName = $("#Name").val();
                let folder = supplierCode + '_' + supplierName;
                $.ajax({
                    type: "GET",
                    url: "/ScanDoc/ScanDoc/GetScanDocUrl",
                    data: { FileId: SupplierId, ScanDocSubTypeId: 16 },
                    datatype: "Json",
                    success: function (data) {
                        if (data != '') {
                            DownloadFiles(data, e, appSetting, folder)
                        }
                        else {
                            ShowAlert("error", "No Documents Found")
                        }
                    }
                });
            }
            else {
                ShowAlert("error", " Please Select Supplier Before download file !")
                return;
            }

        });

    });

    /////*********Image Slide Show in Modal**********************//
    let ImgIndex = 1;

    function plusSlides(n) {
            showGallary(ImgIndex += n);
        }
    function showGallary(n) {
        let i;
        let ImgSlides = document.getElementsByClassName("imgSlide");
        let video = document.getElementById("video");
        if (n > ImgSlides.length) { ImgIndex = 1 }
        if (n < 1) { ImgIndex = ImgSlides.length }
        for (i = 0; i < ImgSlides.length; i++) {
            ImgSlides[i].style.display = "none";
        }
        ImgSlides[ImgIndex - 1].style.display = "block";
        if (video) {
            video.play();
        }
    }

    function closeModal() {
            $("#slideshow-container").empty();
            $("#ViewModal").css('display', 'none');
    }
    //***********Close SlideShow Modal*********************////

    
    function ClearForm() {
        $("#ID").val(""); $("#Name").val(""); $("#Code").val("");$("#Society").val(""); $("#Street").val(""); $("#Landmark").val(""); $("#Village").val("");
        $("#ddlCity").empty(); $("#Pincode").val("");
        $("#ddlState").val(""); $("#ddlCountry").val(""); $("#ContactPerson").val(""); $("#ContactDesignation").val(""); $("#Phone1").val(""); $("#Phone2").val(""); $("#CellPhone").val(""); $("#Fax").val(""); $("#Web").val(""); $("#Email").val("");
        $("#VATTINNo").val(""); $("#ServiceTaxNo").val(""); $("#ExciseCode").val(""); $("#PANNo").val(""); $("#CST").val(""); $("#IncomeTaxNo").val(""); $("#RTGSCODE").val(""); $("#IFSCCODE").val(""); $("#CreditPeriod").val("");
        $("#EligableForAdv").prop('checked', false); $("#ExportCode").val(""); $("#BankName").val(""); $("#BankAcNo").val(""); $("#MICRNo").val(""); $("#BankBranch").val(""); $("#Note").val("");
        $("#DateOfAssociation").datepicker().datepicker("setDate", new Date()); $("#GSTIN").val(""); $("#preApproveImg").empty(); $("#appendImg").empty();
        $("#Remark").val("");
        $("#ddlSupplier").empty();
        $("#Approved").prop('checked', true);
    }
    $("#btnReset").click(function(){
        ClearForm();
        $("#ddlCategory").val(0); 
    })
</script>